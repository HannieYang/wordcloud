{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Util, Action } from '@antv/g2';\nimport { isEqual } from '@antv/util';\nimport { transform } from '../../../../utils/matrix';\n/**\n * 饼图 图例激活 action\n */\n\nvar PieLegendAction =\n/** @class */\nfunction (_super) {\n  __extends(PieLegendAction, _super);\n\n  function PieLegendAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 获取激活的图形元素\n   */\n\n\n  PieLegendAction.prototype.getActiveElements = function () {\n    var delegateObject = Util.getDelegationObject(this.context);\n\n    if (delegateObject) {\n      var view = this.context.view;\n      var component = delegateObject.component,\n          item_1 = delegateObject.item;\n      var field_1 = component.get('field');\n\n      if (field_1) {\n        var elements = view.geometries[0].elements;\n        return elements.filter(function (ele) {\n          return ele.getModel().data[field_1] === item_1.value;\n        });\n      }\n    }\n\n    return [];\n  };\n  /**\n   * 获取激活的标签\n   */\n\n\n  PieLegendAction.prototype.getActiveElementLabels = function () {\n    var view = this.context.view;\n    var elements = this.getActiveElements();\n    var labels = view.geometries[0].labelsContainer.getChildren();\n    return labels.filter(function (label) {\n      return elements.find(function (ele) {\n        return isEqual(ele.getData(), label.get('data'));\n      });\n    });\n  };\n\n  PieLegendAction.prototype.transfrom = function (offset) {\n    if (offset === void 0) {\n      offset = 7.5;\n    }\n\n    var elements = this.getActiveElements();\n    var elementLabels = this.getActiveElementLabels();\n    elements.forEach(function (element, idx) {\n      var labelShape = elementLabels[idx];\n      var coordinate = element.geometry.coordinate;\n\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        var _a = Util.getAngle(element.getModel(), coordinate),\n            startAngle = _a.startAngle,\n            endAngle = _a.endAngle;\n\n        var middleAngle = (startAngle + endAngle) / 2;\n        var r = offset;\n        var x = r * Math.cos(middleAngle);\n        var y = r * Math.sin(middleAngle);\n        element.shape.setMatrix(transform([['t', x, y]]));\n        labelShape.setMatrix(transform([['t', x, y]]));\n      }\n    });\n  };\n\n  PieLegendAction.prototype.active = function () {\n    this.transfrom();\n  };\n  /**\n   * 激活态还原\n   */\n\n\n  PieLegendAction.prototype.reset = function () {\n    this.transfrom(0);\n  };\n\n  return PieLegendAction;\n}(Action);\n\nexport { PieLegendAction };","map":{"version":3,"mappings":"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","names":["Util","Action","isEqual","transform","__extends","PieLegendAction","delegateObject","getDelegationObject","context","view","item_1","field_1","component","get","elements","geometries","filter","ele","getModel","data","value","getActiveElements","labels","labelsContainer","getChildren","label","find","getData","offset","elementLabels","getActiveElementLabels","forEach","element","idx","labelShape","coordinate","geometry","isPolar","isTransposed","getAngle","startAngle","endAngle","middleAngle","r","x","Math","cos","y","sin","shape","setMatrix","transfrom"],"sourceRoot":"","sources":["../../../../../src/plots/pie/interactions/actions/legend-active.ts"],"sourcesContent":["import { IElement, IGroup } from '@antv/g-base';\nimport { Util, Element, Action } from '@antv/g2';\nimport { isEqual } from '@antv/util';\nimport { transform } from '../../../../utils/matrix';\n\n/**\n * 饼图 图例激活 action\n */\nexport class PieLegendAction extends Action {\n  /**\n   * 获取激活的图形元素\n   */\n  private getActiveElements(): Element[] {\n    const delegateObject = Util.getDelegationObject(this.context);\n    if (delegateObject) {\n      const view = this.context.view;\n      const { component, item } = delegateObject;\n      const field = component.get('field');\n      if (field) {\n        const elements = view.geometries[0].elements;\n        return elements.filter((ele) => ele.getModel().data[field] === item.value);\n      }\n    }\n    return [];\n  }\n\n  /**\n   * 获取激活的标签\n   */\n  private getActiveElementLabels(): (IElement | IGroup)[] {\n    const view = this.context.view;\n    const elements = this.getActiveElements();\n    const labels = view.geometries[0].labelsContainer.getChildren();\n    return labels.filter((label) => elements.find((ele) => isEqual(ele.getData(), label.get('data'))));\n  }\n\n  protected transfrom(offset: number = 7.5) {\n    const elements = this.getActiveElements();\n    const elementLabels = this.getActiveElementLabels();\n    elements.forEach((element, idx) => {\n      const labelShape = elementLabels[idx];\n      const coordinate = element.geometry.coordinate;\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        const { startAngle, endAngle } = Util.getAngle(element.getModel(), coordinate);\n        const middleAngle = (startAngle + endAngle) / 2;\n        const r = offset;\n        const x = r * Math.cos(middleAngle);\n        const y = r * Math.sin(middleAngle);\n        element.shape.setMatrix(transform([['t', x, y]]));\n        labelShape.setMatrix(transform([['t', x, y]]));\n      }\n    });\n  }\n\n  public active() {\n    this.transfrom();\n  }\n\n  /**\n   * 激活态还原\n   */\n  public reset() {\n    this.transfrom(0);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}