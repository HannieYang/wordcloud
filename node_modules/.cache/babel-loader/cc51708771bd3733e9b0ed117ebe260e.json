{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport RangeFilter from './range-filter';\nimport { getSilbings } from '../util';\n/**\n * 数据范围过滤，但不在当前的 view 上生效，而在当前的 view 同一层级的其他 views 上生效，用于实现联动过滤。\n * @ignore\n */\n\nvar SiblingFilter =\n/** @class */\nfunction (_super) {\n  __extends(SiblingFilter, _super);\n\n  function SiblingFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 对 view 进行过滤\n   * @param view\n   * @param field\n   * @param filter\n   */\n\n\n  SiblingFilter.prototype.filterView = function (view, field, filter) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      sibling.filter(field, filter);\n    });\n  };\n  /**\n   * 重新渲染\n   * @param view\n   */\n\n\n  SiblingFilter.prototype.reRender = function (view) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      sibling.render(true);\n    });\n  };\n\n  return SiblingFilter;\n}(RangeFilter);\n\nexport default SiblingFilter;","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,QAAqB,YAArB;AAGA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAEA;;;;;AAIA;AAAA;AAAA;EAA4BC;;EAA5B;;EAwBC;EAvBC;;;;;;;;EAMUC,qCAAV,UAAqBC,IAArB,EAAiCC,KAAjC,EAAgDC,MAAhD,EAAuE;IACrE,IAAMC,QAAQ,GAAGN,WAAW,CAACG,IAAD,CAA5B;IACAL,IAAI,CAACQ,QAAD,EAAW,UAACC,OAAD,EAAQ;MACrBA,OAAO,CAACF,MAAR,CAAeD,KAAf,EAAsBC,MAAtB;IACD,CAFG,CAAJ;EAGD,CALS;EAOV;;;;;;EAIUH,mCAAV,UAAmBC,IAAnB,EAA6B;IAC3B,IAAMG,QAAQ,GAAGN,WAAW,CAACG,IAAD,CAA5B;IACAL,IAAI,CAACQ,QAAD,EAAW,UAACC,OAAD,EAAQ;MACrBA,OAAO,CAACC,MAAR,CAAe,IAAf;IACD,CAFG,CAAJ;EAGD,CALS;;EAMZ;AAAC,CAxBD,CAA4BT,WAA5B;;AA0BA,eAAeG,aAAf","names":["each","RangeFilter","getSilbings","__extends","SiblingFilter","view","field","filter","siblings","sibling","render"],"sourceRoot":"","sources":["../../../../src/interaction/action/data/sibling-filter.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { View } from '../../../chart';\nimport { FilterCondition } from '../../../interface';\nimport RangeFilter from './range-filter';\n\nimport { getSilbings } from '../util';\n\n/**\n * 数据范围过滤，但不在当前的 view 上生效，而在当前的 view 同一层级的其他 views 上生效，用于实现联动过滤。\n * @ignore\n */\nclass SiblingFilter extends RangeFilter {\n  /**\n   * 对 view 进行过滤\n   * @param view\n   * @param field\n   * @param filter\n   */\n  protected filterView(view: View, field: string, filter: FilterCondition) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.filter(field, filter);\n    });\n  }\n\n  /**\n   * 重新渲染\n   * @param view\n   */\n  protected reRender(view: View) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.render(true);\n    });\n  }\n}\n\nexport default SiblingFilter;\n"]},"metadata":{},"sourceType":"module"}