{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { isEqual, get, deepMix } from '@antv/util';\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport Action from '../../base';\nimport { HtmlTooltip } from '../../../../dependents';\n/**\n * 用于组件文本省略后需要展示完整信息的 Tooltip Action\n * @ignore\n */\n\nvar EllipsisText =\n/** @class */\nfunction (_super) {\n  __extends(EllipsisText, _super);\n\n  function EllipsisText() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.timeStamp = 0;\n    return _this;\n  }\n\n  EllipsisText.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.tooltip && this.tooltip.destroy();\n  };\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n\n\n  EllipsisText.prototype.show = function () {\n    var context = this.context;\n    var ev = context.event;\n    var lastTimeStamp = this.timeStamp;\n    var timeStamp = +new Date();\n\n    if (timeStamp - lastTimeStamp > 16) {\n      var preLoc = this.location;\n      var curLoc = {\n        x: ev.x,\n        y: ev.y\n      };\n\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(curLoc);\n      }\n\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  };\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n\n\n  EllipsisText.prototype.hide = function () {\n    this.hideTooltip();\n    this.location = null;\n  };\n\n  EllipsisText.prototype.showTooltip = function (curLoc) {\n    var context = this.context;\n    var ev = context.event;\n    var target = ev.target;\n\n    if (target && target.get('tip')) {\n      if (!this.tooltip) {\n        this.renderTooltip(); // 延迟生成\n      }\n\n      var tipContent = target.get('tip'); // 展示 tooltip\n\n      this.tooltip.update(__assign({\n        title: tipContent\n      }, curLoc));\n      this.tooltip.show();\n    }\n  };\n\n  EllipsisText.prototype.hideTooltip = function () {\n    this.tooltip && this.tooltip.hide();\n  };\n\n  EllipsisText.prototype.renderTooltip = function () {\n    var _a;\n\n    var view = this.context.view;\n    var canvas = view.canvas;\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var theme = view.getTheme();\n    var tooltipStyles = get(theme, ['components', 'tooltip', 'domStyles'], {}); // 获取 tooltip 样式\n\n    var tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region: region,\n      visible: false,\n      crosshairs: null,\n      domStyles: __assign({}, deepMix({}, tooltipStyles, (_a = {}, // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n      _a[TOOLTIP_CSS_CONST.CONTAINER_CLASS] = {\n        'max-width': '50%'\n      }, _a[TOOLTIP_CSS_CONST.TITLE_CLASS] = {\n        'word-break': 'break-all'\n      }, _a)))\n    });\n    tooltip.init();\n    tooltip.setCapture(false); // 不允许捕获事件\n\n    this.tooltip = tooltip;\n  };\n\n  return EllipsisText;\n}(Action);\n\nexport default EllipsisText;","map":{"version":3,"mappings":"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","names":["isEqual","get","deepMix","TOOLTIP_CSS_CONST","Action","HtmlTooltip","__extends","_this","EllipsisText","_super","destroy","call","tooltip","context","ev","event","lastTimeStamp","timeStamp","Date","preLoc","location","curLoc","x","y","showTooltip","hideTooltip","target","renderTooltip","tipContent","update","__assign","title","show","hide","view","canvas","region","start","end","theme","getTheme","tooltipStyles","parent","parentNode","visible","crosshairs","domStyles","_a","CONTAINER_CLASS","TITLE_CLASS","init","setCapture"],"sourceRoot":"","sources":["../../../../../src/interaction/action/component/tooltip/ellipsis-text.ts"],"sourcesContent":["import { isEqual, get, deepMix } from '@antv/util';\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { Point } from '../../../../interface';\nimport Action from '../../base';\nimport { HtmlTooltip } from '../../../../dependents';\n\n/**\n * 用于组件文本省略后需要展示完整信息的 Tooltip Action\n * @ignore\n */\nexport default class EllipsisText extends Action {\n  private timeStamp: number = 0;\n  private location: Point;\n  private tooltip;\n\n  public destroy() {\n    super.destroy();\n    this.tooltip && this.tooltip.destroy();\n  }\n\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  public show() {\n    const context = this.context;\n    const ev = context.event;\n    const lastTimeStamp = this.timeStamp;\n    const timeStamp = +new Date();\n\n    if (timeStamp - lastTimeStamp > 16) {\n      const preLoc = this.location;\n      const curLoc = { x: ev.x, y: ev.y };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  }\n\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  public hide() {\n    this.hideTooltip();\n    this.location = null;\n  }\n\n  protected showTooltip(curLoc: Point) {\n    const context = this.context;\n    const ev = context.event;\n    const target = ev.target;\n\n    if (target && target.get('tip')) {\n      if (!this.tooltip) {\n        this.renderTooltip(); // 延迟生成\n      }\n      const tipContent = target.get('tip');\n      // 展示 tooltip\n      this.tooltip.update({\n        title: tipContent,\n        ...curLoc,\n      });\n      this.tooltip.show();\n    }\n  }\n\n  protected hideTooltip() {\n    this.tooltip && this.tooltip.hide();\n  }\n\n  private renderTooltip() {\n    const view = this.context.view;\n    const canvas = view.canvas;\n\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n\n    const theme = view.getTheme();\n    const tooltipStyles = get(theme, ['components', 'tooltip', 'domStyles'], {}); // 获取 tooltip 样式\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      visible: false,\n      crosshairs: null,\n      domStyles: {\n        ...deepMix({}, tooltipStyles, {\n          // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n          [TOOLTIP_CSS_CONST.CONTAINER_CLASS]: { 'max-width': '50%' },\n          [TOOLTIP_CSS_CONST.TITLE_CLASS]: { 'word-break': 'break-all' },\n        }),\n      },\n    });\n    tooltip.init();\n    tooltip.setCapture(false); // 不允许捕获事件\n    this.tooltip = tooltip;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}