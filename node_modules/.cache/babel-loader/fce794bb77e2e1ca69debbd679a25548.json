{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { __extends } from \"tslib\";\nimport { getElements, getElementValue } from '../util';\nimport Highlight from './highlight';\n/**\n * Highlight color\n * @ignore\n */\n\nvar HighlightColor =\n/** @class */\nfunction (_super) {\n  __extends(HighlightColor, _super);\n\n  function HighlightColor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HighlightColor.prototype.setStateByElement = function (element, enable) {\n    var view = this.context.view;\n    var colorAttr = element.geometry.getAttribute('color');\n\n    if (!colorAttr) {\n      return;\n    }\n\n    var scale = view.getScaleByField(colorAttr.getFields()[0]);\n    var value = getElementValue(element, scale.field);\n    var elements = getElements(view);\n    var highlightElements = elements.filter(function (el) {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, function (el) {\n      return highlightElements.includes(el);\n    }, enable);\n  };\n\n  return HighlightColor;\n}(Highlight);\n\nexport default HighlightColor;","map":{"version":3,"mappings":";;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,SAA7C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;;;;;AAIA;AAAA;AAAA;EAA6BC;;EAA7B;;EAeC;;EAdWC,6CAAV,UAA4BC,OAA5B,EAA8CC,MAA9C,EAA6D;IAC3D,IAAMC,IAAI,GAAG,KAAKC,OAAL,CAAaD,IAA1B;IACA,IAAME,SAAS,GAAGJ,OAAO,CAACK,QAAR,CAAiBC,YAAjB,CAA8B,OAA9B,CAAlB;;IACA,IAAI,CAACF,SAAL,EAAgB;MACd;IACD;;IACD,IAAMG,KAAK,GAAGL,IAAI,CAACM,eAAL,CAAqBJ,SAAS,CAACK,SAAV,GAAsB,CAAtB,CAArB,CAAd;IACA,IAAMC,KAAK,GAAGd,eAAe,CAACI,OAAD,EAAUO,KAAK,CAACI,KAAhB,CAA7B;IACA,IAAMC,QAAQ,GAAGjB,WAAW,CAACO,IAAD,CAA5B;IACA,IAAMW,iBAAiB,GAAGD,QAAQ,CAACE,MAAT,CAAgB,UAACC,EAAD,EAAG;MAC3C,OAAOnB,eAAe,CAACmB,EAAD,EAAKR,KAAK,CAACI,KAAX,CAAf,KAAqCD,KAA5C;IACD,CAFyB,CAA1B;IAGA,KAAKM,cAAL,CAAoBJ,QAApB,EAA8B,UAACG,EAAD,EAAG;MAAK,wBAAiB,CAACE,QAAlB,CAA2BF,EAA3B;IAA8B,CAApE,EAAsEd,MAAtE;EACD,CAbS;;EAcZ;AAAC,CAfD,CAA6BJ,SAA7B;;AAiBA,eAAeE,cAAf","names":["getElements","getElementValue","Highlight","__extends","HighlightColor","element","enable","view","context","colorAttr","geometry","getAttribute","scale","getScaleByField","getFields","value","field","elements","highlightElements","filter","el","setHighlightBy","includes"],"sourceRoot":"","sources":["../../../../src/interaction/action/element/highlight-by-color.ts"],"sourcesContent":["import Element from '../../../geometry/element/';\nimport { getElements, getElementValue } from '../util';\nimport Highlight from './highlight';\n\n/**\n * Highlight color\n * @ignore\n */\nclass HighlightColor extends Highlight {\n  protected setStateByElement(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const colorAttr = element.geometry.getAttribute('color');\n    if (!colorAttr) {\n      return;\n    }\n    const scale = view.getScaleByField(colorAttr.getFields()[0]);\n    const value = getElementValue(element, scale.field);\n    const elements = getElements(view);\n    const highlightElements = elements.filter((el) => {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, (el) => highlightElements.includes(el), enable);\n  }\n}\n\nexport default HighlightColor;\n"]},"metadata":{},"sourceType":"module"}