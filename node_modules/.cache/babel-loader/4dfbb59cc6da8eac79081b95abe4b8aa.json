{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, get, isUndefined } from '@antv/util';\nimport { DIRECTION, COMPONENT_TYPE, LAYER } from '../../constant';\nimport { CircleAxis, CircleGrid, LineAxis, LineGrid } from '../../dependents';\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { getAxisDirection, getAxisFactorByRegion, getAxisRegion, getAxisThemeCfg, getAxisTitleOptions, getAxisTitleText, getCircleAxisCenterRadius, isVertical } from '../../util/axis';\nimport { getAxisOption } from '../../util/axis';\nimport { getCircleGridItems, getGridThemeCfg, getLineGridItems, showGrid } from '../../util/grid';\nimport { omit } from '../../util/helper';\nimport { Controller } from './base'; // update 组件的时候，忽略的数据更新\n\nvar OMIT_CFG = ['container']; // 坐标轴默认动画配置\n\nvar AXIS_DEFAULT_ANIMATE_CFG = __assign(__assign({}, DEFAULT_ANIMATE_CFG), {\n  appear: null\n});\n/**\n * @ignore\n * G2 Axis controller, will:\n *  - create component\n *    - axis\n *    - grid\n *  - life circle\n */\n\n\nvar Axis =\n/** @class */\nfunction (_super) {\n  __extends(Axis, _super);\n\n  function Axis(view) {\n    var _this = _super.call(this, view) || this;\n    /** 使用 object 存储组件 */\n\n\n    _this.cache = new Map(); // 先创建 gridContainer，将 grid 放到 axis 底层\n\n    _this.gridContainer = _this.view.getLayer(LAYER.BG).addGroup();\n    _this.gridForeContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.axisContainer = _this.view.getLayer(LAYER.BG).addGroup();\n    _this.axisForeContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n    return _this;\n  }\n\n  Object.defineProperty(Axis.prototype, \"name\", {\n    get: function () {\n      return 'axis';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Axis.prototype.init = function () {};\n\n  Axis.prototype.render = function () {\n    this.update();\n  };\n  /**\n   * 更新组件布局，位置大小\n   */\n\n\n  Axis.prototype.layout = function () {\n    var _this = this;\n\n    var coordinate = this.view.getCoordinate();\n    each(this.getComponents(), function (co) {\n      var component = co.component,\n          direction = co.direction,\n          type = co.type,\n          extra = co.extra;\n      var dim = extra.dim,\n          scale = extra.scale,\n          alignTick = extra.alignTick;\n      var updated;\n\n      if (type === COMPONENT_TYPE.AXIS) {\n        if (coordinate.isPolar) {\n          if (dim === 'x') {\n            updated = coordinate.isTransposed ? getAxisRegion(coordinate, direction) : getCircleAxisCenterRadius(coordinate);\n          } else if (dim === 'y') {\n            updated = coordinate.isTransposed ? getCircleAxisCenterRadius(coordinate) : getAxisRegion(coordinate, direction);\n          }\n        } else {\n          updated = getAxisRegion(coordinate, direction);\n        }\n      } else if (type === COMPONENT_TYPE.GRID) {\n        if (coordinate.isPolar) {\n          var items = void 0;\n\n          if (coordinate.isTransposed) {\n            items = dim === 'x' ? getCircleGridItems(coordinate, _this.view.getYScales()[0], scale, alignTick, dim) : getLineGridItems(coordinate, scale, dim, alignTick);\n          } else {\n            items = dim === 'x' ? getLineGridItems(coordinate, scale, dim, alignTick) : getCircleGridItems(coordinate, _this.view.getXScale(), scale, alignTick, dim);\n          }\n\n          updated = {\n            items: items,\n            // coordinate 更新之后，center 也变化了\n            center: _this.view.getCoordinate().getCenter()\n          };\n        } else {\n          updated = {\n            items: getLineGridItems(coordinate, scale, dim, alignTick)\n          };\n        }\n      }\n\n      component.update(updated);\n    });\n  };\n  /**\n   * 更新 axis 组件\n   */\n\n\n  Axis.prototype.update = function () {\n    this.option = this.view.getOptions().axes;\n    var updatedCache = new Map();\n    this.updateXAxes(updatedCache);\n    this.updateYAxes(updatedCache); // 处理完成之后，销毁删除的\n    // 不在处理中的\n\n    var newCache = new Map();\n    this.cache.forEach(function (co, key) {\n      if (updatedCache.has(key)) {\n        newCache.set(key, co);\n      } else {\n        // 不存在，则是所有需要被销毁的组件\n        co.component.destroy();\n      }\n    }); // 更新缓存\n\n    this.cache = newCache;\n  };\n\n  Axis.prototype.clear = function () {\n    _super.prototype.clear.call(this);\n\n    this.cache.clear();\n    this.gridContainer.clear();\n    this.gridForeContainer.clear();\n    this.axisContainer.clear();\n    this.axisForeContainer.clear();\n  };\n\n  Axis.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.gridContainer.remove(true);\n    this.gridForeContainer.remove(true);\n    this.axisContainer.remove(true);\n    this.axisForeContainer.remove(true);\n  };\n  /**\n   * @override\n   */\n\n\n  Axis.prototype.getComponents = function () {\n    var co = [];\n    this.cache.forEach(function (value) {\n      co.push(value);\n    });\n    return co;\n  };\n  /**\n   * 更新 x axis\n   * @param updatedCache\n   */\n\n\n  Axis.prototype.updateXAxes = function (updatedCache) {\n    // x axis\n    var scale = this.view.getXScale();\n\n    if (!scale || scale.isIdentity) {\n      return;\n    }\n\n    var xAxisOption = getAxisOption(this.option, scale.field);\n\n    if (xAxisOption === false) {\n      return;\n    }\n\n    var direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);\n    var layer = LAYER.BG;\n    var dim = 'x';\n    var coordinate = this.view.getCoordinate();\n    var axisId = this.getId('axis', scale.field);\n    var gridId = this.getId('grid', scale.field);\n\n    if (coordinate.isRect) {\n      // 1. do axis update\n      var axis = this.cache.get(axisId); // 存在则更新\n\n      if (axis) {\n        var cfg = this.getLineAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      } // 2. do grid update\n\n\n      var grid = this.cache.get(gridId); // 存在则更新\n\n      if (grid) {\n        var cfg = this.getLineGridCfg(scale, xAxisOption, direction, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);\n\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else if (coordinate.isPolar) {\n      // 1. do axis update\n      var axis = this.cache.get(axisId); // 存在则更新\n\n      if (axis) {\n        var cfg = coordinate.isTransposed ? this.getLineAxisCfg(scale, xAxisOption, DIRECTION.RADIUS) : this.getCircleAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            // 默认不渲染转置极坐标下的坐标轴\n            return;\n          } else {\n            // 如果用户打开了隐藏的坐标轴 chart.axis(true)/chart.axis('x', true)\n            // 那么对于转置了的极坐标，半径轴显示的是 x 轴对应的数据\n            axis = this.createLineAxis(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim);\n        }\n\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      } // 2. do grid update\n\n\n      var grid = this.cache.get(gridId); // 存在则更新\n\n      if (grid) {\n        var cfg = coordinate.isTransposed ? this.getCircleGridCfg(scale, xAxisOption, DIRECTION.RADIUS, dim) : this.getLineGridCfg(scale, xAxisOption, DIRECTION.CIRCLE, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            return;\n          } else {\n            grid = this.createCircleGrid(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          // grid，极坐标下的 x 轴网格线沿着半径方向绘制\n          grid = this.createLineGrid(scale, xAxisOption, layer, DIRECTION.CIRCLE, dim);\n        }\n\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else {// helix and other, do not draw axis\n    }\n  };\n\n  Axis.prototype.updateYAxes = function (updatedCache) {\n    var _this = this; // y axes\n\n\n    var yScales = this.view.getYScales();\n    each(yScales, function (scale, idx) {\n      // @ts-ignore\n      if (!scale || scale.isIdentity) {\n        return;\n      }\n\n      var field = scale.field;\n      var yAxisOption = getAxisOption(_this.option, field);\n\n      if (yAxisOption !== false) {\n        var layer = LAYER.BG;\n        var dim = 'y';\n\n        var axisId = _this.getId('axis', field);\n\n        var gridId = _this.getId('grid', field);\n\n        var coordinate = _this.view.getCoordinate();\n\n        if (coordinate.isRect) {\n          var direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT); // 1. do axis update\n\n          var axis = _this.cache.get(axisId); // 存在则更新\n\n\n          if (axis) {\n            var cfg = _this.getLineAxisCfg(scale, yAxisOption, direction);\n\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            axis = _this.createLineAxis(scale, yAxisOption, layer, direction, dim);\n\n            _this.cache.set(axisId, axis);\n\n            updatedCache.set(axisId, axis);\n          } // 2. do grid update\n\n\n          var grid = _this.cache.get(gridId); // 存在则更新\n\n\n          if (grid) {\n            var cfg = _this.getLineGridCfg(scale, yAxisOption, direction, dim);\n\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            grid = _this.createLineGrid(scale, yAxisOption, layer, direction, dim);\n\n            if (grid) {\n              _this.cache.set(gridId, grid);\n\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else if (coordinate.isPolar) {\n          // 1. do axis update\n          var axis = _this.cache.get(axisId); // 存在则更新\n\n\n          if (axis) {\n            var cfg = coordinate.isTransposed ? _this.getCircleAxisCfg(scale, yAxisOption, DIRECTION.CIRCLE) : _this.getLineAxisCfg(scale, yAxisOption, DIRECTION.RADIUS); // @ts-ignore\n\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                axis = _this.createCircleAxis(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              axis = _this.createLineAxis(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            _this.cache.set(axisId, axis);\n\n            updatedCache.set(axisId, axis);\n          } // 2. do grid update\n\n\n          var grid = _this.cache.get(gridId); // 存在则更新\n\n\n          if (grid) {\n            var cfg = coordinate.isTransposed ? _this.getLineGridCfg(scale, yAxisOption, DIRECTION.CIRCLE, dim) : _this.getCircleGridCfg(scale, yAxisOption, DIRECTION.RADIUS, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                grid = _this.createLineGrid(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              grid = _this.createCircleGrid(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            if (grid) {\n              _this.cache.set(gridId, grid);\n\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else {// helix and other, do not draw axis\n        }\n      }\n    });\n  };\n  /**\n   * 创建 line axis\n   * @param scale\n   * @param option\n   * @param layer\n   * @param direction\n   * @param dim\n   */\n\n\n  Axis.prototype.createLineAxis = function (scale, option, layer, direction, dim) {\n    // axis\n    var axis = {\n      component: new LineAxis(this.getLineAxisCfg(scale, option, direction)),\n      layer: layer,\n      direction: direction === DIRECTION.RADIUS ? DIRECTION.NONE : direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: {\n        dim: dim,\n        scale: scale\n      }\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n    return axis;\n  };\n\n  Axis.prototype.createLineGrid = function (scale, option, layer, direction, dim) {\n    var cfg = this.getLineGridCfg(scale, option, direction, dim);\n\n    if (cfg) {\n      var grid = {\n        component: new LineGrid(cfg),\n        layer: layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim: dim,\n          scale: scale,\n          alignTick: get(cfg, 'alignTick', true)\n        }\n      };\n      grid.component.init();\n      return grid;\n    }\n  };\n\n  Axis.prototype.createCircleAxis = function (scale, option, layer, direction, dim) {\n    var axis = {\n      component: new CircleAxis(this.getCircleAxisCfg(scale, option, direction)),\n      layer: layer,\n      direction: direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: {\n        dim: dim,\n        scale: scale\n      }\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n    return axis;\n  };\n\n  Axis.prototype.createCircleGrid = function (scale, option, layer, direction, dim) {\n    var cfg = this.getCircleGridCfg(scale, option, direction, dim);\n\n    if (cfg) {\n      var grid = {\n        component: new CircleGrid(cfg),\n        layer: layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim: dim,\n          scale: scale,\n          alignTick: get(cfg, 'alignTick', true)\n        }\n      };\n      grid.component.init();\n      return grid;\n    }\n  };\n  /**\n   * generate line axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return line axis cfg\n   */\n\n\n  Axis.prototype.getLineAxisCfg = function (scale, axisOption, direction) {\n    var container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    var coordinate = this.view.getCoordinate();\n    var region = getAxisRegion(coordinate, direction);\n    var titleText = getAxisTitleText(scale, axisOption);\n    var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), direction); // the cfg order should be ensure\n\n    var optionWithTitle = get(axisOption, ['title']) ? deepMix({\n      title: {\n        style: {\n          text: titleText\n        }\n      }\n    }, {\n      title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title)\n    }, axisOption) : axisOption;\n    var cfg = deepMix(__assign(__assign({\n      container: container\n    }, region), {\n      ticks: scale.getTicks().map(function (tick) {\n        return {\n          id: \"\".concat(tick.tickValue),\n          name: tick.text,\n          value: tick.value\n        };\n      }),\n      verticalFactor: coordinate.isPolar ? getAxisFactorByRegion(region, coordinate.getCenter()) * -1 : getAxisFactorByRegion(region, coordinate.getCenter()),\n      theme: axisThemeCfg\n    }), axisThemeCfg, optionWithTitle);\n\n    var _a = this.getAnimateCfg(cfg),\n        animate = _a.animate,\n        animateOption = _a.animateOption;\n\n    cfg.animateOption = animateOption;\n    cfg.animate = animate; // 计算 verticalLimitLength\n\n    var isAxisVertical = isVertical(region); // TODO: 1 / 3 等默认值需要有一个全局的配置的地方\n\n    var verticalLimitLength = get(cfg, 'verticalLimitLength', isAxisVertical ? 1 / 3 : 1 / 2);\n\n    if (verticalLimitLength <= 1) {\n      // 配置的相对值，相对于画布\n      var canvasWidth = this.view.getCanvas().get('width');\n      var canvasHeight = this.view.getCanvas().get('height');\n      cfg.verticalLimitLength = verticalLimitLength * (isAxisVertical ? canvasWidth : canvasHeight);\n    }\n\n    return cfg;\n  };\n  /**\n   * generate line grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @param dim\n   * @return line grid cfg\n   */\n\n\n  Axis.prototype.getLineGridCfg = function (scale, axisOption, direction, dim) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n\n    var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), direction); // the cfg order should be ensure\n    // grid 动画以 axis 为准\n\n    var gridCfg = deepMix({\n      container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer\n    }, gridThemeCfg, get(axisOption, 'grid'), this.getAnimateCfg(axisOption));\n    gridCfg.items = getLineGridItems(this.view.getCoordinate(), scale, dim, get(gridCfg, 'alignTick', true));\n    return gridCfg;\n  };\n  /**\n   * generate circle axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle axis cfg\n   */\n\n\n  Axis.prototype.getCircleAxisCfg = function (scale, axisOption, direction) {\n    var container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    var coordinate = this.view.getCoordinate();\n    var ticks = scale.getTicks().map(function (tick) {\n      return {\n        id: \"\".concat(tick.tickValue),\n        name: tick.text,\n        value: tick.value\n      };\n    });\n\n    if (!scale.isCategory && Math.abs(coordinate.endAngle - coordinate.startAngle) === Math.PI * 2) {\n      // x 轴对应的值如果是非 cat 类型，在整圆的情况下坐标轴第一个和最后一个文本会重叠，默认只展示第一个文本\n      ticks.pop();\n    }\n\n    var titleText = getAxisTitleText(scale, axisOption);\n    var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), DIRECTION.CIRCLE); // the cfg order should be ensure\n\n    var optionWithTitle = get(axisOption, ['title']) ? deepMix({\n      title: {\n        style: {\n          text: titleText\n        }\n      }\n    }, {\n      title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title)\n    }, axisOption) : axisOption;\n    var cfg = deepMix(__assign(__assign({\n      container: container\n    }, getCircleAxisCenterRadius(this.view.getCoordinate())), {\n      ticks: ticks,\n      verticalFactor: 1,\n      theme: axisThemeCfg\n    }), axisThemeCfg, optionWithTitle);\n\n    var _a = this.getAnimateCfg(cfg),\n        animate = _a.animate,\n        animateOption = _a.animateOption;\n\n    cfg.animate = animate;\n    cfg.animateOption = animateOption;\n    return cfg;\n  };\n  /**\n   * generate circle grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle grid cfg\n   */\n\n\n  Axis.prototype.getCircleGridCfg = function (scale, axisOption, direction, dim) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    } // the cfg order should be ensure\n    // grid 动画以 axis 为准\n\n\n    var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), DIRECTION.RADIUS);\n    var gridCfg = deepMix({\n      container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n      center: this.view.getCoordinate().getCenter()\n    }, gridThemeCfg, get(axisOption, 'grid'), this.getAnimateCfg(axisOption));\n    var alignTick = get(gridCfg, 'alignTick', true);\n    var verticalScale = dim === 'x' ? this.view.getYScales()[0] : this.view.getXScale();\n    gridCfg.items = getCircleGridItems(this.view.getCoordinate(), verticalScale, scale, alignTick, dim); // the cfg order should be ensure\n    // grid 动画以 axis 为准\n\n    return gridCfg;\n  };\n\n  Axis.prototype.getId = function (name, key) {\n    var coordinate = this.view.getCoordinate(); // 坐标系类型也作为组件的 key\n\n    return \"\".concat(name, \"-\").concat(key, \"-\").concat(coordinate.type);\n  };\n\n  Axis.prototype.getAnimateCfg = function (cfg) {\n    return {\n      animate: this.view.getOptions().animate && get(cfg, 'animate'),\n      animateOption: cfg && cfg.animateOption ? deepMix({}, AXIS_DEFAULT_ANIMATE_CFG, cfg.animateOption) : AXIS_DEFAULT_ANIMATE_CFG\n    };\n  };\n\n  return Axis;\n}(Controller);\n\nexport default Axis;","map":{"version":3,"mappings":"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","names":["deepMix","each","get","isUndefined","DIRECTION","COMPONENT_TYPE","LAYER","CircleAxis","CircleGrid","LineAxis","LineGrid","DEFAULT_ANIMATE_CFG","getAxisDirection","getAxisFactorByRegion","getAxisRegion","getAxisThemeCfg","getAxisTitleOptions","getAxisTitleText","getCircleAxisCenterRadius","isVertical","getAxisOption","getCircleGridItems","getGridThemeCfg","getLineGridItems","showGrid","omit","Controller","OMIT_CFG","AXIS_DEFAULT_ANIMATE_CFG","appear","__extends","view","_super","_this","Map","gridContainer","getLayer","BG","addGroup","gridForeContainer","FORE","axisContainer","axisForeContainer","Object","Axis","update","coordinate","getCoordinate","getComponents","co","direction","type","extra","scale","alignTick","updated","AXIS","isPolar","dim","isTransposed","GRID","items","getYScales","getXScale","center","getCenter","component","option","getOptions","axes","updatedCache","updateXAxes","updateYAxes","newCache","cache","forEach","key","has","set","destroy","clear","call","remove","value","push","isIdentity","xAxisOption","field","BOTTOM","layer","axisId","getId","gridId","isRect","axis","cfg","getLineAxisCfg","createLineAxis","grid","getLineGridCfg","createLineGrid","RADIUS","getCircleAxisCfg","createCircleAxis","getCircleGridCfg","CIRCLE","createCircleGrid","yScales","idx","yAxisOption","LEFT","RIGHT","NONE","init","axisOption","container","region","titleText","axisThemeCfg","getTheme","optionWithTitle","title","style","text","ticks","getTicks","map","tick","id","tickValue","name","verticalFactor","theme","getAnimateCfg","animate","animateOption","isAxisVertical","verticalLimitLength","canvasWidth","getCanvas","canvasHeight","undefined","gridThemeCfg","gridCfg","isCategory","Math","abs","endAngle","startAngle","PI","pop","verticalScale","concat"],"sourceRoot":"","sources":["../../../src/chart/controller/axis.ts"],"sourcesContent":["import { deepMix, each, get, isUndefined } from '@antv/util';\nimport { DIRECTION, COMPONENT_TYPE, LAYER } from '../../constant';\nimport { CircleAxis, CircleGrid, IGroup, LineAxis, LineGrid, Scale } from '../../dependents';\nimport { AxisCfg, AxisOption, ComponentOption } from '../../interface';\n\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\n\nimport {\n  getAxisDirection,\n  getAxisFactorByRegion,\n  getAxisRegion,\n  getAxisThemeCfg,\n  getAxisTitleOptions,\n  getAxisTitleText,\n  getCircleAxisCenterRadius,\n  isVertical,\n} from '../../util/axis';\nimport { getAxisOption } from '../../util/axis';\nimport { getCircleGridItems, getGridThemeCfg, getLineGridItems, showGrid } from '../../util/grid';\nimport { omit } from '../../util/helper';\nimport View from '../view';\nimport { Controller } from './base';\n\ntype Option = Record<string, AxisOption> | boolean;\n\ntype Cache = Map<string, ComponentOption>;\n\n// update 组件的时候，忽略的数据更新\nconst OMIT_CFG = ['container'];\n\n// 坐标轴默认动画配置\nconst AXIS_DEFAULT_ANIMATE_CFG = {\n  ...DEFAULT_ANIMATE_CFG,\n  appear: null,\n};\n\n/**\n * @ignore\n * G2 Axis controller, will:\n *  - create component\n *    - axis\n *    - grid\n *  - life circle\n */\nexport default class Axis extends Controller<Option> {\n  /** the draw group of axis */\n  private axisContainer: IGroup;\n  private axisForeContainer: IGroup;\n  private gridContainer: IGroup;\n  private gridForeContainer: IGroup;\n\n  /** 使用 object 存储组件 */\n  private cache: Cache = new Map<string, ComponentOption>();\n\n  constructor(view: View) {\n    super(view);\n\n    // 先创建 gridContainer，将 grid 放到 axis 底层\n    this.gridContainer = this.view.getLayer(LAYER.BG).addGroup();\n    this.gridForeContainer = this.view.getLayer(LAYER.FORE).addGroup();\n    this.axisContainer = this.view.getLayer(LAYER.BG).addGroup();\n    this.axisForeContainer = this.view.getLayer(LAYER.FORE).addGroup();\n  }\n\n  public get name(): string {\n    return 'axis';\n  }\n\n  public init() {}\n\n  public render() {\n    this.update();\n  }\n\n  /**\n   * 更新组件布局，位置大小\n   */\n  public layout() {\n    const coordinate = this.view.getCoordinate();\n\n    each(this.getComponents(), (co: ComponentOption) => {\n      const { component, direction, type, extra } = co;\n      const { dim, scale, alignTick } = extra;\n\n      let updated;\n\n      if (type === COMPONENT_TYPE.AXIS) {\n        if (coordinate.isPolar) {\n          if (dim === 'x') {\n            updated = coordinate.isTransposed\n              ? getAxisRegion(coordinate, direction)\n              : getCircleAxisCenterRadius(coordinate);\n          } else if (dim === 'y') {\n            updated = coordinate.isTransposed\n              ? getCircleAxisCenterRadius(coordinate)\n              : getAxisRegion(coordinate, direction);\n          }\n        } else {\n          updated = getAxisRegion(coordinate, direction);\n        }\n      } else if (type === COMPONENT_TYPE.GRID) {\n        if (coordinate.isPolar) {\n          let items;\n          if (coordinate.isTransposed) {\n            items =\n              dim === 'x'\n                ? getCircleGridItems(coordinate, this.view.getYScales()[0], scale, alignTick, dim)\n                : getLineGridItems(coordinate, scale, dim, alignTick);\n          } else {\n            items =\n              dim === 'x'\n                ? getLineGridItems(coordinate, scale, dim, alignTick)\n                : getCircleGridItems(coordinate, this.view.getXScale(), scale, alignTick, dim);\n          }\n          updated = {\n            items,\n            // coordinate 更新之后，center 也变化了\n            center: this.view.getCoordinate().getCenter(),\n          };\n        } else {\n          updated = { items: getLineGridItems(coordinate, scale, dim, alignTick) };\n        }\n      }\n      component.update(updated);\n    });\n  }\n\n  /**\n   * 更新 axis 组件\n   */\n  public update() {\n    this.option = this.view.getOptions().axes;\n\n    const updatedCache = new Map<string, ComponentOption>();\n\n    this.updateXAxes(updatedCache);\n    this.updateYAxes(updatedCache);\n\n    // 处理完成之后，销毁删除的\n    // 不在处理中的\n    const newCache = new Map<string, ComponentOption>();\n\n    this.cache.forEach((co: ComponentOption, key: string) => {\n      if (updatedCache.has(key)) {\n        newCache.set(key, co);\n      } else {\n        // 不存在，则是所有需要被销毁的组件\n        co.component.destroy();\n      }\n    });\n\n    // 更新缓存\n    this.cache = newCache;\n  }\n\n  public clear() {\n    super.clear();\n\n    this.cache.clear();\n    this.gridContainer.clear();\n    this.gridForeContainer.clear();\n    this.axisContainer.clear();\n    this.axisForeContainer.clear();\n  }\n\n  public destroy() {\n    super.destroy();\n\n    this.gridContainer.remove(true);\n    this.gridForeContainer.remove(true);\n    this.axisContainer.remove(true);\n    this.axisForeContainer.remove(true);\n  }\n\n  /**\n   * @override\n   */\n  public getComponents(): ComponentOption[] {\n    const co = [];\n\n    this.cache.forEach((value: ComponentOption) => {\n      co.push(value);\n    });\n\n    return co;\n  }\n\n  /**\n   * 更新 x axis\n   * @param updatedCache\n   */\n  private updateXAxes(updatedCache: Cache) {\n    // x axis\n    const scale = this.view.getXScale();\n\n    if (!scale || scale.isIdentity) {\n      return;\n    }\n\n    const xAxisOption = getAxisOption(this.option, scale.field);\n    if (xAxisOption === false) {\n      return;\n    }\n\n    const direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);\n    const layer = LAYER.BG;\n    const dim = 'x';\n\n    const coordinate = this.view.getCoordinate();\n\n    const axisId = this.getId('axis', scale.field);\n    const gridId = this.getId('grid', scale.field);\n\n    if (coordinate.isRect) {\n      // 1. do axis update\n      let axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        const cfg = this.getLineAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n\n      // 2. do grid update\n      let grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        const cfg = this.getLineGridCfg(scale, xAxisOption, direction, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else if (coordinate.isPolar) {\n      // 1. do axis update\n      let axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        const cfg = coordinate.isTransposed\n          ? this.getLineAxisCfg(scale, xAxisOption, DIRECTION.RADIUS)\n          : this.getCircleAxisCfg(scale, xAxisOption, direction);\n\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            // 默认不渲染转置极坐标下的坐标轴\n            return;\n          } else {\n            // 如果用户打开了隐藏的坐标轴 chart.axis(true)/chart.axis('x', true)\n            // 那么对于转置了的极坐标，半径轴显示的是 x 轴对应的数据\n            axis = this.createLineAxis(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim);\n        }\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n\n      // 2. do grid update\n      let grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        const cfg = coordinate.isTransposed\n          ? this.getCircleGridCfg(scale, xAxisOption, DIRECTION.RADIUS, dim)\n          : this.getLineGridCfg(scale, xAxisOption, DIRECTION.CIRCLE, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            return;\n          } else {\n            grid = this.createCircleGrid(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          // grid，极坐标下的 x 轴网格线沿着半径方向绘制\n          grid = this.createLineGrid(scale, xAxisOption, layer, DIRECTION.CIRCLE, dim);\n        }\n\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else {\n      // helix and other, do not draw axis\n    }\n  }\n\n  private updateYAxes(updatedCache: Cache) {\n    // y axes\n    const yScales = this.view.getYScales();\n\n    each(yScales, (scale: Scale, idx: number) => {\n      // @ts-ignore\n      if (!scale || scale.isIdentity) {\n        return;\n      }\n      const { field } = scale;\n      const yAxisOption = getAxisOption(this.option, field);\n\n      if (yAxisOption !== false) {\n        const layer = LAYER.BG;\n        const dim = 'y';\n        const axisId = this.getId('axis', field);\n        const gridId = this.getId('grid', field);\n\n        const coordinate = this.view.getCoordinate();\n\n        if (coordinate.isRect) {\n          const direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT);\n\n          // 1. do axis update\n          let axis = this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            const cfg = this.getLineAxisCfg(scale, yAxisOption, direction);\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            axis = this.createLineAxis(scale, yAxisOption, layer, direction, dim);\n            this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n\n          // 2. do grid update\n          let grid = this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            const cfg = this.getLineGridCfg(scale, yAxisOption, direction, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            grid = this.createLineGrid(scale, yAxisOption, layer, direction, dim);\n            if (grid) {\n              this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else if (coordinate.isPolar) {\n          // 1. do axis update\n          let axis = this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            const cfg = coordinate.isTransposed\n              ? this.getCircleAxisCfg(scale, yAxisOption, DIRECTION.CIRCLE)\n              : this.getLineAxisCfg(scale, yAxisOption, DIRECTION.RADIUS);\n\n            // @ts-ignore\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                axis = this.createCircleAxis(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              axis = this.createLineAxis(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n\n          // 2. do grid update\n          let grid = this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            const cfg = coordinate.isTransposed\n              ? this.getLineGridCfg(scale, yAxisOption, DIRECTION.CIRCLE, dim)\n              : this.getCircleGridCfg(scale, yAxisOption, DIRECTION.RADIUS, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                grid = this.createLineGrid(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              grid = this.createCircleGrid(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            if (grid) {\n              this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else {\n          // helix and other, do not draw axis\n        }\n      }\n    });\n  }\n\n  /**\n   * 创建 line axis\n   * @param scale\n   * @param option\n   * @param layer\n   * @param direction\n   * @param dim\n   */\n  private createLineAxis(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    // axis\n    const axis = {\n      component: new LineAxis(this.getLineAxisCfg(scale, option, direction)),\n      layer,\n      direction: direction === DIRECTION.RADIUS ? DIRECTION.NONE : direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: { dim, scale },\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n\n    return axis;\n  }\n\n  private createLineGrid(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const cfg = this.getLineGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      const grid = {\n        component: new LineGrid(cfg),\n        layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim,\n          scale,\n          alignTick: get(cfg, 'alignTick', true),\n        },\n      };\n      grid.component.init();\n\n      return grid;\n    }\n  }\n\n  private createCircleAxis(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const axis = {\n      component: new CircleAxis(this.getCircleAxisCfg(scale, option, direction)),\n      layer,\n      direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: { dim, scale },\n    };\n    axis.component.set('field', scale.field);\n\n    axis.component.init();\n\n    return axis;\n  }\n\n  private createCircleGrid(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const cfg = this.getCircleGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      const grid = {\n        component: new CircleGrid(cfg),\n        layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim,\n          scale,\n          alignTick: get(cfg, 'alignTick', true),\n        },\n      };\n\n      grid.component.init();\n      return grid;\n    }\n  }\n\n  /**\n   * generate line axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return line axis cfg\n   */\n  private getLineAxisCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION) {\n    const container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    const coordinate = this.view.getCoordinate();\n    const region = getAxisRegion(coordinate, direction);\n    const titleText = getAxisTitleText(scale, axisOption);\n    const axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    const optionWithTitle = get(axisOption, ['title'])\n      ? deepMix(\n          { title: { style: { text: titleText } } },\n          { title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title) },\n          axisOption\n        )\n      : axisOption;\n\n    const cfg = deepMix(\n      {\n        container,\n        ...region,\n        ticks: scale.getTicks().map((tick) => ({ id: `${tick.tickValue}`, name: tick.text, value: tick.value })),\n        verticalFactor: coordinate.isPolar\n          ? getAxisFactorByRegion(region, coordinate.getCenter()) * -1\n          : getAxisFactorByRegion(region, coordinate.getCenter()),\n        theme: axisThemeCfg,\n      },\n      axisThemeCfg,\n      optionWithTitle\n    );\n    const { animate, animateOption } = this.getAnimateCfg(cfg);\n    cfg.animateOption = animateOption;\n    cfg.animate = animate;\n\n    // 计算 verticalLimitLength\n    const isAxisVertical = isVertical(region);\n    // TODO: 1 / 3 等默认值需要有一个全局的配置的地方\n    const verticalLimitLength = get(cfg, 'verticalLimitLength', isAxisVertical ? 1 / 3 : 1 / 2);\n    if (verticalLimitLength <= 1) {\n      // 配置的相对值，相对于画布\n      const canvasWidth = this.view.getCanvas().get('width');\n      const canvasHeight = this.view.getCanvas().get('height');\n      cfg.verticalLimitLength = verticalLimitLength * (isAxisVertical ? canvasWidth : canvasHeight);\n    }\n\n    return cfg;\n  }\n\n  /**\n   * generate line grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @param dim\n   * @return line grid cfg\n   */\n  private getLineGridCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION, dim: string) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n    const gridThemeCfg = getGridThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    const gridCfg = deepMix(\n      {\n        container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n      },\n      gridThemeCfg,\n      get(axisOption, 'grid'),\n      this.getAnimateCfg(axisOption)\n    );\n    gridCfg.items = getLineGridItems(this.view.getCoordinate(), scale, dim, get(gridCfg, 'alignTick', true));\n\n    return gridCfg;\n  }\n\n  /**\n   * generate circle axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle axis cfg\n   */\n  private getCircleAxisCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION) {\n    const container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    const coordinate = this.view.getCoordinate();\n\n    const ticks = scale.getTicks().map((tick) => ({ id: `${tick.tickValue}`, name: tick.text, value: tick.value }));\n    if (!scale.isCategory && Math.abs(coordinate.endAngle - coordinate.startAngle) === Math.PI * 2) {\n      // x 轴对应的值如果是非 cat 类型，在整圆的情况下坐标轴第一个和最后一个文本会重叠，默认只展示第一个文本\n      ticks.pop();\n    }\n\n    const titleText = getAxisTitleText(scale, axisOption);\n    const axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), DIRECTION.CIRCLE);\n    // the cfg order should be ensure\n    const optionWithTitle = get(axisOption, ['title'])\n      ? deepMix(\n          { title: { style: { text: titleText } } },\n          { title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title) },\n          axisOption\n        )\n      : axisOption;\n    const cfg = deepMix(\n      {\n        container,\n        ...getCircleAxisCenterRadius(this.view.getCoordinate()),\n        ticks,\n        verticalFactor: 1,\n        theme: axisThemeCfg,\n      },\n      axisThemeCfg,\n      optionWithTitle\n    );\n    const { animate, animateOption } = this.getAnimateCfg(cfg);\n    cfg.animate = animate;\n    cfg.animateOption = animateOption;\n\n    return cfg;\n  }\n\n  /**\n   * generate circle grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle grid cfg\n   */\n  private getCircleGridCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION, dim: string) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    const gridThemeCfg = getGridThemeCfg(this.view.getTheme(), DIRECTION.RADIUS);\n    const gridCfg = deepMix(\n      {\n        container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n        center: this.view.getCoordinate().getCenter(),\n      },\n      gridThemeCfg,\n      get(axisOption, 'grid'),\n      this.getAnimateCfg(axisOption)\n    );\n    const alignTick = get(gridCfg, 'alignTick', true);\n    const verticalScale = dim === 'x' ? this.view.getYScales()[0] : this.view.getXScale();\n    gridCfg.items = getCircleGridItems(this.view.getCoordinate(), verticalScale, scale, alignTick, dim);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    return gridCfg;\n  }\n\n  private getId(name: string, key: string): string {\n    const coordinate = this.view.getCoordinate();\n    // 坐标系类型也作为组件的 key\n    return `${name}-${key}-${coordinate.type}`;\n  }\n\n  private getAnimateCfg(cfg) {\n    return {\n      animate: this.view.getOptions().animate && get(cfg, 'animate'), // 如果 view 关闭动画，则不执行动画\n      animateOption:\n        cfg && cfg.animateOption ? deepMix({}, AXIS_DEFAULT_ANIMATE_CFG, cfg.animateOption) : AXIS_DEFAULT_ANIMATE_CFG,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}