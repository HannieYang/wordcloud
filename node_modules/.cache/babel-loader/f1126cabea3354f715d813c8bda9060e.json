{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { get } from '@antv/util';\nimport { polygon as basePolygon } from '../../adaptor/geometries/polygon';\nimport { interaction as commonInteraction, animation, theme, legend, annotation, tooltip } from '../../adaptor/common';\nimport { pattern } from '../../adaptor/pattern';\nimport { flow, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { transformData, findInteraction, enableDrillInteraction } from './utils';\n/**\n * Ëé∑ÂèñÈªòËÆ§ option\n * @param params\n */\n\nfunction defaultOptions(params) {\n  var options = params.options;\n  var colorField = options.colorField;\n  return deepAssign({\n    options: {\n      rawFields: ['value'],\n      tooltip: {\n        fields: ['name', 'value', colorField, 'path'],\n        formatter: function (data) {\n          return {\n            name: data.name,\n            value: data.value\n          };\n        }\n      }\n    }\n  }, params);\n}\n/**\n * Â≠óÊÆµ\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var color = options.color,\n      colorField = options.colorField,\n      rectStyle = options.rectStyle,\n      hierarchyConfig = options.hierarchyConfig,\n      rawFields = options.rawFields;\n  var data = transformData({\n    data: options.data,\n    colorField: options.colorField,\n    enableDrillDown: enableDrillInteraction(options),\n    hierarchyConfig: hierarchyConfig\n  });\n  chart.data(data); // geometry\n\n  basePolygon(deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField,\n      rawFields: rawFields,\n      polygon: {\n        color: color,\n        style: rectStyle\n      }\n    }\n  })); // ÂÅö‰∏Ä‰∏™ÂèçËΩ¨ÔºåËøôÊ†∑ÈÖçÂêàÊéíÂ∫èÔºåÂèØ‰ª•Â∞ÜÊúÄÂ§ßÂÄºÊîæÂà∞Â∑¶‰∏äËßíÔºåÊúÄÂ∞èÂÄºÊîæÂà∞Âè≥‰∏ãËßí\n\n  chart.coordinate().reflect('y');\n  return params;\n}\n/**\n * ÂùêÊ†áËΩ¥\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\n\nfunction adaptorInteraction(options) {\n  var drilldown = options.drilldown,\n      _a = options.interactions,\n      interactions = _a === void 0 ? [] : _a;\n  var enableDrillDown = enableDrillInteraction(options);\n\n  if (enableDrillDown) {\n    return deepAssign({}, options, {\n      interactions: __spreadArrays(interactions, [{\n        type: 'drill-down',\n        // üöì Ëøô‰∏çÊòØ‰∏Ä‰∏™ËßÑËåÉÁöÑ APIÔºåÂêéÁª≠‰ºöÂèòÊõ¥„ÄÇÊÖéÈáçÂèÇËÄÉ\n        cfg: {\n          drillDownConfig: drilldown,\n          transformData: transformData\n        }\n      }])\n    });\n  }\n\n  return options;\n}\n/**\n * Interaction ÈÖçÁΩÆ\n * @param params\n */\n\n\nexport function interaction(params) {\n  var chart = params.chart,\n      options = params.options;\n  var interactions = options.interactions,\n      drilldown = options.drilldown;\n  commonInteraction({\n    chart: chart,\n    options: adaptorInteraction(options)\n  }); // ÈÄÇÈÖç view-zoom\n\n  var viewZoomInteraction = findInteraction(interactions, 'view-zoom');\n\n  if (viewZoomInteraction) {\n    // ÂºÄÂêØÁº©Êîæ interaction ÂêéÔºåÂàôÈòªÊ≠¢ÈªòËÆ§ÊªöÂä®‰∫ã‰ª∂ÔºåÈÅøÂÖçÊï¥‰∏™Á™óÂè£ÁöÑÊªöÂä®\n    if (viewZoomInteraction.enable !== false) {\n      chart.getCanvas().on('mousewheel', function (ev) {\n        ev.preventDefault();\n      });\n    } else {\n      // ÊâãÂä®ÂÖ≥Èó≠ÂêéÔºåÊ∏ÖÈô§„ÄÇ‰ªÖÂØπÂ£∞Êòé viewZoomInteraction ÁöÑÊ∏ÖÈô§„ÄÇ\n      chart.getCanvas().off('mousewheel');\n    }\n  } // ÈÄÇÂ∫î‰∏ãÈíª‰∫§‰∫íÈù¢ÂåÖÂ±ë\n\n\n  var enableDrillDown = enableDrillInteraction(options);\n\n  if (enableDrillDown) {\n    // ‰∏∫Èù¢ÂåÖÂ±ëÂú®Â∫ïÈÉ®ÁïôÂá∫ 25px ÁöÑÁ©∫Èó¥\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n\n  return params;\n}\n/**\n * Áü©ÂΩ¢Ê†ëÂõæ\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  return flow(defaultOptions, theme, pattern('rectStyle'), geometry, axis, legend, tooltip, interaction, animation, annotation())(params);\n}","map":{"version":3,"mappings":";AAAA,SAASA,GAAT,QAAoB,YAApB;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,kCAAvC;AAEA,SAASC,WAAW,IAAIC,iBAAxB,EAA2CC,SAA3C,EAAsDC,KAAtD,EAA6DC,MAA7D,EAAqEC,UAArE,EAAiFC,OAAjF,QAAgG,sBAAhG;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,aAAjC;AACA,SAASC,sBAAT,QAAuC,qBAAvC;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,sBAAzC,QAAuE,SAAvE;AAGA;;;;;AAIA,SAASC,cAAT,CAAwBC,MAAxB,EAAsD;EAC5C,WAAO,GAAKA,MAAM,QAAlB;EACA,cAAU,GAAKC,OAAO,WAAtB;EAER,OAAOP,UAAU,CACf;IACEO,OAAO,EAAE;MACPC,SAAS,EAAE,CAAC,OAAD,CADJ;MAEPX,OAAO,EAAE;QACPY,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkBC,UAAlB,EAA8B,MAA9B,CADD;QAEPC,SAAS,EAAE,UAACC,IAAD,EAAK;UACd,OAAO;YACLC,IAAI,EAAED,IAAI,CAACC,IADN;YAELC,KAAK,EAAEF,IAAI,CAACE;UAFP,CAAP;QAID;MAPM;IAFF;EADX,CADe,EAefR,MAfe,CAAjB;AAiBD;AAED;;;;;;AAIA,SAASS,QAAT,CAAkBT,MAAlB,EAAgD;EACtC,SAAK,GAAcA,MAAM,MAAzB;EAAA,IAAOC,OAAO,GAAKD,MAAM,QAAzB;EACA,SAAK,GAAwDC,OAAO,MAApE;EAAA,IAAOG,UAAU,GAA4CH,OAAO,WAApE;EAAA,IAAmBS,SAAS,GAAiCT,OAAO,UAApE;EAAA,IAA8BU,eAAe,GAAgBV,OAAO,gBAApE;EAAA,IAA+CC,SAAS,GAAKD,OAAO,UAApE;EAER,IAAMK,IAAI,GAAGV,aAAa,CAAC;IACzBU,IAAI,EAAEL,OAAO,CAACK,IADW;IAEzBF,UAAU,EAAEH,OAAO,CAACG,UAFK;IAGzBQ,eAAe,EAAEd,sBAAsB,CAACG,OAAD,CAHd;IAIzBU,eAAe;EAJU,CAAD,CAA1B;EAOAE,KAAK,CAACP,IAAN,CAAWA,IAAX,EAX8C,CAa9C;;EACAtB,WAAW,CACTU,UAAU,CAAC,EAAD,EAAKM,MAAL,EAAa;IACrBC,OAAO,EAAE;MACPa,MAAM,EAAE,GADD;MAEPC,MAAM,EAAE,GAFD;MAGPC,WAAW,EAAEZ,UAHN;MAIPF,SAAS,EAAEA,SAJJ;MAKPnB,OAAO,EAAE;QACPkC,KAAK,OADE;QAEPC,KAAK,EAAER;MAFA;IALF;EADY,CAAb,CADD,CAAX,CAd8C,CA6B9C;;EACAG,KAAK,CAACM,UAAN,GAAmBC,OAAnB,CAA2B,GAA3B;EAEA,OAAOpB,MAAP;AACD;AAED;;;;;;AAIA,SAASqB,IAAT,CAAcrB,MAAd,EAA4C;EAClC,SAAK,GAAKA,MAAM,MAAhB;EACRa,KAAK,CAACQ,IAAN,CAAW,KAAX;EACA,OAAOrB,MAAP;AACD;;AAED,SAASsB,kBAAT,CAA4BrB,OAA5B,EAAmD;EACzC,aAAS,GAAwBA,OAAO,UAAxC;EAAA,IAAWsB,KAAsBtB,OAAO,aAAxC;EAAA,IAAWuB,YAAY,mBAAG,EAAH,GAAKD,EAA5B;EAER,IAAMX,eAAe,GAAGd,sBAAsB,CAACG,OAAD,CAA9C;;EACA,IAAIW,eAAJ,EAAqB;IACnB,OAAOlB,UAAU,CAAC,EAAD,EAAKO,OAAL,EAAc;MAC7BuB,YAAY,iBACPA,YADO,EACK,CACf;QACEC,IAAI,EAAE,YADR;QAEE;QACAC,GAAG,EAAE;UAAEC,eAAe,EAAEC,SAAnB;UAA8BhC,aAAa;QAA3C;MAHP,CADe,CADL;IADiB,CAAd,CAAjB;EAUD;;EACD,OAAOK,OAAP;AACD;AAED;;;;;;AAIA,OAAM,SAAUhB,WAAV,CAAsBe,MAAtB,EAAoD;EAChD,SAAK,GAAcA,MAAM,MAAzB;EAAA,IAAOC,OAAO,GAAKD,MAAM,QAAzB;EACA,gBAAY,GAAgBC,OAAO,aAAnC;EAAA,IAAc2B,SAAS,GAAK3B,OAAO,UAAnC;EAERf,iBAAiB,CAAC;IAChB2B,KAAK,OADW;IAEhBZ,OAAO,EAAEqB,kBAAkB,CAACrB,OAAD;EAFX,CAAD,CAAjB,CAJwD,CASxD;;EACA,IAAM4B,mBAAmB,GAAGhC,eAAe,CAAC2B,YAAD,EAAe,WAAf,CAA3C;;EAEA,IAAIK,mBAAJ,EAAyB;IACvB;IACA,IAAIA,mBAAmB,CAACC,MAApB,KAA+B,KAAnC,EAA0C;MACxCjB,KAAK,CAACkB,SAAN,GAAkBC,EAAlB,CAAqB,YAArB,EAAmC,UAACC,EAAD,EAAG;QACpCA,EAAE,CAACC,cAAH;MACD,CAFD;IAGD,CAJD,MAIO;MACL;MACArB,KAAK,CAACkB,SAAN,GAAkBI,GAAlB,CAAsB,YAAtB;IACD;EACF,CAtBuD,CAwBxD;;;EACA,IAAMvB,eAAe,GAAGd,sBAAsB,CAACG,OAAD,CAA9C;;EACA,IAAIW,eAAJ,EAAqB;IACnB;IACAC,KAAK,CAACuB,aAAN,GAAsBzC,sBAAsB,CAACkB,KAAK,CAACuB,aAAP,EAAsBtD,GAAG,CAAC8C,SAAD,EAAY,CAAC,YAAD,EAAe,UAAf,CAAZ,CAAzB,CAA5C;EACD;;EACD,OAAO5B,MAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAUqC,OAAV,CAAkBrC,MAAlB,EAAgD;EACpD,OAAOP,IAAI,CACTM,cADS,EAETX,KAFS,EAGTI,OAAO,CAAC,WAAD,CAHE,EAITiB,QAJS,EAKTY,IALS,EAMThC,MANS,EAOTE,OAPS,EAQTN,WARS,EASTE,SATS,EAUTG,UAAU,EAVD,CAAJ,CAWLU,MAXK,CAAP;AAYD","names":["get","polygon","basePolygon","interaction","commonInteraction","animation","theme","legend","annotation","tooltip","pattern","flow","deepAssign","getAdjustAppendPadding","transformData","findInteraction","enableDrillInteraction","defaultOptions","params","options","rawFields","fields","colorField","formatter","data","name","value","geometry","rectStyle","hierarchyConfig","enableDrillDown","chart","xField","yField","seriesField","color","style","coordinate","reflect","axis","adaptorInteraction","_a","interactions","type","cfg","drillDownConfig","drilldown","viewZoomInteraction","enable","getCanvas","on","ev","preventDefault","off","appendPadding","adaptor"],"sourceRoot":"","sources":["../../../src/plots/treemap/adaptor.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { polygon as basePolygon } from '../../adaptor/geometries/polygon';\nimport { Params } from '../../core/adaptor';\nimport { interaction as commonInteraction, animation, theme, legend, annotation, tooltip } from '../../adaptor/common';\nimport { pattern } from '../../adaptor/pattern';\nimport { flow, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { transformData, findInteraction, enableDrillInteraction } from './utils';\nimport { TreemapOptions } from './types';\n\n/**\n * Ëé∑ÂèñÈªòËÆ§ option\n * @param params\n */\nfunction defaultOptions(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { options } = params;\n  const { colorField } = options;\n\n  return deepAssign(\n    {\n      options: {\n        rawFields: ['value'],\n        tooltip: {\n          fields: ['name', 'value', colorField, 'path'],\n          formatter: (data) => {\n            return {\n              name: data.name,\n              value: data.value,\n            };\n          },\n        },\n      },\n    },\n    params\n  );\n}\n\n/**\n * Â≠óÊÆµ\n * @param params\n */\nfunction geometry(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { color, colorField, rectStyle, hierarchyConfig, rawFields } = options;\n\n  const data = transformData({\n    data: options.data,\n    colorField: options.colorField,\n    enableDrillDown: enableDrillInteraction(options),\n    hierarchyConfig,\n  });\n\n  chart.data(data);\n\n  // geometry\n  basePolygon(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        rawFields: rawFields,\n        polygon: {\n          color,\n          style: rectStyle,\n        },\n      },\n    })\n  );\n\n  // ÂÅö‰∏Ä‰∏™ÂèçËΩ¨ÔºåËøôÊ†∑ÈÖçÂêàÊéíÂ∫èÔºåÂèØ‰ª•Â∞ÜÊúÄÂ§ßÂÄºÊîæÂà∞Â∑¶‰∏äËßíÔºåÊúÄÂ∞èÂÄºÊîæÂà∞Âè≥‰∏ãËßí\n  chart.coordinate().reflect('y');\n\n  return params;\n}\n\n/**\n * ÂùêÊ†áËΩ¥\n * @param params\n */\nfunction axis(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\nfunction adaptorInteraction(options: TreemapOptions): TreemapOptions {\n  const { drilldown, interactions = [] } = options;\n\n  const enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    return deepAssign({}, options, {\n      interactions: [\n        ...interactions,\n        {\n          type: 'drill-down',\n          // üöì Ëøô‰∏çÊòØ‰∏Ä‰∏™ËßÑËåÉÁöÑ APIÔºåÂêéÁª≠‰ºöÂèòÊõ¥„ÄÇÊÖéÈáçÂèÇËÄÉ\n          cfg: { drillDownConfig: drilldown, transformData },\n        },\n      ],\n    });\n  }\n  return options;\n}\n\n/**\n * Interaction ÈÖçÁΩÆ\n * @param params\n */\nexport function interaction(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { interactions, drilldown } = options;\n\n  commonInteraction({\n    chart,\n    options: adaptorInteraction(options),\n  });\n\n  // ÈÄÇÈÖç view-zoom\n  const viewZoomInteraction = findInteraction(interactions, 'view-zoom');\n\n  if (viewZoomInteraction) {\n    // ÂºÄÂêØÁº©Êîæ interaction ÂêéÔºåÂàôÈòªÊ≠¢ÈªòËÆ§ÊªöÂä®‰∫ã‰ª∂ÔºåÈÅøÂÖçÊï¥‰∏™Á™óÂè£ÁöÑÊªöÂä®\n    if (viewZoomInteraction.enable !== false) {\n      chart.getCanvas().on('mousewheel', (ev) => {\n        ev.preventDefault();\n      });\n    } else {\n      // ÊâãÂä®ÂÖ≥Èó≠ÂêéÔºåÊ∏ÖÈô§„ÄÇ‰ªÖÂØπÂ£∞Êòé viewZoomInteraction ÁöÑÊ∏ÖÈô§„ÄÇ\n      chart.getCanvas().off('mousewheel');\n    }\n  }\n\n  // ÈÄÇÂ∫î‰∏ãÈíª‰∫§‰∫íÈù¢ÂåÖÂ±ë\n  const enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    // ‰∏∫Èù¢ÂåÖÂ±ëÂú®Â∫ïÈÉ®ÁïôÂá∫ 25px ÁöÑÁ©∫Èó¥\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n  return params;\n}\n\n/**\n * Áü©ÂΩ¢Ê†ëÂõæ\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TreemapOptions>) {\n  return flow(\n    defaultOptions,\n    theme,\n    pattern('rectStyle'),\n    geometry,\n    axis,\n    legend,\n    tooltip,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}