{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\nimport { Action } from '..';\nimport { distance } from '../util';\nvar MIN_DISTANCE = 5;\n/**\n * @ignore\n * View 移动的 Action\n */\n\nvar Move =\n/** @class */\nfunction (_super) {\n  __extends(Move, _super);\n\n  function Move() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.starting = false;\n    _this.isMoving = false; // private cacheRange = null;\n\n    _this.startPoint = null;\n    _this.startMatrix = null;\n    return _this;\n  }\n  /**\n   * 开始移动\n   */\n\n\n  Move.prototype.start = function () {\n    this.starting = true;\n    this.startPoint = this.context.getCurrentPoint(); // 缓存开始时的矩阵，防止反复拖拽\n\n    this.startMatrix = this.context.view.middleGroup.getMatrix();\n  };\n  /**\n   * 移动\n   */\n\n\n  Move.prototype.move = function () {\n    if (!this.starting) {\n      return;\n    }\n\n    var startPoint = this.startPoint;\n    var currentPoint = this.context.getCurrentPoint();\n    var d = distance(startPoint, currentPoint);\n\n    if (d > MIN_DISTANCE && !this.isMoving) {\n      this.isMoving = true;\n    }\n\n    if (this.isMoving) {\n      var view = this.context.view;\n      var matrix = ext.transform(this.startMatrix, [['t', currentPoint.x - startPoint.x, currentPoint.y - startPoint.y]]);\n      view.backgroundGroup.setMatrix(matrix);\n      view.foregroundGroup.setMatrix(matrix);\n      view.middleGroup.setMatrix(matrix);\n    }\n  };\n  /**\n   * 结束移动\n   */\n\n\n  Move.prototype.end = function () {\n    if (this.isMoving) {\n      this.isMoving = false;\n    }\n\n    this.startMatrix = null;\n    this.starting = false;\n    this.startPoint = null;\n  };\n  /**\n   * 回滚\n   */\n\n\n  Move.prototype.reset = function () {\n    this.starting = false;\n    this.startPoint = null;\n    this.isMoving = false;\n    var view = this.context.view;\n    view.backgroundGroup.resetMatrix();\n    view.foregroundGroup.resetMatrix();\n    view.middleGroup.resetMatrix();\n    this.isMoving = false;\n  };\n\n  return Move;\n}(Action);\n\nexport default Move;","map":{"version":3,"mappings":";AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,MAAT,QAAuB,IAAvB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,IAAMC,YAAY,GAAG,CAArB;AAEA;;;;;AAIA;AAAA;AAAA;EAAmBC;;EAAnB;IAAA;;IACUC,iBAAW,KAAX;IACAA,iBAAW,KAAX,CAFV,CAGE;;IACQA,mBAAa,IAAb;IACAA,oBAAc,IAAd;;EA6DT;EA5DC;;;;;EAGOC,uBAAP;IACE,KAAKC,QAAL,GAAgB,IAAhB;IACA,KAAKC,UAAL,GAAkB,KAAKC,OAAL,CAAaC,eAAb,EAAlB,CAFF,CAGE;;IACA,KAAKC,WAAL,GAAmB,KAAKF,OAAL,CAAaG,IAAb,CAAkBC,WAAlB,CAA8BC,SAA9B,EAAnB;EACD,CALM;EAOP;;;;;EAGOR,sBAAP;IACE,IAAI,CAAC,KAAKC,QAAV,EAAoB;MAClB;IACD;;IACD,IAAMC,UAAU,GAAG,KAAKA,UAAxB;IACA,IAAMO,YAAY,GAAG,KAAKN,OAAL,CAAaC,eAAb,EAArB;IACA,IAAMM,CAAC,GAAGd,QAAQ,CAACM,UAAD,EAAaO,YAAb,CAAlB;;IACA,IAAIC,CAAC,GAAGb,YAAJ,IAAoB,CAAC,KAAKc,QAA9B,EAAwC;MACtC,KAAKA,QAAL,GAAgB,IAAhB;IACD;;IACD,IAAI,KAAKA,QAAT,EAAmB;MACjB,IAAML,IAAI,GAAG,KAAKH,OAAL,CAAaG,IAA1B;MACA,IAAMM,MAAM,GAAGlB,GAAG,CAACmB,SAAJ,CAAc,KAAKR,WAAnB,EAAgC,CAC7C,CAAC,GAAD,EAAMI,YAAY,CAACK,CAAb,GAAiBZ,UAAU,CAACY,CAAlC,EAAqCL,YAAY,CAACM,CAAb,GAAiBb,UAAU,CAACa,CAAjE,CAD6C,CAAhC,CAAf;MAGAT,IAAI,CAACU,eAAL,CAAqBC,SAArB,CAA+BL,MAA/B;MACAN,IAAI,CAACY,eAAL,CAAqBD,SAArB,CAA+BL,MAA/B;MACAN,IAAI,CAACC,WAAL,CAAiBU,SAAjB,CAA2BL,MAA3B;IACD;EACF,CAnBM;EAqBP;;;;;EAGOZ,qBAAP;IACE,IAAI,KAAKW,QAAT,EAAmB;MACjB,KAAKA,QAAL,GAAgB,KAAhB;IACD;;IACD,KAAKN,WAAL,GAAmB,IAAnB;IACA,KAAKJ,QAAL,GAAgB,KAAhB;IACA,KAAKC,UAAL,GAAkB,IAAlB;EACD,CAPM;EASP;;;;;EAGOF,uBAAP;IACE,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKC,UAAL,GAAkB,IAAlB;IACA,KAAKS,QAAL,GAAgB,KAAhB;IAEA,IAAML,IAAI,GAAG,KAAKH,OAAL,CAAaG,IAA1B;IACAA,IAAI,CAACU,eAAL,CAAqBG,WAArB;IACAb,IAAI,CAACY,eAAL,CAAqBC,WAArB;IACAb,IAAI,CAACC,WAAL,CAAiBY,WAAjB;IACA,KAAKR,QAAL,GAAgB,KAAhB;EACD,CAVM;;EAWT;AAAC,CAlED,CAAmBhB,MAAnB;;AAoEA,eAAeK,IAAf","names":["ext","Action","distance","MIN_DISTANCE","__extends","_this","Move","starting","startPoint","context","getCurrentPoint","startMatrix","view","middleGroup","getMatrix","currentPoint","d","isMoving","matrix","transform","x","y","backgroundGroup","setMatrix","foregroundGroup","resetMatrix"],"sourceRoot":"","sources":["../../../../src/interaction/action/view/move.ts"],"sourcesContent":["import { ext } from '@antv/matrix-util';\nimport { Action } from '..';\nimport { distance } from '../util';\n\nconst MIN_DISTANCE = 5;\n\n/**\n * @ignore\n * View 移动的 Action\n */\nclass Move extends Action {\n  private starting = false;\n  private isMoving = false;\n  // private cacheRange = null;\n  private startPoint = null;\n  private startMatrix = null;\n  /**\n   * 开始移动\n   */\n  public start() {\n    this.starting = true;\n    this.startPoint = this.context.getCurrentPoint();\n    // 缓存开始时的矩阵，防止反复拖拽\n    this.startMatrix = this.context.view.middleGroup.getMatrix();\n  }\n\n  /**\n   * 移动\n   */\n  public move() {\n    if (!this.starting) {\n      return;\n    }\n    const startPoint = this.startPoint;\n    const currentPoint = this.context.getCurrentPoint();\n    const d = distance(startPoint, currentPoint);\n    if (d > MIN_DISTANCE && !this.isMoving) {\n      this.isMoving = true;\n    }\n    if (this.isMoving) {\n      const view = this.context.view;\n      const matrix = ext.transform(this.startMatrix, [\n        ['t', currentPoint.x - startPoint.x, currentPoint.y - startPoint.y],\n      ]);\n      view.backgroundGroup.setMatrix(matrix);\n      view.foregroundGroup.setMatrix(matrix);\n      view.middleGroup.setMatrix(matrix);\n    }\n  }\n\n  /**\n   * 结束移动\n   */\n  public end() {\n    if (this.isMoving) {\n      this.isMoving = false;\n    }\n    this.startMatrix = null;\n    this.starting = false;\n    this.startPoint = null;\n  }\n\n  /**\n   * 回滚\n   */\n  public reset() {\n    this.starting = false;\n    this.startPoint = null;\n    this.isMoving = false;\n\n    const view = this.context.view;\n    view.backgroundGroup.resetMatrix();\n    view.foregroundGroup.resetMatrix();\n    view.middleGroup.resetMatrix();\n    this.isMoving = false;\n  }\n}\n\nexport default Move;\n"]},"metadata":{},"sourceType":"module"}