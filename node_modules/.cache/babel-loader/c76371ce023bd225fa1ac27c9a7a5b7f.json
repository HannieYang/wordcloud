{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { getElements, getElementsByState } from '../util';\nimport { clearHighlight } from './highlight-util';\nimport StateAction from './state';\nimport { ELEMENT_STATE } from '../../../constant';\nexport var STATUS_UNACTIVE = ELEMENT_STATE.INACTIVE;\nexport var STATUS_ACTIVE = ELEMENT_STATE.ACTIVE;\n/**\n * @ignore\n * highlight，指定图形高亮，其他图形变暗\n */\n\nvar ElementHighlight =\n/** @class */\nfunction (_super) {\n  __extends(ElementHighlight, _super);\n\n  function ElementHighlight() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.stateName = STATUS_ACTIVE;\n    return _this;\n  } // 多个元素设置、取消 highlight\n\n\n  ElementHighlight.prototype.setElementsStateByItem = function (elements, field, item, enable) {\n    var _this = this;\n\n    var callback = function (el) {\n      return _this.isMathItem(el, field, item);\n    };\n\n    this.setHighlightBy(elements, callback, enable);\n  }; // 设置元素的 highlight\n\n\n  ElementHighlight.prototype.setElementHighlight = function (el, callback) {\n    if (callback(el)) {\n      if (el.hasState(STATUS_UNACTIVE)) {\n        el.setState(STATUS_UNACTIVE, false);\n      }\n\n      el.setState(STATUS_ACTIVE, true);\n    } else if (!el.hasState(STATUS_ACTIVE)) {\n      el.setState(STATUS_UNACTIVE, true);\n    }\n  };\n\n  ElementHighlight.prototype.setHighlightBy = function (elements, callback, enable) {\n    var _this = this;\n\n    if (enable) {\n      // 如果是设置 highlight ，则将匹配的 element 设置成 active，\n      // 其他如果不是 active，则设置成 unactive\n      each(elements, function (el) {\n        _this.setElementHighlight(el, callback);\n      });\n    } else {\n      // 如果取消 highlight，则要检测是否全部取消 highlight\n      var activeElements = getElementsByState(this.context.view, STATUS_ACTIVE);\n      var allCancel_1 = true; // 检测所有 activeElements 都要取消 highlight\n\n      each(activeElements, function (el) {\n        if (!callback(el)) {\n          allCancel_1 = false;\n          return false;\n        }\n      });\n\n      if (allCancel_1) {\n        // 都要取消，则取消所有的 active，unactive 状态\n        this.clear();\n      } else {\n        // 如果不是都要取消 highlight, 则设置匹配的 element 的状态为 unactive\n        // 其他 element 状态不变\n        each(elements, function (el) {\n          if (callback(el)) {\n            if (el.hasState(STATUS_ACTIVE)) {\n              el.setState(STATUS_ACTIVE, false);\n            }\n\n            el.setState(STATUS_UNACTIVE, true);\n          }\n        });\n      }\n    }\n  }; // 单个元素设置和取消 highlight\n\n\n  ElementHighlight.prototype.setElementState = function (element, enable) {\n    var view = this.context.view;\n    var elements = getElements(view);\n    this.setHighlightBy(elements, function (el) {\n      return element === el;\n    }, enable);\n  };\n\n  ElementHighlight.prototype.highlight = function () {\n    this.setState();\n  }; // 清理掉所有的 active， unactive 状态\n\n\n  ElementHighlight.prototype.clear = function () {\n    var view = this.context.view;\n    clearHighlight(view);\n  };\n\n  return ElementHighlight;\n}(StateAction);\n\nexport default ElementHighlight;","map":{"version":3,"mappings":"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","names":["each","getElements","getElementsByState","clearHighlight","StateAction","ELEMENT_STATE","STATUS_UNACTIVE","INACTIVE","STATUS_ACTIVE","ACTIVE","__extends","_this","ElementHighlight","elements","field","item","enable","callback","el","isMathItem","setHighlightBy","hasState","setState","setElementHighlight","activeElements","context","view","allCancel_1","clear","element"],"sourceRoot":"","sources":["../../../../src/interaction/action/element/highlight.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { ListItem } from '../../../dependents';\nimport Element from '../../../geometry/element/';\nimport { getElements, getElementsByState } from '../util';\nimport { clearHighlight } from './highlight-util';\nimport StateAction from './state';\n\nimport { ELEMENT_STATE } from '../../../constant';\n\nexport const STATUS_UNACTIVE = ELEMENT_STATE.INACTIVE;\nexport const STATUS_ACTIVE = ELEMENT_STATE.ACTIVE;\nexport type Callback = (el) => boolean;\n\n/**\n * @ignore\n * highlight，指定图形高亮，其他图形变暗\n */\nclass ElementHighlight extends StateAction {\n  protected stateName: string = STATUS_ACTIVE;\n\n  // 多个元素设置、取消 highlight\n  protected setElementsStateByItem(elements: Element[], field: string, item: ListItem, enable: boolean) {\n    const callback = (el) => this.isMathItem(el, field, item);\n    this.setHighlightBy(elements, callback, enable);\n  }\n\n  // 设置元素的 highlight\n  protected setElementHighlight(el: Element, callback: Callback) {\n    if (callback(el)) {\n      if (el.hasState(STATUS_UNACTIVE)) {\n        el.setState(STATUS_UNACTIVE, false);\n      }\n      el.setState(STATUS_ACTIVE, true);\n    } else if (!el.hasState(STATUS_ACTIVE)) {\n      el.setState(STATUS_UNACTIVE, true);\n    }\n  }\n\n  protected setHighlightBy(elements: Element[], callback: Callback, enable: boolean) {\n    if (enable) {\n      // 如果是设置 highlight ，则将匹配的 element 设置成 active，\n      // 其他如果不是 active，则设置成 unactive\n      each(elements, (el) => {\n        this.setElementHighlight(el, callback);\n      });\n    } else {\n      // 如果取消 highlight，则要检测是否全部取消 highlight\n      const activeElements = getElementsByState(this.context.view, STATUS_ACTIVE);\n      let allCancel = true;\n      // 检测所有 activeElements 都要取消 highlight\n      each(activeElements, (el) => {\n        if (!callback(el)) {\n          allCancel = false;\n          return false;\n        }\n      });\n      if (allCancel) {\n        // 都要取消，则取消所有的 active，unactive 状态\n        this.clear();\n      } else {\n        // 如果不是都要取消 highlight, 则设置匹配的 element 的状态为 unactive\n        // 其他 element 状态不变\n        each(elements, (el) => {\n          if (callback(el)) {\n            if (el.hasState(STATUS_ACTIVE)) {\n              el.setState(STATUS_ACTIVE, false);\n            }\n            el.setState(STATUS_UNACTIVE, true);\n          }\n        });\n      }\n    }\n  }\n\n  // 单个元素设置和取消 highlight\n  protected setElementState(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const elements = getElements(view);\n    this.setHighlightBy(elements, (el) => element === el, enable);\n  }\n\n  public highlight() {\n    this.setState();\n  }\n\n  // 清理掉所有的 active， unactive 状态\n  public clear() {\n    const view = this.context.view;\n    clearHighlight(view);\n  }\n}\n\nexport default ElementHighlight;\n"]},"metadata":{},"sourceType":"module"}