{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { getTextPoint } from '../util/util';\nimport CrosshairBase from './base';\n\nvar LineCrosshair =\n/** @class */\nfunction (_super) {\n  __extends(LineCrosshair, _super);\n\n  function LineCrosshair() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineCrosshair.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      type: 'line',\n      locationType: 'region',\n      start: null,\n      end: null\n    });\n  }; // 直线的文本需要同直线垂直\n\n\n  LineCrosshair.prototype.getRotateAngle = function () {\n    var _a = this.getLocation(),\n        start = _a.start,\n        end = _a.end;\n\n    var position = this.get('text').position;\n    var angle = Math.atan2(end.y - start.y, end.x - start.x);\n    var tangentAngle = position === 'start' ? angle - Math.PI / 2 : angle + Math.PI / 2;\n    return tangentAngle;\n  };\n\n  LineCrosshair.prototype.getTextPoint = function () {\n    var _a = this.getLocation(),\n        start = _a.start,\n        end = _a.end;\n\n    var _b = this.get('text'),\n        position = _b.position,\n        offset = _b.offset;\n\n    return getTextPoint(start, end, position, offset);\n  };\n\n  LineCrosshair.prototype.getLinePath = function () {\n    var _a = this.getLocation(),\n        start = _a.start,\n        end = _a.end;\n\n    return [['M', start.x, start.y], ['L', end.x, end.y]];\n  };\n\n  return LineCrosshair;\n}(CrosshairBase);\n\nexport default LineCrosshair;","map":{"version":3,"mappings":";AAEA,SAASA,YAAT,QAA6B,cAA7B;AACA,OAAOC,aAAP,MAA0B,QAA1B;;AAEA;AAAA;AAAA;EAA4BC;;EAA5B;;EAkCC;;EAjCQC,wCAAP;IACE,IAAMC,GAAG,GAAGC,iBAAMC,aAAN,CAAmBC,IAAnB,CAAmB,IAAnB,CAAZ;;IACA,6BACKH,GADL,GACQ;MACNI,IAAI,EAAE,MADA;MAENC,YAAY,EAAE,QAFR;MAGNC,KAAK,EAAE,IAHD;MAINC,GAAG,EAAE;IAJC,CADR;EAOD,CATM,CADT,CAYE;;;EACUR,yCAAV;IACQ,SAAiB,KAAKS,WAAL,EAAjB;IAAA,IAAEF,KAAK,WAAP;IAAA,IAASC,GAAG,SAAZ;;IACE,YAAQ,GAAK,KAAKE,GAAL,CAAS,MAAT,EAAgBC,QAA7B;IACR,IAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,CAAJ,GAAQR,KAAK,CAACQ,CAAzB,EAA4BP,GAAG,CAACQ,CAAJ,GAAQT,KAAK,CAACS,CAA1C,CAAd;IACA,IAAMC,YAAY,GAAGN,QAAQ,KAAK,OAAb,GAAuBC,KAAK,GAAGC,IAAI,CAACK,EAAL,GAAU,CAAzC,GAA6CN,KAAK,GAAGC,IAAI,CAACK,EAAL,GAAU,CAApF;IACA,OAAOD,YAAP;EACD,CANS;;EAQAjB,uCAAV;IACQ,SAAiB,KAAKS,WAAL,EAAjB;IAAA,IAAEF,KAAK,WAAP;IAAA,IAASC,GAAG,SAAZ;;IACA,SAAuB,KAAKE,GAAL,CAAS,MAAT,CAAvB;IAAA,IAAEC,QAAQ,cAAV;IAAA,IAAYQ,MAAM,YAAlB;;IACN,OAAOtB,YAAY,CAACU,KAAD,EAAQC,GAAR,EAAaG,QAAb,EAAuBQ,MAAvB,CAAnB;EACD,CAJS;;EAMAnB,sCAAV;IACQ,SAAiB,KAAKS,WAAL,EAAjB;IAAA,IAAEF,KAAK,WAAP;IAAA,IAASC,GAAG,SAAZ;;IACN,OAAO,CACL,CAAC,GAAD,EAAMD,KAAK,CAACS,CAAZ,EAAeT,KAAK,CAACQ,CAArB,CADK,EAEL,CAAC,GAAD,EAAMP,GAAG,CAACQ,CAAV,EAAaR,GAAG,CAACO,CAAjB,CAFK,CAAP;EAID,CANS;;EAOZ;AAAC,CAlCD,CAA4BjB,aAA5B;;AAoCA,eAAeE,aAAf","names":["getTextPoint","CrosshairBase","__extends","LineCrosshair","cfg","_super","getDefaultCfg","call","type","locationType","start","end","getLocation","get","position","angle","Math","atan2","y","x","tangentAngle","PI","offset"],"sourceRoot":"","sources":["../../src/crosshair/line.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}