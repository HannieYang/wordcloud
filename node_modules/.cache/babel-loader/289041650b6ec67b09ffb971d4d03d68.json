{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { each, omit } from '@antv/util';\nimport { tooltip, slider, interaction, animation, theme, annotation, limitInPlot, pattern, transformations } from '../../adaptor/common';\nimport { findGeometry } from '../../utils';\nimport { area, point, line } from '../../adaptor/geometries';\nimport { flow, transformLabel, deepAssign } from '../../utils';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { meta, legend, axis } from '../line/adaptor';\nexport { meta };\n/**\n * geometry 处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      areaStyle = options.areaStyle,\n      color = options.color,\n      pointMapping = options.point,\n      lineMapping = options.line,\n      isPercent = options.isPercent,\n      xField = options.xField,\n      yField = options.yField,\n      tooltip = options.tooltip,\n      seriesField = options.seriesField,\n      startOnZero = options.startOnZero;\n  var pointState = pointMapping === null || pointMapping === void 0 ? void 0 : pointMapping.state;\n  var chartData = getDataWhetherPercentage(data, yField, xField, yField, isPercent);\n  chart.data(chartData); // 百分比堆积图，默认会给一个 % 格式化逻辑, 用户可自定义\n\n  var tooltipOptions = isPercent ? __assign({\n    formatter: function (datum) {\n      return {\n        name: datum[seriesField] || datum[xField],\n        value: (Number(datum[yField]) * 100).toFixed(2) + '%'\n      };\n    }\n  }, tooltip) : tooltip;\n  var primary = deepAssign({}, params, {\n    options: {\n      area: {\n        color: color,\n        style: areaStyle\n      },\n      point: pointMapping && __assign({\n        color: color\n      }, pointMapping),\n      tooltip: tooltipOptions,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined,\n      args: {\n        startOnZero: startOnZero\n      }\n    }\n  }); // 线默认 2px (折线不能复用面积图的 state，因为 fill 和 stroke 不匹配)\n\n  var lineParams = {\n    chart: chart,\n    options: deepAssign({\n      line: {\n        size: 2\n      }\n    }, omit(options, ['state']), {\n      // 颜色保持一致，因为如果颜色不一致，会导致 tooltip 中元素重复。\n      // 如果存在，才设置，否则为空\n      line: lineMapping && __assign({\n        color: color\n      }, lineMapping),\n      sizeField: seriesField,\n      state: lineMapping === null || lineMapping === void 0 ? void 0 : lineMapping.state,\n      tooltip: false,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined,\n      args: {\n        startOnZero: startOnZero\n      }\n    })\n  };\n  var pointParams = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n      state: pointState\n    }\n  }); // area geometry 处理\n\n  area(primary);\n  line(lineParams);\n  point(pointParams);\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField;\n  var areaGeometry = findGeometry(chart, 'area'); // label 为 false, 空 则不显示 label\n\n  if (!label) {\n    areaGeometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    areaGeometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: __assign({\n        layout: [{\n          type: 'limit-in-plot'\n        }, {\n          type: 'path-adjust-position'\n        }, {\n          type: 'point-adjust-position'\n        }, {\n          type: 'limit-in-plot',\n          cfg: {\n            action: 'hide'\n          }\n        }]\n      }, transformLabel(cfg))\n    });\n  }\n\n  return params;\n}\n/**\n * 处理 adjust\n * @param params\n */\n\n\nfunction adjust(params) {\n  var chart = params.chart,\n      options = params.options;\n  var isStack = options.isStack,\n      isPercent = options.isPercent,\n      seriesField = options.seriesField;\n\n  if ((isPercent || isStack) && seriesField) {\n    each(chart.geometries, function (g) {\n      g.adjust('stack');\n    });\n  }\n\n  return params;\n}\n/**\n * 折线图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, pattern('areaStyle'), transformations('rect'), geometry, meta, adjust, axis, legend, tooltip, label, slider, annotation(), interaction, animation, limitInPlot)(params);\n}","map":{"version":3,"mappings":"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","names":["each","omit","tooltip","slider","interaction","animation","theme","annotation","limitInPlot","pattern","transformations","findGeometry","area","point","line","flow","transformLabel","deepAssign","getDataWhetherPercentage","meta","legend","axis","geometry","params","options","areaStyle","color","pointMapping","lineMapping","isPercent","xField","yField","seriesField","startOnZero","pointState","state","chartData","data","chart","tooltipOptions","__assign","formatter","datum","name","value","Number","toFixed","primary","style","label","undefined","args","lineParams","size","sizeField","pointParams","areaGeometry","cfg","fields","callback","layout","type","action","adjust","isStack","geometries","g","adaptor"],"sourceRoot":"","sources":["../../../src/plots/area/adaptor.ts"],"sourcesContent":["import { Geometry } from '@antv/g2';\nimport { each, omit } from '@antv/util';\nimport {\n  tooltip,\n  slider,\n  interaction,\n  animation,\n  theme,\n  annotation,\n  limitInPlot,\n  pattern,\n  transformations,\n} from '../../adaptor/common';\nimport { findGeometry } from '../../utils';\nimport { Params } from '../../core/adaptor';\nimport { area, point, line } from '../../adaptor/geometries';\nimport { flow, transformLabel, deepAssign } from '../../utils';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { Datum } from '../../types';\nimport { meta, legend, axis } from '../line/adaptor';\nimport { AreaOptions } from './types';\n\nexport { meta };\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<AreaOptions>): Params<AreaOptions> {\n  const { chart, options } = params;\n  const {\n    data,\n    areaStyle,\n    color,\n    point: pointMapping,\n    line: lineMapping,\n    isPercent,\n    xField,\n    yField,\n    tooltip,\n    seriesField,\n    startOnZero,\n  } = options;\n  const pointState = pointMapping?.state;\n\n  const chartData = getDataWhetherPercentage(data, yField, xField, yField, isPercent);\n  chart.data(chartData);\n  // 百分比堆积图，默认会给一个 % 格式化逻辑, 用户可自定义\n  const tooltipOptions = isPercent\n    ? {\n        formatter: (datum: Datum) => ({\n          name: datum[seriesField] || datum[xField],\n          value: (Number(datum[yField]) * 100).toFixed(2) + '%',\n        }),\n        ...tooltip,\n      }\n    : tooltip;\n  const primary = deepAssign({}, params, {\n    options: {\n      area: { color, style: areaStyle },\n      point: pointMapping && {\n        color,\n        ...pointMapping,\n      },\n      tooltip: tooltipOptions,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined,\n      args: {\n        startOnZero,\n      },\n    },\n  });\n  // 线默认 2px (折线不能复用面积图的 state，因为 fill 和 stroke 不匹配)\n  const lineParams = {\n    chart,\n    options: deepAssign({ line: { size: 2 } }, omit(options as any, ['state']), {\n      // 颜色保持一致，因为如果颜色不一致，会导致 tooltip 中元素重复。\n      // 如果存在，才设置，否则为空\n      line: lineMapping && {\n        color,\n        ...lineMapping,\n      },\n      sizeField: seriesField,\n      state: lineMapping?.state,\n      tooltip: false,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined,\n      args: {\n        startOnZero,\n      },\n    }),\n  };\n  const pointParams = deepAssign({}, primary, { options: { tooltip: false, state: pointState } });\n\n  // area geometry 处理\n  area(primary);\n  line(lineParams);\n  point(pointParams);\n\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<AreaOptions>): Params<AreaOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const areaGeometry = findGeometry(chart, 'area');\n\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    areaGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    areaGeometry.label({\n      fields: [yField],\n      callback,\n      cfg: {\n        layout: [\n          { type: 'limit-in-plot' },\n          { type: 'path-adjust-position' },\n          { type: 'point-adjust-position' },\n          { type: 'limit-in-plot', cfg: { action: 'hide' } },\n        ],\n        ...transformLabel(cfg),\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * 处理 adjust\n * @param params\n */\nfunction adjust(params: Params<AreaOptions>): Params<AreaOptions> {\n  const { chart, options } = params;\n  const { isStack, isPercent, seriesField } = options;\n  if ((isPercent || isStack) && seriesField) {\n    each(chart.geometries, (g: Geometry) => {\n      g.adjust('stack');\n    });\n  }\n\n  return params;\n}\n\n/**\n * 折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<AreaOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    theme,\n    pattern('areaStyle'),\n    transformations('rect'),\n    geometry,\n    meta,\n    adjust,\n    axis,\n    legend,\n    tooltip,\n    label,\n    slider,\n    annotation(),\n    interaction,\n    animation,\n    limitInPlot\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}