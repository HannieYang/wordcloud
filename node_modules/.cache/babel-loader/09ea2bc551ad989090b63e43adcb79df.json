{"ast":null,"code":"import { BBox } from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nexport function adjustColor(items, labels, shapes) {\n  if (shapes.length === 0) {\n    return;\n  }\n\n  var element = shapes[0].get('element');\n  var theme = element.geometry.theme;\n\n  var _a = theme.labels || {},\n      fillColorLight = _a.fillColorLight,\n      fillColorDark = _a.fillColorDark;\n\n  shapes.forEach(function (shape, index) {\n    var label = labels[index];\n    var textShape = label.find(function (el) {\n      return el.get('type') === 'text';\n    });\n    var shapeBBox = BBox.fromObject(shape.getBBox());\n    var textBBox = BBox.fromObject(textShape.getCanvasBBox());\n    var overflow = !shapeBBox.contains(textBBox);\n    var bgColor = shape.attr('fill');\n    var fillWhite = isContrastColorWhite(bgColor);\n\n    if (!overflow) {\n      if (fillWhite) {\n        if (fillColorLight) {\n          textShape.attr('fill', fillColorLight);\n        }\n      } else {\n        if (fillColorDark) {\n          textShape.attr('fill', fillColorDark);\n        }\n      }\n    } else {\n      // 出现溢出直接应用 overflowLabel 样式\n      textShape.attr(theme.overflowLabels.style);\n    }\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,IAAT,QAAqB,oBAArB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AAIA,OAAM,SAAUC,WAAV,CAAsBC,KAAtB,EAA0CC,MAA1C,EAA4DC,MAA5D,EAAuF;EAC3F,IAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;IACvB;EACD;;EACD,IAAMC,OAAO,GAAYF,MAAM,CAAC,CAAD,CAAN,CAAUG,GAAV,CAAc,SAAd,CAAzB;EACA,IAAMC,KAAK,GAAGF,OAAO,CAACG,QAAR,CAAiBD,KAA/B;;EACM,SAAoCA,KAAK,CAACL,MAAN,IAAgB,EAApD;EAAA,IAAEO,cAAc,oBAAhB;EAAA,IAAkBC,aAAa,mBAA/B;;EAENP,MAAM,CAACQ,OAAP,CAAe,UAACC,KAAD,EAAyBC,KAAzB,EAAsC;IACnD,IAAMC,KAAK,GAAGZ,MAAM,CAACW,KAAD,CAApB;IACA,IAAME,SAAS,GAAGD,KAAK,CAACE,IAAN,CAAW,UAACC,EAAD,EAAG;MAAK,SAAE,CAACX,GAAH,CAAO,MAAP,MAAmB,MAAnB;IAAyB,CAA5C,CAAlB;IACA,IAAMY,SAAS,GAAGpB,IAAI,CAACqB,UAAL,CAAgBP,KAAK,CAACQ,OAAN,EAAhB,CAAlB;IACA,IAAMC,QAAQ,GAAGvB,IAAI,CAACqB,UAAL,CAAgBJ,SAAS,CAACO,aAAV,EAAhB,CAAjB;IACA,IAAMC,QAAQ,GAAG,CAACL,SAAS,CAACM,QAAV,CAAmBH,QAAnB,CAAlB;IAEA,IAAMI,OAAO,GAAGb,KAAK,CAACc,IAAN,CAAW,MAAX,CAAhB;IACA,IAAMC,SAAS,GAAG5B,oBAAoB,CAAC0B,OAAD,CAAtC;;IAEA,IAAI,CAACF,QAAL,EAAe;MACb,IAAII,SAAJ,EAAe;QACb,IAAIlB,cAAJ,EAAoB;UAClBM,SAAS,CAACW,IAAV,CAAe,MAAf,EAAuBjB,cAAvB;QACD;MACF,CAJD,MAIO;QACL,IAAIC,aAAJ,EAAmB;UACjBK,SAAS,CAACW,IAAV,CAAe,MAAf,EAAuBhB,aAAvB;QACD;MACF;IACF,CAVD,MAUO;MACL;MACAK,SAAS,CAACW,IAAV,CAAenB,KAAK,CAACqB,cAAN,CAAqBC,KAApC;IACD;EACF,CAxBD;AAyBD","names":["BBox","isContrastColorWhite","adjustColor","items","labels","shapes","length","element","get","theme","geometry","fillColorLight","fillColorDark","forEach","shape","index","label","textShape","find","el","shapeBBox","fromObject","getBBox","textBBox","getCanvasBBox","overflow","contains","bgColor","attr","fillWhite","overflowLabels","style"],"sourceRoot":"","sources":["../../../../src/geometry/label/layout/adjust-color.ts"],"sourcesContent":["import { IGroup, IShape } from '../../../dependents';\nimport { BBox } from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nimport Element from '../../element';\nimport { LabelItem } from '../interface';\n\nexport function adjustColor(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[]) {\n  if (shapes.length === 0) {\n    return;\n  }\n  const element: Element = shapes[0].get('element');\n  const theme = element.geometry.theme;\n  const { fillColorLight, fillColorDark } = theme.labels || {};\n\n  shapes.forEach((shape: IShape | IGroup, index: number) => {\n    const label = labels[index];\n    const textShape = label.find((el) => el.get('type') === 'text');\n    const shapeBBox = BBox.fromObject(shape.getBBox());\n    const textBBox = BBox.fromObject(textShape.getCanvasBBox());\n    const overflow = !shapeBBox.contains(textBBox);\n\n    const bgColor = shape.attr('fill');\n    const fillWhite = isContrastColorWhite(bgColor);\n\n    if (!overflow) {\n      if (fillWhite) {\n        if (fillColorLight) {\n          textShape.attr('fill', fillColorLight);\n        }\n      } else {\n        if (fillColorDark) {\n          textShape.attr('fill', fillColorDark);\n        }\n      }\n    } else {\n      // 出现溢出直接应用 overflowLabel 样式\n      textShape.attr(theme.overflowLabels.style);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}