{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { isString, memoize, values } from '@antv/util';\nimport { getCanvasContext } from './context';\n/**\n * 计算文本在画布中的宽度\n * @param text 文本\n * @param font 字体\n */\n\nexport var measureTextWidth = memoize(function (text, font) {\n  if (font === void 0) {\n    font = {};\n  }\n\n  var fontSize = font.fontSize,\n      _a = font.fontFamily,\n      fontFamily = _a === void 0 ? 'sans-serif' : _a,\n      fontWeight = font.fontWeight,\n      fontStyle = font.fontStyle,\n      fontVariant = font.fontVariant;\n  var ctx = getCanvasContext(); // @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/font\n\n  ctx.font = [fontStyle, fontWeight, fontVariant, fontSize + \"px\", fontFamily].join(' ');\n  var metrics = ctx.measureText(isString(text) ? text : '');\n  return metrics.width;\n}, function (text, font) {\n  if (font === void 0) {\n    font = {};\n  }\n\n  return __spreadArrays([text], values(font)).join('');\n});","map":{"version":3,"mappings":";AAAA,SAASA,QAAT,EAAmBC,OAAnB,EAA4BC,MAA5B,QAA0C,YAA1C;AACA,SAASC,gBAAT,QAAiC,WAAjC;AAEA;;;;;;AAKA,OAAO,IAAMC,gBAAgB,GAAGH,OAAO,CACrC,UAACI,IAAD,EAAeC,IAAf,EAA6B;EAAd;IAAAA;EAAc;;EACnB,YAAQ,GAAoEA,IAAI,SAAhF;EAAA,IAAUC,KAAkED,IAAI,WAAhF;EAAA,IAAUE,UAAU,mBAAG,YAAH,GAAeD,EAAnC;EAAA,IAAqCE,UAAU,GAA6BH,IAAI,WAAhF;EAAA,IAAiDI,SAAS,GAAkBJ,IAAI,UAAhF;EAAA,IAA4DK,WAAW,GAAKL,IAAI,YAAhF;EACR,IAAMM,GAAG,GAAGT,gBAAgB,EAA5B,CAF2B,CAG3B;;EACAS,GAAG,CAACN,IAAJ,GAAW,CAACI,SAAD,EAAYD,UAAZ,EAAwBE,WAAxB,EAAwCE,QAAQ,OAAhD,EAAsDL,UAAtD,EAAkEM,IAAlE,CAAuE,GAAvE,CAAX;EACA,IAAMC,OAAO,GAAGH,GAAG,CAACI,WAAJ,CAAgBhB,QAAQ,CAACK,IAAD,CAAR,GAAiBA,IAAjB,GAAwB,EAAxC,CAAhB;EACA,OAAOU,OAAO,CAACE,KAAf;AACD,CARoC,EASrC,UAACZ,IAAD,EAAeC,IAAf,EAAwB;EAAT;IAAAA;EAAS;;EAAK,uBAACD,IAAD,GAAUH,MAAM,CAACI,IAAD,CAAhB,EAAwBQ,IAAxB,CAA6B,EAA7B;AAAgC,CATxB,CAAhC","names":["isString","memoize","values","getCanvasContext","measureTextWidth","text","font","_a","fontFamily","fontWeight","fontStyle","fontVariant","ctx","fontSize","join","metrics","measureText","width"],"sourceRoot":"","sources":["../../src/utils/measure-text.ts"],"sourcesContent":["import { isString, memoize, values } from '@antv/util';\nimport { getCanvasContext } from './context';\n\n/**\n * 计算文本在画布中的宽度\n * @param text 文本\n * @param font 字体\n */\nexport const measureTextWidth = memoize(\n  (text: string, font: any = {}): number => {\n    const { fontSize, fontFamily = 'sans-serif', fontWeight, fontStyle, fontVariant } = font;\n    const ctx = getCanvasContext();\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/font\n    ctx.font = [fontStyle, fontWeight, fontVariant, `${fontSize}px`, fontFamily].join(' ');\n    const metrics = ctx.measureText(isString(text) ? text : '');\n    return metrics.width;\n  },\n  (text: string, font = {}) => [text, ...values(font)].join('')\n);\n"]},"metadata":{},"sourceType":"module"}