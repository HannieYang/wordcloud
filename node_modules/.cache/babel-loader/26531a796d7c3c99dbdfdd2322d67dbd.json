{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, findIndex, get, find, isObject, every, isEqual, isBoolean } from '@antv/util';\nimport { theme as commonTheme, animation as commonAnimation, scale, interaction as commonInteraction, annotation as commonAnnotation, limitInPlot as commonLimitInPlot } from '../../adaptor/common';\nimport { percent } from '../../utils/transform/percent';\nimport { flow, deepAssign } from '../../utils';\nimport { findViewById } from '../../utils/view';\nimport { isColumn, getYAxisWithDefault, getGeometryOption, transformObjectToArray } from './util/option';\nimport { getViewLegendItems } from './util/legend';\nimport { drawSingleGeometry } from './util/geometry';\nimport { doSliderFilter } from './util/render-sider';\nimport { AxisType, DualAxesGeometry } from './types';\nimport { LEFT_AXES_VIEW, RIGHT_AXES_VIEW } from './constant';\n/**\n * transformOptions，双轴图整体的取参逻辑如下\n * 1. get index getOptions: 对应的是默认的图表参数，如 appendPadding，syncView 等\n * 2. get adpator transformOption: 对应的是双轴图的默认参数，deepAssign 优先级从低到高如下\n *    2.1 defaultoption，如 tooltip，legend\n *    2.2 用户填写 options\n *    2.3 根据用户填写的 options 补充的数组型 options，如 yaxis，GeometryOption，因为 deepAssign 无法 assign 数组\n *\n * @param params\n */\n\nexport function transformOptions(params) {\n  var _a;\n\n  var options = params.options;\n  var _b = options.geometryOptions,\n      geometryOptions = _b === void 0 ? [] : _b,\n      xField = options.xField,\n      yField = options.yField;\n  var allLine = every(geometryOptions, function (_a) {\n    var geometry = _a.geometry;\n    return geometry === DualAxesGeometry.Line || geometry === undefined;\n  });\n  return deepAssign({}, {\n    options: {\n      geometryOptions: [],\n      meta: (_a = {}, _a[xField] = {\n        // 默认为 cat 类型\n        type: 'cat',\n        // x 轴一定是同步 scale 的\n        sync: true,\n        // 如果有没有柱子，则\n        range: allLine ? [0, 1] : undefined\n      }, _a),\n      tooltip: {\n        showMarkers: allLine,\n        // 存在柱状图，不显示 crosshairs\n        showCrosshairs: allLine,\n        shared: true,\n        crosshairs: {\n          type: 'x'\n        }\n      },\n      interactions: !allLine ? [{\n        type: 'legend-visible-filter'\n      }, {\n        type: 'active-region'\n      }] : [{\n        type: 'legend-visible-filter'\n      }],\n      legend: {\n        position: 'top-left'\n      }\n    }\n  }, params, {\n    options: {\n      // yAxis\n      yAxis: transformObjectToArray(yField, options.yAxis),\n      // geometryOptions\n      geometryOptions: [getGeometryOption(xField, yField[0], geometryOptions[0]), getGeometryOption(xField, yField[1], geometryOptions[1])],\n      // annotations\n      annotations: transformObjectToArray(yField, options.annotations)\n    }\n  });\n}\n/**\n * 创建 双轴图 中绘制图形的 view，提前创建是因为 theme 适配器的需要\n * @param params\n */\n\nfunction createViews(params) {\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var geometryOptions = options.geometryOptions;\n  var SORT_MAP = {\n    line: 0,\n    column: 1\n  }; // 包含配置，id，数据的结构\n\n  var geometries = [{\n    type: (_a = geometryOptions[0]) === null || _a === void 0 ? void 0 : _a.geometry,\n    id: LEFT_AXES_VIEW\n  }, {\n    type: (_b = geometryOptions[1]) === null || _b === void 0 ? void 0 : _b.geometry,\n    id: RIGHT_AXES_VIEW\n  }]; // 将线的 view 放置在更上一层，防止线柱遮挡。先柱后先\n\n  geometries.sort(function (a, b) {\n    return -SORT_MAP[a.type] + SORT_MAP[b.type];\n  }).forEach(function (g) {\n    return chart.createView({\n      id: g.id\n    });\n  });\n  return params;\n}\n/**\n * 绘制图形\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      geometryOptions = options.geometryOptions,\n      data = options.data,\n      tooltip = options.tooltip; // 包含配置，id，数据的结构\n\n  var geometries = [__assign(__assign({}, geometryOptions[0]), {\n    id: LEFT_AXES_VIEW,\n    data: data[0],\n    yField: yField[0]\n  }), __assign(__assign({}, geometryOptions[1]), {\n    id: RIGHT_AXES_VIEW,\n    data: data[1],\n    yField: yField[1]\n  })];\n  geometries.forEach(function (geometry) {\n    var id = geometry.id,\n        data = geometry.data,\n        yField = geometry.yField; // 百分比柱状图需要额外处理一次数据\n\n    var isPercent = isColumn(geometry) && geometry.isPercent;\n    var formatData = isPercent ? percent(data, yField, xField, yField) : data;\n    var view = findViewById(chart, id).data(formatData);\n    var tooltipOptions = isPercent ? __assign({\n      formatter: function (datum) {\n        return {\n          name: datum[geometry.seriesField] || yField,\n          value: (Number(datum[yField]) * 100).toFixed(2) + '%'\n        };\n      }\n    }, tooltip) : tooltip; // 绘制图形\n\n    drawSingleGeometry({\n      chart: view,\n      options: {\n        xField: xField,\n        yField: yField,\n        tooltip: tooltipOptions,\n        geometryOption: geometry\n      }\n    });\n  });\n  return params;\n}\n\nexport function color(params) {\n  var _a;\n\n  var chart = params.chart,\n      options = params.options;\n  var geometryOptions = options.geometryOptions;\n  var themeColor = ((_a = chart.getTheme()) === null || _a === void 0 ? void 0 : _a.colors10) || [];\n  var start = 0;\n  /* 为 geometry 添加默认 color。\n   * 1. 若 geometryOptions 存在 color，则在 drawGeometry 时已处理\n   * 2. 若 不存在 color，获取 Geometry group scales个数，在 theme color 10 中提取\n   * 3. 为防止 group 过多导致右色板无值或值很少，右 view 面板在依次提取剩下的 N 个 后再 concat 一次 themeColor\n   * 4. 为简便获取 Geometry group scales个数，在绘制完后再执行 color\n   * 5. 考虑之后将不同 view 使用同一个色板的需求沉淀到 g2\n   */\n\n  chart.once('beforepaint', function () {\n    each(geometryOptions, function (geometryOption, index) {\n      var view = findViewById(chart, index === 0 ? LEFT_AXES_VIEW : RIGHT_AXES_VIEW);\n      if (geometryOption.color) return;\n      var groupScale = view.getGroupScales();\n      var count = get(groupScale, [0, 'values', 'length'], 1);\n      var color = themeColor.slice(start, start + count).concat(index === 0 ? [] : themeColor);\n      view.geometries.forEach(function (geometry) {\n        if (geometryOption.seriesField) {\n          geometry.color(geometryOption.seriesField, color);\n        } else {\n          geometry.color(color[0]);\n        }\n      });\n      start += count;\n    });\n    chart.render(true);\n  });\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\nexport function meta(params) {\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  scale((_a = {}, _a[xField] = xAxis, _a[yField[0]] = yAxis[0], _a))(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  scale((_b = {}, _b[xField] = xAxis, _b[yField[1]] = yAxis[1], _b))(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\nexport function axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  var xField = options.xField,\n      yField = options.yField,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis;\n  chart.axis(xField, false);\n  chart.axis(yField[0], false);\n  chart.axis(yField[1], false); // 左 View\n\n  leftView.axis(xField, xAxis);\n  leftView.axis(yField[0], getYAxisWithDefault(yAxis[0], AxisType.Left)); // 右 Y 轴\n\n  rightView.axis(xField, false);\n  rightView.axis(yField[1], getYAxisWithDefault(yAxis[1], AxisType.Right));\n  return params;\n}\n/**\n * tooltip 配置\n * @param params\n */\n\nexport function tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW); // tooltip 经过 getDefaultOption 处理后，一定不为 undefined\n\n  chart.tooltip(tooltip); // 在 view 上添加 tooltip，使得 shared 和 interaction active-region 起作用\n  // view 应该继承 chart 里的 shared，但是从表现看来，继承有点问题\n\n  leftView.tooltip({\n    shared: true\n  });\n  rightView.tooltip({\n    shared: true\n  });\n  return params;\n}\n/**\n * interaction 配置\n * @param params\n */\n\nexport function interaction(params) {\n  var chart = params.chart;\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * annotation 配置\n * @param params\n */\n\nexport function annotation(params) {\n  var chart = params.chart,\n      options = params.options;\n  var annotations = options.annotations;\n  var a1 = get(annotations, [0]);\n  var a2 = get(annotations, [1]);\n  commonAnnotation(a1)(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW),\n    options: {\n      annotations: a1\n    }\n  }));\n  commonAnnotation(a2)(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW),\n    options: {\n      annotations: a2\n    }\n  }));\n  return params;\n}\nexport function theme(params) {\n  var chart = params.chart;\n  /*\n   * 双轴图中，部分组件是绘制在子 view 层（例如 axis，line），部分组件是绘制在 chart （例如 legend)\n   * 为 chart 和 子 view 均注册 theme，使其自行遵循 G2 theme geometry > view > chart 进行渲染。\n   */\n\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  commonTheme(params);\n  return params;\n}\nexport function animation(params) {\n  var chart = params.chart;\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * 双轴图 limitInPlot\n * @param params\n */\n\nexport function limitInPlot(params) {\n  var chart = params.chart,\n      options = params.options;\n  var yAxis = options.yAxis;\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW),\n    options: {\n      yAxis: yAxis[0]\n    }\n  }));\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW),\n    options: {\n      yAxis: yAxis[1]\n    }\n  }));\n  return params;\n}\n/**\n * legend 配置\n * 使用 custom，便于和类似于分组柱状图-单折线图的逻辑统一\n * @param params\n */\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      geometryOptions = options.geometryOptions,\n      yField = options.yField,\n      data = options.data;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (isObject(legend) && legend.custom === true) {\n    chart.legend(legend);\n  } else {\n    var leftLegend_1 = get(geometryOptions, [0, 'legend'], legend);\n    var rightLegend_1 = get(geometryOptions, [1, 'legend'], legend); // 均使用自定义图例\n\n    chart.once('beforepaint', function () {\n      var leftItems = data[0].length ? getViewLegendItems({\n        view: leftView,\n        geometryOption: geometryOptions[0],\n        yField: yField[0],\n        legend: leftLegend_1\n      }) : [];\n      var rightItems = data[1].length ? getViewLegendItems({\n        view: rightView,\n        geometryOption: geometryOptions[1],\n        yField: yField[1],\n        legend: rightLegend_1\n      }) : [];\n      chart.legend(deepAssign({}, legend, {\n        custom: true,\n        // todo 修改类型定义\n        // @ts-ignore\n        items: leftItems.concat(rightItems)\n      }));\n    });\n\n    if (geometryOptions[0].seriesField) {\n      leftView.legend(geometryOptions[0].seriesField, leftLegend_1);\n    }\n\n    if (geometryOptions[1].seriesField) {\n      rightView.legend(geometryOptions[1].seriesField, rightLegend_1);\n    } // 自定义图例交互\n\n\n    chart.on('legend-item:click', function (evt) {\n      var delegateObject = get(evt, 'gEvent.delegateObject', {});\n\n      if (delegateObject && delegateObject.item) {\n        var _a = delegateObject.item,\n            field_1 = _a.value,\n            isGeometry = _a.isGeometry,\n            viewId = _a.viewId; // geometry 的时候，直接使用 view.changeVisible\n\n        if (isGeometry) {\n          var idx = findIndex(yField, function (yF) {\n            return yF === field_1;\n          });\n\n          if (idx > -1) {\n            var geometries = get(findViewById(chart, viewId), 'geometries');\n            each(geometries, function (g) {\n              g.changeVisible(!delegateObject.item.unchecked);\n            });\n          }\n        } else {\n          var legendItem_1 = get(chart.getController('legend'), 'option.items', []); // 分组柱线图\n\n          each(chart.views, function (view) {\n            // 单折柱图\n            var groupScale = view.getGroupScales();\n            each(groupScale, function (scale) {\n              if (scale.values && scale.values.indexOf(field_1) > -1) {\n                view.filter(scale.field, function (value) {\n                  var curLegendItem = find(legendItem_1, function (item) {\n                    return item.value === value;\n                  }); // 使用 legend 中的 unchecked 来判断，使得支持关闭多个图例\n\n                  return !curLegendItem.unchecked;\n                });\n              }\n            });\n            chart.render(true);\n          });\n        }\n      }\n    });\n  }\n\n  return params;\n}\n/**\n * 双轴图 slider 适配器\n * @param params\n */\n\nexport function slider(params) {\n  var chart = params.chart,\n      options = params.options;\n  var slider = options.slider;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n\n  if (slider) {\n    // 左 View\n    leftView.option('slider', slider); // 监听左侧 slider 改变事件， 同步右侧 View 视图\n\n    leftView.on('slider:valuechanged', function (evt) {\n      var _a = evt.event,\n          value = _a.value,\n          originValue = _a.originValue;\n\n      if (isEqual(value, originValue)) {\n        return;\n      }\n\n      doSliderFilter(rightView, value);\n    });\n    chart.once('afterpaint', function () {\n      // 初始化数据，配置默认值时需要同步\n      if (!isBoolean(slider)) {\n        var start = slider.start,\n            end = slider.end;\n\n        if (start || end) {\n          doSliderFilter(rightView, [start, end]);\n        }\n      }\n    });\n  }\n\n  return params;\n}\n/**\n * 双折线图适配器\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // transformOptions 一定在最前面处理；color legend 使用了 beforepaint，为便于理解放在最后面\n  return flow(transformOptions, createViews, // 主题靠前设置，作为最低优先级\n  theme, geometry, meta, axis, limitInPlot, tooltip, interaction, annotation, animation, color, legend, slider)(params);\n}","map":{"version":3,"mappings":"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","names":["each","findIndex","get","find","isObject","every","isEqual","isBoolean","theme","commonTheme","animation","commonAnimation","scale","interaction","commonInteraction","annotation","commonAnnotation","limitInPlot","commonLimitInPlot","percent","flow","deepAssign","findViewById","isColumn","getYAxisWithDefault","getGeometryOption","transformObjectToArray","getViewLegendItems","drawSingleGeometry","doSliderFilter","AxisType","DualAxesGeometry","LEFT_AXES_VIEW","RIGHT_AXES_VIEW","transformOptions","params","options","_b","xField","yField","allLine","geometryOptions","_a","geometry","Line","undefined","meta","type","sync","range","tooltip","showMarkers","showCrosshairs","shared","crosshairs","interactions","legend","position","yAxis","annotations","createViews","SORT_MAP","line","column","geometries","id","sort","a","b","forEach","g","createView","data","isPercent","formatData","view","chart","tooltipOptions","__assign","formatter","datum","name","seriesField","value","Number","toFixed","geometryOption","color","themeColor","getTheme","colors10","start","once","index","groupScale","getGroupScales","count","slice","concat","render","xAxis","axis","leftView","rightView","Left","Right","a1","a2","custom","leftLegend_1","rightLegend_1","leftItems","length","rightItems","items","on","evt","delegateObject","item","field_1","isGeometry","viewId","idx","yF","changeVisible","unchecked","legendItem_1","getController","views","values","indexOf","filter","field","curLegendItem","slider","option","originValue","end","adaptor"],"sourceRoot":"","sources":["../../../src/plots/dual-axes/adaptor.ts"],"sourcesContent":["import { each, findIndex, get, find, isObject, every, isEqual, isBoolean } from '@antv/util';\nimport { Scale, Types, Event } from '@antv/g2';\nimport {\n  theme as commonTheme,\n  animation as commonAnimation,\n  scale,\n  interaction as commonInteraction,\n  annotation as commonAnnotation,\n  limitInPlot as commonLimitInPlot,\n} from '../../adaptor/common';\nimport { percent } from '../../utils/transform/percent';\nimport { Params } from '../../core/adaptor';\nimport { Datum } from '../../types';\nimport { flow, deepAssign } from '../../utils';\nimport { findViewById } from '../../utils/view';\nimport { isColumn, getYAxisWithDefault, getGeometryOption, transformObjectToArray } from './util/option';\nimport { getViewLegendItems } from './util/legend';\nimport { drawSingleGeometry } from './util/geometry';\nimport { doSliderFilter } from './util/render-sider';\nimport { DualAxesOptions, AxisType, DualAxesGeometry } from './types';\nimport { LEFT_AXES_VIEW, RIGHT_AXES_VIEW } from './constant';\n\n/**\n * transformOptions，双轴图整体的取参逻辑如下\n * 1. get index getOptions: 对应的是默认的图表参数，如 appendPadding，syncView 等\n * 2. get adpator transformOption: 对应的是双轴图的默认参数，deepAssign 优先级从低到高如下\n *    2.1 defaultoption，如 tooltip，legend\n *    2.2 用户填写 options\n *    2.3 根据用户填写的 options 补充的数组型 options，如 yaxis，GeometryOption，因为 deepAssign 无法 assign 数组\n *\n * @param params\n */\nexport function transformOptions(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { options } = params;\n  const { geometryOptions = [], xField, yField } = options;\n  const allLine = every(\n    geometryOptions,\n    ({ geometry }) => geometry === DualAxesGeometry.Line || geometry === undefined\n  );\n  return deepAssign(\n    {},\n    {\n      options: {\n        geometryOptions: [],\n        meta: {\n          [xField]: {\n            // 默认为 cat 类型\n            type: 'cat',\n            // x 轴一定是同步 scale 的\n            sync: true,\n            // 如果有没有柱子，则\n            range: allLine ? [0, 1] : undefined,\n          },\n        },\n        tooltip: {\n          showMarkers: allLine,\n          // 存在柱状图，不显示 crosshairs\n          showCrosshairs: allLine,\n          shared: true,\n          crosshairs: {\n            type: 'x',\n          },\n        },\n        interactions: !allLine\n          ? [{ type: 'legend-visible-filter' }, { type: 'active-region' }]\n          : [{ type: 'legend-visible-filter' }],\n        legend: {\n          position: 'top-left',\n        },\n      },\n    },\n    params,\n    {\n      options: {\n        // yAxis\n        yAxis: transformObjectToArray(yField, options.yAxis),\n        // geometryOptions\n        geometryOptions: [\n          getGeometryOption(xField, yField[0], geometryOptions[0]),\n          getGeometryOption(xField, yField[1], geometryOptions[1]),\n        ],\n        // annotations\n        annotations: transformObjectToArray(yField, options.annotations),\n      },\n    }\n  );\n}\n\n/**\n * 创建 双轴图 中绘制图形的 view，提前创建是因为 theme 适配器的需要\n * @param params\n */\nfunction createViews(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { geometryOptions } = options;\n\n  const SORT_MAP = { line: 0, column: 1 };\n\n  // 包含配置，id，数据的结构\n  const geometries = [\n    { type: geometryOptions[0]?.geometry, id: LEFT_AXES_VIEW },\n    { type: geometryOptions[1]?.geometry, id: RIGHT_AXES_VIEW },\n  ];\n\n  // 将线的 view 放置在更上一层，防止线柱遮挡。先柱后先\n  geometries.sort((a, b) => -SORT_MAP[a.type] + SORT_MAP[b.type]).forEach((g) => chart.createView({ id: g.id }));\n\n  return params;\n}\n\n/**\n * 绘制图形\n * @param params\n */\nfunction geometry(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { xField, yField, geometryOptions, data, tooltip } = options;\n\n  // 包含配置，id，数据的结构\n  const geometries = [\n    { ...geometryOptions[0], id: LEFT_AXES_VIEW, data: data[0], yField: yField[0] },\n    { ...geometryOptions[1], id: RIGHT_AXES_VIEW, data: data[1], yField: yField[1] },\n  ];\n\n  geometries.forEach((geometry) => {\n    const { id, data, yField } = geometry;\n    // 百分比柱状图需要额外处理一次数据\n    const isPercent = isColumn(geometry) && geometry.isPercent;\n    const formatData = isPercent ? percent(data, yField, xField, yField) : data;\n    const view = findViewById(chart, id).data(formatData);\n\n    const tooltipOptions = isPercent\n      ? {\n          formatter: (datum: Datum) => ({\n            name: datum[geometry.seriesField] || yField,\n            value: (Number(datum[yField]) * 100).toFixed(2) + '%',\n          }),\n          ...tooltip,\n        }\n      : tooltip;\n\n    // 绘制图形\n    drawSingleGeometry({\n      chart: view,\n      options: {\n        xField,\n        yField,\n        tooltip: tooltipOptions,\n        geometryOption: geometry,\n      },\n    });\n  });\n  return params;\n}\n\nexport function color(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { geometryOptions } = options;\n  const themeColor = chart.getTheme()?.colors10 || [];\n\n  let start = 0;\n  /* 为 geometry 添加默认 color。\n   * 1. 若 geometryOptions 存在 color，则在 drawGeometry 时已处理\n   * 2. 若 不存在 color，获取 Geometry group scales个数，在 theme color 10 中提取\n   * 3. 为防止 group 过多导致右色板无值或值很少，右 view 面板在依次提取剩下的 N 个 后再 concat 一次 themeColor\n   * 4. 为简便获取 Geometry group scales个数，在绘制完后再执行 color\n   * 5. 考虑之后将不同 view 使用同一个色板的需求沉淀到 g2\n   */\n  chart.once('beforepaint', () => {\n    each(geometryOptions, (geometryOption, index) => {\n      const view = findViewById(chart, index === 0 ? LEFT_AXES_VIEW : RIGHT_AXES_VIEW);\n      if (geometryOption.color) return;\n      const groupScale = view.getGroupScales();\n      const count = get(groupScale, [0, 'values', 'length'], 1);\n      const color = themeColor.slice(start, start + count).concat(index === 0 ? [] : themeColor);\n      view.geometries.forEach((geometry) => {\n        if (geometryOption.seriesField) {\n          geometry.color(geometryOption.seriesField, color);\n        } else {\n          geometry.color(color[0]);\n        }\n      });\n      start += count;\n    });\n    chart.render(true);\n  });\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  scale({\n    [xField]: xAxis,\n    [yField[0]]: yAxis[0],\n  })(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n\n  scale({\n    [xField]: xAxis,\n    [yField[1]]: yAxis[1],\n  })(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  const { xField, yField, xAxis, yAxis } = options;\n\n  chart.axis(xField, false);\n  chart.axis(yField[0], false);\n  chart.axis(yField[1], false);\n\n  // 左 View\n  leftView.axis(xField, xAxis);\n  leftView.axis(yField[0], getYAxisWithDefault(yAxis[0], AxisType.Left));\n\n  // 右 Y 轴\n  rightView.axis(xField, false);\n  rightView.axis(yField[1], getYAxisWithDefault(yAxis[1], AxisType.Right));\n\n  return params;\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  // tooltip 经过 getDefaultOption 处理后，一定不为 undefined\n  chart.tooltip(tooltip);\n  // 在 view 上添加 tooltip，使得 shared 和 interaction active-region 起作用\n  // view 应该继承 chart 里的 shared，但是从表现看来，继承有点问题\n  leftView.tooltip({\n    shared: true,\n  });\n  rightView.tooltip({\n    shared: true,\n  });\n  return params;\n}\n\n/**\n * interaction 配置\n * @param params\n */\nexport function interaction(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * annotation 配置\n * @param params\n */\nexport function annotation(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { annotations } = options;\n\n  const a1 = get(annotations, [0]);\n  const a2 = get(annotations, [1]);\n\n  commonAnnotation(a1)(\n    deepAssign({}, params, {\n      chart: findViewById(chart, LEFT_AXES_VIEW),\n      options: {\n        annotations: a1,\n      },\n    })\n  );\n  commonAnnotation(a2)(\n    deepAssign({}, params, {\n      chart: findViewById(chart, RIGHT_AXES_VIEW),\n      options: {\n        annotations: a2,\n      },\n    })\n  );\n  return params;\n}\n\nexport function theme(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  /*\n   * 双轴图中，部分组件是绘制在子 view 层（例如 axis，line），部分组件是绘制在 chart （例如 legend)\n   * 为 chart 和 子 view 均注册 theme，使其自行遵循 G2 theme geometry > view > chart 进行渲染。\n   */\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n  commonTheme(params);\n\n  return params;\n}\n\nexport function animation(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * 双轴图 limitInPlot\n * @param params\n */\nexport function limitInPlot(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { yAxis } = options;\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, LEFT_AXES_VIEW),\n      options: {\n        yAxis: yAxis[0],\n      },\n    })\n  );\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, RIGHT_AXES_VIEW),\n      options: {\n        yAxis: yAxis[1],\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * legend 配置\n * 使用 custom，便于和类似于分组柱状图-单折线图的逻辑统一\n * @param params\n */\nexport function legend(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { legend, geometryOptions, yField, data } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (isObject(legend) && legend.custom === true) {\n    chart.legend(legend);\n  } else {\n    const leftLegend = get(geometryOptions, [0, 'legend'], legend);\n    const rightLegend = get(geometryOptions, [1, 'legend'], legend);\n    // 均使用自定义图例\n    chart.once('beforepaint', () => {\n      const leftItems = data[0].length\n        ? getViewLegendItems({\n            view: leftView,\n            geometryOption: geometryOptions[0],\n            yField: yField[0],\n            legend: leftLegend,\n          })\n        : [];\n\n      const rightItems = data[1].length\n        ? getViewLegendItems({\n            view: rightView,\n            geometryOption: geometryOptions[1],\n            yField: yField[1],\n            legend: rightLegend,\n          })\n        : [];\n\n      chart.legend(\n        deepAssign({}, legend, {\n          custom: true,\n          // todo 修改类型定义\n          // @ts-ignore\n          items: leftItems.concat(rightItems),\n        })\n      );\n    });\n\n    if (geometryOptions[0].seriesField) {\n      leftView.legend(geometryOptions[0].seriesField, leftLegend);\n    }\n    if (geometryOptions[1].seriesField) {\n      rightView.legend(geometryOptions[1].seriesField, rightLegend);\n    }\n\n    // 自定义图例交互\n    chart.on('legend-item:click', (evt) => {\n      const delegateObject = get(evt, 'gEvent.delegateObject', {});\n      if (delegateObject && delegateObject.item) {\n        const { value: field, isGeometry, viewId } = delegateObject.item;\n        // geometry 的时候，直接使用 view.changeVisible\n        if (isGeometry) {\n          const idx = findIndex(yField, (yF: string) => yF === field);\n          if (idx > -1) {\n            const geometries = get(findViewById(chart, viewId), 'geometries');\n            each(geometries, (g) => {\n              g.changeVisible(!delegateObject.item.unchecked);\n            });\n          }\n        } else {\n          const legendItem = get(chart.getController('legend'), 'option.items', []);\n          // 分组柱线图\n          each(chart.views, (view) => {\n            // 单折柱图\n            const groupScale = view.getGroupScales();\n            each(groupScale, (scale: Scale) => {\n              if (scale.values && scale.values.indexOf(field) > -1) {\n                view.filter(scale.field, (value) => {\n                  const curLegendItem: Types.LegendItem = find(\n                    legendItem,\n                    (item: Types.LegendItem) => item.value === value\n                  );\n                  // 使用 legend 中的 unchecked 来判断，使得支持关闭多个图例\n                  return !curLegendItem.unchecked;\n                });\n              }\n            });\n            chart.render(true);\n          });\n        }\n      }\n    });\n  }\n\n  return params;\n}\n\n/**\n * 双轴图 slider 适配器\n * @param params\n */\nexport function slider(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { slider } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  if (slider) {\n    // 左 View\n    leftView.option('slider', slider);\n    // 监听左侧 slider 改变事件， 同步右侧 View 视图\n    leftView.on('slider:valuechanged', (evt: Event) => {\n      const {\n        event: { value, originValue },\n      } = evt;\n      if (isEqual(value, originValue)) {\n        return;\n      }\n      doSliderFilter(rightView, value);\n    });\n    chart.once('afterpaint', () => {\n      // 初始化数据，配置默认值时需要同步\n      if (!isBoolean(slider)) {\n        const { start, end } = slider;\n        if (start || end) {\n          doSliderFilter(rightView, [start, end]);\n        }\n      }\n    });\n  }\n\n  return params;\n}\n\n/**\n * 双折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  // transformOptions 一定在最前面处理；color legend 使用了 beforepaint，为便于理解放在最后面\n  return flow(\n    transformOptions,\n    createViews,\n    // 主题靠前设置，作为最低优先级\n    theme,\n    geometry,\n    meta,\n    axis,\n    limitInPlot,\n    tooltip,\n    interaction,\n    annotation,\n    animation,\n    color,\n    legend,\n    slider\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}