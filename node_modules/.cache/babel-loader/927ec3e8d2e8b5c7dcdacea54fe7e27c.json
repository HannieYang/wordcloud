{"ast":null,"code":"import { each, isNumber } from '@antv/util';\nimport { getMaxLabelWidth } from '../../util/label';\nimport { getMatrixByAngle } from '../../util/matrix';\nimport Theme from '../../util/theme'; // 统一设置文本的角度\n\nfunction setLabelsAngle(labels, angle) {\n  each(labels, function (label) {\n    var x = label.attr('x');\n    var y = label.attr('y');\n    var matrix = getMatrixByAngle({\n      x: x,\n      y: y\n    }, angle);\n    label.attr('matrix', matrix);\n  });\n} // 旋转文本\n\n\nfunction labelRotate(isVertical, labelsGroup, limitLength, getAngle) {\n  var labels = labelsGroup.getChildren();\n\n  if (!labels.length) {\n    return false;\n  }\n\n  if (!isVertical && labels.length < 2) {\n    // 水平时至少有两个时才旋转\n    return false;\n  }\n\n  var maxWidth = getMaxLabelWidth(labels);\n  var isOverlap = false;\n\n  if (isVertical) {\n    // limitLength 为 0 或者 null 时不生效\n    isOverlap = !!limitLength && maxWidth > limitLength;\n  } else {\n    // 同 limitLength 无关\n    var tickWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));\n    isOverlap = maxWidth > tickWidth;\n  }\n\n  if (isOverlap) {\n    var angle = getAngle(limitLength, maxWidth);\n    setLabelsAngle(labels, angle);\n  }\n\n  return isOverlap;\n}\n\nexport function getDefault() {\n  return fixedAngle;\n}\n/**\n * 固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @param  {number}  customRotate 自定义旋转角度\n * @return {boolean}             是否发生了旋转\n */\n\nexport function fixedAngle(isVertical, labelsGroup, limitLength, customRotate) {\n  return labelRotate(isVertical, labelsGroup, limitLength, function () {\n    if (isNumber(customRotate)) {\n      return customRotate;\n    }\n\n    return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n  });\n}\n/**\n * 非固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @return {boolean}             是否发生了旋转\n */\n\nexport function unfixedAngle(isVertical, labelsGroup, limitLength) {\n  return labelRotate(isVertical, labelsGroup, limitLength, function (length, maxWidth) {\n    if (!length) {\n      // 如果没有设置 limitLength，则使用固定的角度旋转\n      return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n    }\n\n    if (isVertical) {\n      // 垂直时不需要判定 limitLength > maxWidth ，因为此时不会 overlap\n      return -Math.acos(length / maxWidth);\n    } else {\n      var angle = 0;\n\n      if (length > maxWidth) {\n        // 需要判定，asin 的参数 -1， 1\n        angle = Math.PI / 4;\n      } else {\n        angle = Math.asin(length / maxWidth);\n\n        if (angle > Math.PI / 4) {\n          // 大于 Math.PI / 4 时没意义\n          angle = Math.PI / 4;\n        }\n      }\n\n      return angle;\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["each","isNumber","getMaxLabelWidth","getMatrixByAngle","Theme","setLabelsAngle","labels","angle","label","x","attr","y","matrix","labelRotate","isVertical","labelsGroup","limitLength","getAngle","getChildren","length","maxWidth","isOverlap","tickWidth","Math","abs","getDefault","fixedAngle","customRotate","verticalAxisRotate","horizontalAxisRotate","unfixedAngle","acos","PI","asin"],"sourceRoot":"","sources":["../../../src/axis/overlap/auto-rotate.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}