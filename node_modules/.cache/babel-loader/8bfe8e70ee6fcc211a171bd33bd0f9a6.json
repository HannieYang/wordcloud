{"ast":null,"code":"import { __values } from \"tslib\";\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nregisterShape('point', 'image', {\n  draw: function (cfg, container) {\n    var e_1, _a;\n\n    var size = getStyle(cfg, false, false, 'r').r;\n    var points = this.parsePoints(cfg.points);\n    var pointPosition = points[0];\n\n    if (cfg.isStack) {\n      pointPosition = points[1];\n    } else if (points.length > 1) {\n      var group = container.addGroup();\n\n      try {\n        for (var points_1 = __values(points), points_1_1 = points_1.next(); !points_1_1.done; points_1_1 = points_1.next()) {\n          var point = points_1_1.value;\n          group.addShape('image', {\n            attrs: {\n              x: point.x - size / 2,\n              y: point.y - size,\n              width: size,\n              height: size,\n              img: cfg.shape[1]\n            }\n          });\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (points_1_1 && !points_1_1.done && (_a = points_1.return)) _a.call(points_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return group;\n    }\n\n    return container.addShape('image', {\n      attrs: {\n        x: pointPosition.x - size / 2,\n        y: pointPosition.y - size,\n        width: size,\n        height: size,\n        img: cfg.shape[1]\n      }\n    });\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: color\n      }\n    };\n  }\n});","map":{"version":3,"mappings":";AAGA,SAASA,aAAT,QAA8B,SAA9B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEAD,aAAa,CAAC,OAAD,EAAU,OAAV,EAAmB;EAC9BE,IAAI,EAAJ,UAAKC,GAAL,EAAqBC,SAArB,EAAsC;;;IAC5B,IAAGC,IAAI,GAAKJ,QAAQ,CAACE,GAAD,EAAM,KAAN,EAAa,KAAb,EAAoB,GAApB,CAAR,CAAgCG,CAA5C;IACR,IAAMC,MAAM,GAAG,KAAKC,WAAL,CAAiBL,GAAG,CAACI,MAArB,CAAf;IACA,IAAIE,aAAa,GAAGF,MAAM,CAAC,CAAD,CAA1B;;IACA,IAAIJ,GAAG,CAACO,OAAR,EAAiB;MACfD,aAAa,GAAGF,MAAM,CAAC,CAAD,CAAtB;IACD,CAFD,MAEO,IAAIA,MAAM,CAACI,MAAP,GAAgB,CAApB,EAAuB;MAC5B,IAAMC,KAAK,GAAGR,SAAS,CAACS,QAAV,EAAd;;;QACA,KAAoB,iCAAMC,4BAA1B,EAA0B,gBAA1B,EAA0BA,4BAA1B,EAA4B;UAAvB,IAAMC,KAAK,mBAAX;UACHH,KAAK,CAACI,QAAN,CAAe,OAAf,EAAwB;YACtBC,KAAK,EAAE;cACLC,CAAC,EAAGH,KAAK,CAACG,CAAN,GAAqBb,IAAI,GAAG,CAD3B;cAELc,CAAC,EAAGJ,KAAK,CAACI,CAAN,GAAqBd,IAFpB;cAGLe,KAAK,EAAEf,IAHF;cAILgB,MAAM,EAAEhB,IAJH;cAKLiB,GAAG,EAAEnB,GAAG,CAACoB,KAAJ,CAAU,CAAV;YALA;UADe,CAAxB;QASD;;;;;;;;;;;;;MAED,OAAOX,KAAP;IACD;;IAED,OAAOR,SAAS,CAACY,QAAV,CAAmB,OAAnB,EAA4B;MACjCC,KAAK,EAAE;QACLC,CAAC,EAAGT,aAAa,CAACS,CAAd,GAA6Bb,IAAI,GAAG,CADnC;QAELc,CAAC,EAAGV,aAAa,CAACU,CAAd,GAA6Bd,IAF5B;QAGLe,KAAK,EAAEf,IAHF;QAILgB,MAAM,EAAEhB,IAJH;QAKLiB,GAAG,EAAEnB,GAAG,CAACoB,KAAJ,CAAU,CAAV;MALA;IAD0B,CAA5B,CAAP;EASD,CAjC6B;EAkC9BC,SAAS,EAAT,UAAUC,SAAV,EAAmC;IACzB,SAAK,GAAKA,SAAS,MAAnB;IACR,OAAO;MACLC,MAAM,EAAE,QADH;MAELC,KAAK,EAAE;QACLrB,CAAC,EAAE,GADE;QAELsB,IAAI,EAAEC;MAFD;IAFF,CAAP;EAOD;AA3C6B,CAAnB,CAAb","names":["registerShape","getStyle","draw","cfg","container","size","r","points","parsePoints","pointPosition","isStack","length","group","addGroup","points_1_1","point","addShape","attrs","x","y","width","height","img","shape","getMarker","markerCfg","symbol","style","fill","color"],"sourceRoot":"","sources":["../../../../src/geometry/shape/point/image.ts"],"sourcesContent":["import { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nregisterShape('point', 'image', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const { r: size } = getStyle(cfg, false, false, 'r');\n    const points = this.parsePoints(cfg.points);\n    let pointPosition = points[0];\n    if (cfg.isStack) {\n      pointPosition = points[1];\n    } else if (points.length > 1) {\n      const group = container.addGroup();\n      for (const point of points) {\n        group.addShape('image', {\n          attrs: {\n            x: (point.x as number) - size / 2,\n            y: (point.y as number) - size,\n            width: size,\n            height: size,\n            img: cfg.shape[1],\n          },\n        });\n      }\n\n      return group;\n    }\n\n    return container.addShape('image', {\n      attrs: {\n        x: (pointPosition.x as number) - size / 2,\n        y: (pointPosition.y as number) - size,\n        width: size,\n        height: size,\n        img: cfg.shape[1],\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: color,\n      },\n    };\n  },\n});\n"]},"metadata":{},"sourceType":"module"}