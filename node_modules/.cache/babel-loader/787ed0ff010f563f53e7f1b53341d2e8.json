{"ast":null,"code":"import { __values } from \"tslib\";\nimport { isObject, each, get, groupBy, isNil, filter } from '@antv/util';\nimport { polarToCartesian } from '../../../../util/graphics';\nimport { antiCollision } from './util';\n/** label text和line距离 4px */\n\nvar MARGIN = 4;\n/**\n * 配置 labelline\n * @param item PolarLabelItem\n */\n\nfunction drawLabelline(item\n/** PolarLabelItem */\n, coordinate) {\n  /** 坐标圆心 */\n  var center = coordinate.getCenter();\n  /** 圆半径 */\n\n  var radius = coordinate.getRadius();\n\n  if (item && item.labelLine) {\n    var angle = item.angle,\n        labelOffset = item.offset; // 贴近圆周\n\n    var startPoint = polarToCartesian(center.x, center.y, radius, angle);\n    var itemX = item.x + get(item, 'offsetX', 0) * (Math.cos(angle) > 0 ? 1 : -1);\n    var itemY = item.y + get(item, 'offsetY', 0) * (Math.sin(angle) > 0 ? 1 : -1);\n    var endPoint = {\n      x: itemX - Math.cos(angle) * MARGIN,\n      y: itemY - Math.sin(angle) * MARGIN\n    };\n    var smoothConnector = item.labelLine.smooth;\n    var path = [];\n    var dx = endPoint.x - center.x;\n    var dy = endPoint.y - center.y;\n    var endAngle = Math.atan(dy / dx); // 第三象限 & 第四象限\n\n    if (dx < 0) {\n      endAngle += Math.PI;\n    } // 默认 smooth, undefined 也为 smooth\n\n\n    if (smoothConnector === false) {\n      if (!isObject(item.labelLine)) {\n        // labelLine: true\n        item.labelLine = {};\n      } // 表示弧线的方向，0 表示从起点到终点沿逆时针画弧, 1 表示顺时针\n\n\n      var sweepFlag = 0; // 第一象限\n\n      if (angle < 0 && angle > -Math.PI / 2 || angle > Math.PI * 1.5) {\n        if (endPoint.y > startPoint.y) {\n          sweepFlag = 1;\n        }\n      } // 第二象限\n\n\n      if (angle >= 0 && angle < Math.PI / 2) {\n        if (endPoint.y > startPoint.y) {\n          sweepFlag = 1;\n        }\n      } // 第三象限\n\n\n      if (angle >= Math.PI / 2 && angle < Math.PI) {\n        if (startPoint.y > endPoint.y) {\n          sweepFlag = 1;\n        }\n      } // 第四象限\n\n\n      if (angle < -Math.PI / 2 || angle >= Math.PI && angle < Math.PI * 1.5) {\n        if (startPoint.y > endPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n\n      var distance = labelOffset / 2 > 4 ? 4 : Math.max(labelOffset / 2 - 1, 0);\n      var breakPoint = polarToCartesian(center.x, center.y, radius + distance, angle); // 圆弧的结束点\n\n      var breakPoint3 = polarToCartesian(center.x, center.y, radius + labelOffset / 2, endAngle);\n      /**\n       * @example\n       * M 100 100 L100 90 A 50 50 0 0 0 150 50\n       * 移动至 (100, 100), 连接到 (100, 90), 以 (50, 50) 为圆心，绘制圆弧至 (150, 50);\n       * A 命令的第 4 个参数 large-arc-flag, 决定弧线是大于还是小于 180 度: 0 表示小角度弧，1 表示大角\n       * 第 5 个参数: 是否顺时针绘制\n       */\n      // 默认小弧\n\n      var largeArcFlag = 0; // step1: 移动至起点\n\n      path.push(\"M \".concat(startPoint.x, \" \").concat(startPoint.y)); // step2: 连接拐点\n\n      path.push(\"L \".concat(breakPoint.x, \" \").concat(breakPoint.y)); // step3: 绘制圆弧 至 结束点\n\n      path.push(\"A \".concat(center.x, \" \").concat(center.y, \" 0 \").concat(largeArcFlag, \" \").concat(sweepFlag, \" \").concat(breakPoint3.x, \" \").concat(breakPoint3.y)); // step4: 连接结束点\n\n      path.push(\"L \".concat(endPoint.x, \" \").concat(endPoint.y));\n    } else {\n      var breakPoint = polarToCartesian(center.x, center.y, radius + (labelOffset / 2 > 4 ? 4 : Math.max(labelOffset / 2 - 1, 0)), angle); // G2 旧的拉线\n      // path.push('Q', `${breakPoint.x}`, `${breakPoint.y}`, `${endPoint.x}`, `${endPoint.y}`);\n\n      var xSign = startPoint.x < center.x ? 1 : -1; // step1: 连接结束点\n\n      path.push(\"M \".concat(endPoint.x, \" \").concat(endPoint.y));\n      var slope1 = (startPoint.y - center.y) / (startPoint.x - center.x);\n      var slope2 = (endPoint.y - center.y) / (endPoint.x - center.x);\n\n      if (Math.abs(slope1 - slope2) > Math.pow(Math.E, -16)) {\n        // step2: 绘制 curve line (起点 & 结合点与圆心的斜率不等时, 由于存在误差, 使用近似处理)\n        path.push.apply(path, ['C', endPoint.x + xSign * 4, endPoint.y, 2 * breakPoint.x - startPoint.x, 2 * breakPoint.y - startPoint.y, startPoint.x, startPoint.y]);\n      } // step3: 连接至起点\n\n\n      path.push(\"L \".concat(startPoint.x, \" \").concat(startPoint.y));\n    }\n\n    item.labelLine.path = path.join(' ');\n  }\n}\n/**\n * 饼图 outer-label 布局, 适用于 type = pie 且 label offset > 0 的标签\n */\n\n\nexport function pieOuterLabelLayout(originalItems, labels, shapes, region) {\n  var e_1, _a;\n\n  var items = filter(originalItems, function (item) {\n    return !isNil(item);\n  });\n  /** 坐标系 */\n\n  var coordinate = labels[0] && labels[0].get('coordinate');\n\n  if (!coordinate) {\n    return;\n  }\n  /** 坐标圆心 */\n\n\n  var center = coordinate.getCenter();\n  /** 圆半径 */\n\n  var radius = coordinate.getRadius();\n  /** label shapes */\n\n  var labelsMap = {};\n\n  try {\n    for (var labels_1 = __values(labels), labels_1_1 = labels_1.next(); !labels_1_1.done; labels_1_1 = labels_1.next()) {\n      var labelShape = labels_1_1.value;\n      labelsMap[labelShape.get('id')] = labelShape;\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (labels_1_1 && !labels_1_1.done && (_a = labels_1.return)) _a.call(labels_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  } // note labelHeight 可以控制 label 的行高\n\n\n  var labelHeight = get(items[0], 'labelHeight', 14);\n  var labelOffset = get(items[0], 'offset', 0);\n\n  if (labelOffset <= 0) {\n    return;\n  }\n\n  var LEFT_HALF_KEY = 'left';\n  var RIGHT_HALF_KEY = 'right'; // step 1: separate labels\n\n  var separateLabels = groupBy(items, function (item) {\n    return item.x < center.x ? LEFT_HALF_KEY : RIGHT_HALF_KEY;\n  });\n  var start = coordinate.start,\n      end = coordinate.end; // step2: calculate totalHeight\n\n  var totalHeight = Math.min((radius + labelOffset + labelHeight) * 2, coordinate.getHeight());\n  var totalR = totalHeight / 2;\n  /** labels 容器的范围(后续根据组件的布局设计进行调整) */\n\n  var labelsContainerRange = {\n    minX: start.x,\n    maxX: end.x,\n    minY: center.y - totalR,\n    maxY: center.y + totalR\n  }; // step 3: antiCollision\n\n  each(separateLabels, function (half, key) {\n    var maxLabelsCountForOneSide = Math.floor(totalHeight / labelHeight);\n\n    if (half.length > maxLabelsCountForOneSide) {\n      half.sort(function (a, b) {\n        // sort by percentage DESC\n        return b.percent - a.percent;\n      });\n      each(half, function (labelItem, idx) {\n        if (idx + 1 > maxLabelsCountForOneSide) {\n          labelsMap[labelItem.id].set('visible', false);\n          labelItem.invisible = true;\n        }\n      });\n    }\n\n    antiCollision(half, labelHeight, labelsContainerRange);\n  });\n  each(separateLabels, function (half, key) {\n    each(half, function (item) {\n      var isRight = key === RIGHT_HALF_KEY;\n      var labelShape = labelsMap[item.id]; // because group could not effect content-shape, should set content-shape position manually\n\n      var content = labelShape.getChildByIndex(0); // textShape 发生过调整\n\n      if (content) {\n        var r = radius + labelOffset; // (x - cx)^2 + (y - cy)^2 = totalR^2\n\n        var dy = item.y - center.y;\n        var rPow2 = Math.pow(r, 2);\n        var dyPow2 = Math.pow(dy, 2);\n        var dxPow2 = rPow2 - dyPow2 > 0 ? rPow2 - dyPow2 : 0;\n        var dx = Math.sqrt(dxPow2);\n        var dx_offset = Math.abs(Math.cos(item.angle) * r);\n\n        if (!isRight) {\n          // left\n          item.x = center.x - Math.max(dx, dx_offset);\n        } else {\n          // right\n          item.x = center.x + Math.max(dx, dx_offset);\n        }\n      } // adjust labelShape\n\n\n      if (content) {\n        content.attr('y', item.y);\n        content.attr('x', item.x);\n      }\n\n      drawLabelline(item, coordinate);\n    });\n  });\n}","map":{"version":3,"mappings":"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","names":["isObject","each","get","groupBy","isNil","filter","polarToCartesian","antiCollision","MARGIN","drawLabelline","item","coordinate","center","getCenter","radius","getRadius","labelLine","labelOffset","startPoint","x","y","angle","itemX","Math","cos","itemY","sin","endPoint","smoothConnector","smooth","path","dx","dy","endAngle","atan","PI","sweepFlag","distance","max","breakPoint","breakPoint3","largeArcFlag","push","concat","xSign","slope1","slope2","abs","pow","E","apply","join","pieOuterLabelLayout","originalItems","labels","shapes","region","items","labelsMap","labels_1_1","labelShape","labelHeight","LEFT_HALF_KEY","RIGHT_HALF_KEY","separateLabels","end","totalHeight","min","getHeight","totalR","labelsContainerRange","minX","start","maxX","minY","maxY","half","key","maxLabelsCountForOneSide","floor","length","sort","a","b","percent","labelItem","idx","id","set","invisible","isRight","content","getChildByIndex","r","rPow2","dyPow2","dxPow2","sqrt","dx_offset","attr"],"sourceRoot":"","sources":["../../../../../src/geometry/label/layout/pie/outer.ts"],"sourcesContent":["import { Coordinate } from '@antv/coord';\nimport { BBox, IGroup, IShape, IElement } from '@antv/g-base';\nimport { isObject, each, get, groupBy, isNil, filter } from '@antv/util';\nimport { polarToCartesian } from '../../../../util/graphics';\nimport { PolarLabelItem } from '../../interface';\nimport { antiCollision } from './util';\n\n/** label text和line距离 4px */\nconst MARGIN = 4;\n\n/**\n * 配置 labelline\n * @param item PolarLabelItem\n */\nfunction drawLabelline(item: any /** PolarLabelItem */, coordinate: Coordinate) {\n  /** 坐标圆心 */\n  const center = coordinate.getCenter();\n  /** 圆半径 */\n  const radius = coordinate.getRadius();\n\n  if (item && item.labelLine) {\n    const { angle, offset: labelOffset } = item;\n    // 贴近圆周\n    const startPoint = polarToCartesian(center.x, center.y, radius, angle);\n    const itemX = item.x + get(item, 'offsetX', 0) * (Math.cos(angle) > 0 ? 1 : -1);\n    const itemY = item.y + get(item, 'offsetY', 0) * (Math.sin(angle) > 0 ? 1 : -1);\n\n    const endPoint = {\n      x: itemX - Math.cos(angle) * MARGIN,\n      y: itemY - Math.sin(angle) * MARGIN,\n    };\n\n    const smoothConnector = item.labelLine.smooth;\n    const path = [];\n    const dx = endPoint.x - center.x;\n    const dy = endPoint.y - center.y;\n    let endAngle = Math.atan(dy / dx);\n    // 第三象限 & 第四象限\n    if (dx < 0) {\n      endAngle += Math.PI;\n    }\n\n    // 默认 smooth, undefined 也为 smooth\n    if (smoothConnector === false) {\n      if (!isObject(item.labelLine)) {\n        // labelLine: true\n        item.labelLine = {};\n      }\n\n      // 表示弧线的方向，0 表示从起点到终点沿逆时针画弧, 1 表示顺时针\n      let sweepFlag = 0;\n\n      // 第一象限\n      if ((angle < 0 && angle > -Math.PI / 2) || angle > Math.PI * 1.5) {\n        if (endPoint.y > startPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n\n      // 第二象限\n      if (angle >= 0 && angle < Math.PI / 2) {\n        if (endPoint.y > startPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n\n      // 第三象限\n      if (angle >= Math.PI / 2 && angle < Math.PI) {\n        if (startPoint.y > endPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n\n      // 第四象限\n      if (angle < -Math.PI / 2 || (angle >= Math.PI && angle < Math.PI * 1.5)) {\n        if (startPoint.y > endPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n\n      const distance = labelOffset / 2 > 4 ? 4 : Math.max(labelOffset / 2 - 1, 0);\n      const breakPoint = polarToCartesian(center.x, center.y, radius + distance, angle);\n      // 圆弧的结束点\n      const breakPoint3 = polarToCartesian(center.x, center.y, radius + labelOffset / 2, endAngle);\n\n      /**\n       * @example\n       * M 100 100 L100 90 A 50 50 0 0 0 150 50\n       * 移动至 (100, 100), 连接到 (100, 90), 以 (50, 50) 为圆心，绘制圆弧至 (150, 50);\n       * A 命令的第 4 个参数 large-arc-flag, 决定弧线是大于还是小于 180 度: 0 表示小角度弧，1 表示大角\n       * 第 5 个参数: 是否顺时针绘制\n       */\n      // 默认小弧\n      const largeArcFlag = 0;\n      // step1: 移动至起点\n      path.push(`M ${startPoint.x} ${startPoint.y}`);\n      // step2: 连接拐点\n      path.push(`L ${breakPoint.x} ${breakPoint.y}`);\n      // step3: 绘制圆弧 至 结束点\n      path.push(`A ${center.x} ${center.y} 0 ${largeArcFlag} ${sweepFlag} ${breakPoint3.x} ${breakPoint3.y}`);\n      // step4: 连接结束点\n      path.push(`L ${endPoint.x} ${endPoint.y}`);\n    } else {\n      const breakPoint = polarToCartesian(\n        center.x,\n        center.y,\n        radius + (labelOffset / 2 > 4 ? 4 : Math.max(labelOffset / 2 - 1, 0)),\n        angle\n      );\n      // G2 旧的拉线\n      // path.push('Q', `${breakPoint.x}`, `${breakPoint.y}`, `${endPoint.x}`, `${endPoint.y}`);\n      const xSign = startPoint.x < center.x ? 1 : -1;\n      // step1: 连接结束点\n      path.push(`M ${endPoint.x} ${endPoint.y}`);\n      const slope1 = (startPoint.y - center.y) / (startPoint.x - center.x);\n      const slope2 = (endPoint.y - center.y) / (endPoint.x - center.x);\n      if (Math.abs(slope1 - slope2) > Math.pow(Math.E, -16)) {\n        // step2: 绘制 curve line (起点 & 结合点与圆心的斜率不等时, 由于存在误差, 使用近似处理)\n        path.push(\n          ...[\n            'C',\n            endPoint.x + xSign * 4,\n            endPoint.y,\n            2 * breakPoint.x - startPoint.x,\n            2 * breakPoint.y - startPoint.y,\n            startPoint.x,\n            startPoint.y,\n          ]\n        );\n      }\n      // step3: 连接至起点\n      path.push(`L ${startPoint.x} ${startPoint.y}`);\n    }\n    item.labelLine.path = path.join(' ');\n  }\n}\n\n/**\n * 饼图 outer-label 布局, 适用于 type = pie 且 label offset > 0 的标签\n */\nexport function pieOuterLabelLayout(\n  originalItems: PolarLabelItem[],\n  labels: IGroup[],\n  shapes: IShape[] | IGroup[],\n  region: BBox\n) {\n  const items = filter(originalItems, (item) => !isNil(item));\n  /** 坐标系 */\n  const coordinate = labels[0] && labels[0].get('coordinate');\n  if (!coordinate) {\n    return;\n  }\n\n  /** 坐标圆心 */\n  const center = coordinate.getCenter();\n  /** 圆半径 */\n  const radius = coordinate.getRadius();\n  /** label shapes */\n  const labelsMap: Record<string /** id */, IGroup> = {};\n  for (const labelShape of labels) {\n    labelsMap[labelShape.get('id')] = labelShape;\n  }\n\n  // note labelHeight 可以控制 label 的行高\n  const labelHeight: number = get(items[0], 'labelHeight', 14);\n  const labelOffset: number = get(items[0], 'offset', 0);\n\n  if (labelOffset <= 0) {\n    return;\n  }\n\n  const LEFT_HALF_KEY = 'left';\n  const RIGHT_HALF_KEY = 'right';\n  // step 1: separate labels\n  const separateLabels = groupBy(items, (item) => (item.x < center.x ? LEFT_HALF_KEY : RIGHT_HALF_KEY));\n\n  const { start, end } = coordinate;\n  // step2: calculate totalHeight\n  const totalHeight = Math.min((radius + labelOffset + labelHeight) * 2, coordinate.getHeight());\n  const totalR = totalHeight / 2;\n\n  /** labels 容器的范围(后续根据组件的布局设计进行调整) */\n  const labelsContainerRange = {\n    minX: start.x,\n    maxX: end.x,\n    minY: center.y - totalR,\n    maxY: center.y + totalR,\n  };\n\n  // step 3: antiCollision\n  each(separateLabels, (half, key) => {\n    const maxLabelsCountForOneSide = Math.floor(totalHeight / labelHeight);\n    if (half.length > maxLabelsCountForOneSide) {\n      half.sort((a, b) => {\n        // sort by percentage DESC\n        return b.percent - a.percent;\n      });\n\n      each(half, (labelItem: PolarLabelItem, idx) => {\n        if (idx + 1 > maxLabelsCountForOneSide) {\n          labelsMap[labelItem.id].set('visible', false);\n          labelItem.invisible = true;\n        }\n      });\n    }\n    antiCollision(half, labelHeight, labelsContainerRange);\n  });\n\n  each(separateLabels, (half: PolarLabelItem[], key: string) => {\n    each(half, (item: PolarLabelItem) => {\n      const isRight = key === RIGHT_HALF_KEY;\n      const labelShape = labelsMap[item.id];\n\n      // because group could not effect content-shape, should set content-shape position manually\n      const content = labelShape.getChildByIndex(0) as IElement;\n\n      // textShape 发生过调整\n      if (content) {\n        const r = radius + labelOffset;\n        // (x - cx)^2 + (y - cy)^2 = totalR^2\n        const dy = item.y - center.y;\n\n        const rPow2 = Math.pow(r, 2);\n        const dyPow2 = Math.pow(dy, 2);\n        const dxPow2 = rPow2 - dyPow2 > 0 ? rPow2 - dyPow2 : 0;\n        const dx = Math.sqrt(dxPow2);\n\n        const dx_offset = Math.abs(Math.cos(item.angle) * r);\n        if (!isRight) {\n          // left\n          item.x = center.x - Math.max(dx, dx_offset);\n        } else {\n          // right\n          item.x = center.x + Math.max(dx, dx_offset);\n        }\n      }\n\n      // adjust labelShape\n      if (content) {\n        content.attr('y', item.y);\n        content.attr('x', item.x);\n      }\n\n      drawLabelline(item, coordinate);\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}