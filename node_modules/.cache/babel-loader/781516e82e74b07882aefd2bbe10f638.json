{"ast":null,"code":"import { reduce, get } from '@antv/util';\n/**\n * 在 View 中查找第一个指定 type 类型的 geometry\n * @param view\n * @param type\n */\n\nexport function findGeometry(view, type) {\n  return view.geometries.find(function (g) {\n    return g.type === type;\n  });\n}\n/**\n * 获取 View 的 所有 elements\n */\n\nexport function getAllElements(view) {\n  return reduce(view.geometries, function (r, geometry) {\n    return r.concat(geometry.elements);\n  }, []);\n}\n/**\n * 递归获取 View 的 所有 elements, 包括 View 的子 View\n */\n\nexport function getAllElementsRecursively(view) {\n  if (get(view, ['views', 'length'], 0) <= 0) {\n    return getAllElements(view);\n  }\n\n  return reduce(view.views, function (ele, subView) {\n    return ele.concat(getAllElementsRecursively(subView));\n  }, getAllElements(view));\n}\n/**\n * 递归获取 View 的 所有 geometries, 包括 View 的子 View\n */\n\nexport function getAllGeometriesRecursively(view) {\n  if (get(view, ['views', 'length'], 0) <= 0) {\n    return view.geometries;\n  }\n\n  return reduce(view.views, function (ele, subView) {\n    return ele.concat(subView.geometries);\n  }, view.geometries);\n}","map":{"version":3,"mappings":"AACA,SAASA,MAAT,EAAiBC,GAAjB,QAA4B,YAA5B;AAEA;;;;;;AAKA,OAAM,SAAUC,YAAV,CAAuBC,IAAvB,EAAmCC,IAAnC,EAA+C;EACnD,OAAOD,IAAI,CAACE,UAAL,CAAgBC,IAAhB,CAAqB,UAACC,CAAD,EAAY;IAAK,QAAC,CAACH,IAAF,KAAWA,IAAX;EAAe,CAArD,CAAP;AACD;AAED;;;;AAGA,OAAM,SAAUI,cAAV,CAAyBL,IAAzB,EAAmC;EACvC,OAAOH,MAAM,CACXG,IAAI,CAACE,UADM,EAEX,UAACI,CAAD,EAAeC,QAAf,EAAiC;IAC/B,OAAOD,CAAC,CAACE,MAAF,CAASD,QAAQ,CAACE,QAAlB,CAAP;EACD,CAJU,EAKX,EALW,CAAb;AAOD;AAED;;;;AAGA,OAAM,SAAUC,yBAAV,CAAoCV,IAApC,EAA8C;EAClD,IAAIF,GAAG,CAACE,IAAD,EAAO,CAAC,OAAD,EAAU,QAAV,CAAP,EAA4B,CAA5B,CAAH,IAAqC,CAAzC,EAA4C;IAC1C,OAAOK,cAAc,CAACL,IAAD,CAArB;EACD;;EAED,OAAOH,MAAM,CACXG,IAAI,CAACW,KADM,EAEX,UAACC,GAAD,EAAiBC,OAAjB,EAA8B;IAC5B,OAAOD,GAAG,CAACJ,MAAJ,CAAWE,yBAAyB,CAACG,OAAD,CAApC,CAAP;EACD,CAJU,EAKXR,cAAc,CAACL,IAAD,CALH,CAAb;AAOD;AAED;;;;AAGA,OAAM,SAAUc,2BAAV,CAAsCd,IAAtC,EAAgD;EACpD,IAAIF,GAAG,CAACE,IAAD,EAAO,CAAC,OAAD,EAAU,QAAV,CAAP,EAA4B,CAA5B,CAAH,IAAqC,CAAzC,EAA4C;IAC1C,OAAOA,IAAI,CAACE,UAAZ;EACD;;EAED,OAAOL,MAAM,CACXG,IAAI,CAACW,KADM,EAEX,UAACC,GAAD,EAAkBC,OAAlB,EAA+B;IAC7B,OAAOD,GAAG,CAACJ,MAAJ,CAAWK,OAAO,CAACX,UAAnB,CAAP;EACD,CAJU,EAKXF,IAAI,CAACE,UALM,CAAb;AAOD","names":["reduce","get","findGeometry","view","type","geometries","find","g","getAllElements","r","geometry","concat","elements","getAllElementsRecursively","views","ele","subView","getAllGeometriesRecursively"],"sourceRoot":"","sources":["../../src/utils/geometry.ts"],"sourcesContent":["import { Geometry, View, Element } from '@antv/g2';\nimport { reduce, get } from '@antv/util';\n\n/**\n * 在 View 中查找第一个指定 type 类型的 geometry\n * @param view\n * @param type\n */\nexport function findGeometry(view: View, type: string): Geometry {\n  return view.geometries.find((g: Geometry) => g.type === type);\n}\n\n/**\n * 获取 View 的 所有 elements\n */\nexport function getAllElements(view: View): Element[] {\n  return reduce(\n    view.geometries,\n    (r: Element[], geometry: Geometry) => {\n      return r.concat(geometry.elements);\n    },\n    []\n  );\n}\n\n/**\n * 递归获取 View 的 所有 elements, 包括 View 的子 View\n */\nexport function getAllElementsRecursively(view: View): Element[] {\n  if (get(view, ['views', 'length'], 0) <= 0) {\n    return getAllElements(view);\n  }\n\n  return reduce(\n    view.views,\n    (ele: Element[], subView: View) => {\n      return ele.concat(getAllElementsRecursively(subView));\n    },\n    getAllElements(view)\n  );\n}\n\n/**\n * 递归获取 View 的 所有 geometries, 包括 View 的子 View\n */\nexport function getAllGeometriesRecursively(view: View): Geometry[] {\n  if (get(view, ['views', 'length'], 0) <= 0) {\n    return view.geometries;\n  }\n\n  return reduce(\n    view.views,\n    (ele: Geometry[], subView: View) => {\n      return ele.concat(subView.geometries);\n    },\n    view.geometries\n  );\n}\n"]},"metadata":{},"sourceType":"module"}