{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { getSiblingPoint, getSilbings } from '../../util';\nimport TooltipAction from './geometry';\n/**\n * 存在多个 view 时，控制其他 view 上的 tooltip 显示\n * @ignore\n */\n\nvar SiblingTooltip =\n/** @class */\nfunction (_super) {\n  __extends(SiblingTooltip, _super);\n\n  function SiblingTooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 所有同一层级的 tooltip 显示\n   * @param view\n   * @param point\n   */\n\n\n  SiblingTooltip.prototype.showTooltip = function (view, point) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      var siblingPoint = getSiblingPoint(view, sibling, point);\n      sibling.showTooltip(siblingPoint);\n    });\n  };\n  /**\n   * 隐藏同一层级的 tooltip\n   * @param view\n   */\n\n\n  SiblingTooltip.prototype.hideTooltip = function (view) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      sibling.hideTooltip();\n    });\n  };\n\n  return SiblingTooltip;\n}(TooltipAction);\n\nexport default SiblingTooltip;","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,QAAqB,YAArB;AAGA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,YAA7C;AACA,OAAOC,aAAP,MAA0B,YAA1B;AAEA;;;;;AAIA;AAAA;AAAA;EAA6BC;;EAA7B;;EAuBC;EAtBC;;;;;;;EAKUC,uCAAV,UAAsBC,IAAtB,EAAkCC,KAAlC,EAA8C;IAC5C,IAAMC,QAAQ,GAAGN,WAAW,CAACI,IAAD,CAA5B;IACAN,IAAI,CAACQ,QAAD,EAAW,UAACC,OAAD,EAAQ;MACrB,IAAMC,YAAY,GAAGT,eAAe,CAACK,IAAD,EAAOG,OAAP,EAAgBF,KAAhB,CAApC;MACAE,OAAO,CAACE,WAAR,CAAoBD,YAApB;IACD,CAHG,CAAJ;EAID,CANS;EAOV;;;;;;EAIUL,uCAAV,UAAsBC,IAAtB,EAA0B;IACxB,IAAME,QAAQ,GAAGN,WAAW,CAACI,IAAD,CAA5B;IACAN,IAAI,CAACQ,QAAD,EAAW,UAACC,OAAD,EAAQ;MACrBA,OAAO,CAACG,WAAR;IACD,CAFG,CAAJ;EAGD,CALS;;EAMZ;AAAC,CAvBD,CAA6BT,aAA7B;;AAyBA,eAAeE,cAAf","names":["each","getSiblingPoint","getSilbings","TooltipAction","__extends","SiblingTooltip","view","point","siblings","sibling","siblingPoint","showTooltip","hideTooltip"],"sourceRoot":"","sources":["../../../../../src/interaction/action/component/tooltip/sibling.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { View } from '../../../../chart';\nimport { Point } from '../../../../interface';\nimport { getSiblingPoint, getSilbings } from '../../util';\nimport TooltipAction from './geometry';\n\n/**\n * 存在多个 view 时，控制其他 view 上的 tooltip 显示\n * @ignore\n */\nclass SiblingTooltip extends TooltipAction {\n  /**\n   * 所有同一层级的 tooltip 显示\n   * @param view\n   * @param point\n   */\n  protected showTooltip(view: View, point: Point) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      const siblingPoint = getSiblingPoint(view, sibling, point);\n      sibling.showTooltip(siblingPoint);\n    });\n  }\n  /**\n   * 隐藏同一层级的 tooltip\n   * @param view\n   */\n  protected hideTooltip(view) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.hideTooltip();\n    });\n  }\n}\n\nexport default SiblingTooltip;\n"]},"metadata":{},"sourceType":"module"}