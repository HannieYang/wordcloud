{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, Util } from '@antv/g2';\nimport { parsePathString } from '@antv/path-util';\nimport { deepAssign } from '../../utils';\nimport { PATH_FIELD } from './constant';\n/**\n * 获取填充属性\n * @param cfg 图形绘制数据\n */\n\nfunction getFillAttrs(cfg) {\n  // style.fill 优先级更高\n  return deepAssign({}, cfg.defaultStyle, {\n    fill: cfg.color\n  }, cfg.style);\n}\n\nregisterShape('schema', 'venn', {\n  draw: function (cfg, container) {\n    var data = cfg.data;\n    var segments = parsePathString(data[PATH_FIELD]);\n    var fillAttrs = getFillAttrs(cfg);\n    var group = container.addGroup({\n      name: 'venn-shape'\n    });\n    group.addShape('path', {\n      attrs: __assign(__assign({}, fillAttrs), {\n        path: segments\n      }),\n      name: 'venn-path'\n    });\n    var _a = cfg.customInfo,\n        offsetX = _a.offsetX,\n        offsetY = _a.offsetY;\n    var matrix = Util.transform(null, [['t', offsetX, offsetY]]);\n    group.setMatrix(matrix);\n    return group;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'circle',\n      style: {\n        lineWidth: 0,\n        stroke: color,\n        fill: color,\n        r: 4\n      }\n    };\n  }\n});","map":{"version":3,"mappings":";AACA,SAASA,aAAT,EAA+BC,IAA/B,QAA2C,UAA3C;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,UAAT,QAA2B,aAA3B;AAGA,SAASC,UAAT,QAA2B,YAA3B;AAEA;;;;;AAIA,SAASC,YAAT,CAAsBC,GAAtB,EAA0C;EACxC;EACA,OAAOH,UAAU,CAAC,EAAD,EAAKG,GAAG,CAACC,YAAT,EAAuB;IAAEC,IAAI,EAAEF,GAAG,CAACG;EAAZ,CAAvB,EAA4CH,GAAG,CAACI,KAAhD,CAAjB;AACD;;AAEDV,aAAa,CAAC,QAAD,EAAW,MAAX,EAAmB;EAC9BW,IAAI,EAAJ,UAAKL,GAAL,EAAsEM,SAAtE,EAAuF;IACrF,IAAMC,IAAI,GAAGP,GAAG,CAACO,IAAjB;IACA,IAAMC,QAAQ,GAAGZ,eAAe,CAACW,IAAI,CAACT,UAAD,CAAL,CAAhC;IACA,IAAMW,SAAS,GAAGV,YAAY,CAACC,GAAD,CAA9B;IAEA,IAAMU,KAAK,GAAGJ,SAAS,CAACK,QAAV,CAAmB;MAAEC,IAAI,EAAE;IAAR,CAAnB,CAAd;IAEAF,KAAK,CAACG,QAAN,CAAe,MAAf,EAAuB;MACrBC,KAAK,wBACAL,SADA,GACS;QACZM,IAAI,EAAEP;MADM,CADT,CADgB;MAKrBI,IAAI,EAAE;IALe,CAAvB;IAQM,SAAuBZ,GAAG,CAACgB,UAA3B;IAAA,IAAEC,OAAO,aAAT;IAAA,IAAWC,OAAO,aAAlB;IAEN,IAAMC,MAAM,GAAGxB,IAAI,CAACyB,SAAL,CAAe,IAAf,EAAqB,CAAC,CAAC,GAAD,EAAMH,OAAN,EAAeC,OAAf,CAAD,CAArB,CAAf;IACAR,KAAK,CAACW,SAAN,CAAgBF,MAAhB;IAEA,OAAOT,KAAP;EACD,CAtB6B;EAuB9BY,SAAS,EAAT,UAAUC,SAAV,EAAyC;IAC/B,SAAK,GAAKA,SAAS,MAAnB;IACR,OAAO;MACLC,MAAM,EAAE,QADH;MAELpB,KAAK,EAAE;QACLqB,SAAS,EAAE,CADN;QAELC,MAAM,EAAEvB,KAFH;QAGLD,IAAI,EAAEC,KAHD;QAILwB,CAAC,EAAE;MAJE;IAFF,CAAP;EASD;AAlC6B,CAAnB,CAAb","names":["registerShape","Util","parsePathString","deepAssign","PATH_FIELD","getFillAttrs","cfg","defaultStyle","fill","color","style","draw","container","data","segments","fillAttrs","group","addGroup","name","addShape","attrs","path","customInfo","offsetX","offsetY","matrix","transform","setMatrix","getMarker","markerCfg","symbol","lineWidth","stroke","r"],"sourceRoot":"","sources":["../../../src/plots/venn/shape.ts"],"sourcesContent":["import { IGroup } from '@antv/g-base';\nimport { registerShape, Types, Util } from '@antv/g2';\nimport { parsePathString } from '@antv/path-util';\nimport { deepAssign } from '../../utils';\nimport { Datum, Point } from '../../types';\nimport { CustomInfo } from './types';\nimport { PATH_FIELD } from './constant';\n\n/**\n * 获取填充属性\n * @param cfg 图形绘制数据\n */\nfunction getFillAttrs(cfg: Types.ShapeInfo) {\n  // style.fill 优先级更高\n  return deepAssign({}, cfg.defaultStyle, { fill: cfg.color }, cfg.style);\n}\n\nregisterShape('schema', 'venn', {\n  draw(cfg: Types.ShapeInfo & { points: Point[]; nextPoints: Point[] }, container: IGroup) {\n    const data = cfg.data as Datum;\n    const segments = parsePathString(data[PATH_FIELD]);\n    const fillAttrs = getFillAttrs(cfg);\n\n    const group = container.addGroup({ name: 'venn-shape' });\n\n    group.addShape('path', {\n      attrs: {\n        ...fillAttrs,\n        path: segments,\n      },\n      name: 'venn-path',\n    });\n\n    const { offsetX, offsetY } = cfg.customInfo as CustomInfo;\n\n    const matrix = Util.transform(null, [['t', offsetX, offsetY]]);\n    group.setMatrix(matrix);\n\n    return group;\n  },\n  getMarker(markerCfg: Types.ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'circle',\n      style: {\n        lineWidth: 0,\n        stroke: color,\n        fill: color,\n        r: 4,\n      },\n    };\n  },\n});\n"]},"metadata":{},"sourceType":"module"}