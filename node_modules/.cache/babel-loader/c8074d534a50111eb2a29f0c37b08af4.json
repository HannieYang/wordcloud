{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { getXDimensionLength } from '../util/coordinate';\nimport Geometry from './base';\n/** 引入对应的 ShapeFactory */\n\nimport './shape/interval';\nimport { getDefaultSize } from './util/shape-size';\nimport { getMaxScale } from '../util/scale';\n/**\n * Interval 几何标记。\n * 用于绘制柱状图、饼图、条形图、玫瑰图等。\n */\n\nvar Interval =\n/** @class */\nfunction (_super) {\n  __extends(Interval, _super);\n\n  function Interval(cfg) {\n    var _this = _super.call(this, cfg) || this;\n\n    _this.type = 'interval';\n    _this.shapeType = 'interval';\n    _this.generatePoints = true;\n    var background = cfg.background;\n    _this.background = background;\n    return _this;\n  }\n  /**\n   * 获取每条数据的 Shape 绘制信息\n   * @param obj 经过分组 -> 数字化 -> adjust 调整后的数据记录\n   * @returns\n   */\n\n\n  Interval.prototype.createShapePointsCfg = function (obj) {\n    var cfg = _super.prototype.createShapePointsCfg.call(this, obj); // 计算每个 shape 的 size\n\n\n    var size;\n    var sizeAttr = this.getAttribute('size');\n\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, obj)[0]; // 归一化\n\n      var coordinate = this.coordinate;\n      var coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n\n      size = this.defaultSize;\n    }\n\n    cfg.size = size;\n    return cfg;\n  };\n  /**\n   * 调整 y 轴的 scale 范围。\n   * 对于 Y 轴为数值轴柱状图，默认从 0 开始 生长。\n   */\n\n\n  Interval.prototype.adjustScale = function () {\n    _super.prototype.adjustScale.call(this);\n\n    var yScale = this.getYScale(); // 特殊逻辑：饼图需要填充满整个空间\n\n    if (this.coordinate.type === 'theta') {\n      yScale.change({\n        nice: false,\n        min: 0,\n        // 发生过 stack 调整，yScale 的 max 被调整过，this.updateStackRange()\n        max: getMaxScale(yScale)\n      });\n    } else {\n      // 柱状图数值轴默认从 0 开始\n      var scaleDefs = this.scaleDefs;\n      var field = yScale.field,\n          min = yScale.min,\n          max = yScale.max,\n          type = yScale.type;\n\n      if (type !== 'time') {\n        // time 类型不做调整\n        // 柱状图的 Y 轴要从 0 开始生长，但是如果用户设置了则以用户的为准\n        if (min > 0 && !get(scaleDefs, [field, 'min'])) {\n          yScale.change({\n            min: 0\n          });\n        } // 柱当柱状图全为负值时也需要从 0 开始生长，但是如果用户设置了则以用户的为准\n\n\n        if (max <= 0 && !get(scaleDefs, [field, 'max'])) {\n          yScale.change({\n            max: 0\n          });\n        }\n      }\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  Interval.prototype.getDrawCfg = function (mappingData) {\n    var shapeCfg = _super.prototype.getDrawCfg.call(this, mappingData);\n\n    shapeCfg.background = this.background;\n    return shapeCfg;\n  };\n\n  return Interval;\n}(Geometry);\n\nexport default Interval;","map":{"version":3,"mappings":"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","names":["get","getXDimensionLength","Geometry","getDefaultSize","getMaxScale","__extends","cfg","_super","_this","background","Interval","obj","createShapePointsCfg","call","size","sizeAttr","getAttribute","getAttributeValues","coordinate","coordinateWidth","defaultSize","adjustScale","yScale","getYScale","type","change","nice","min","max","scaleDefs","field","mappingData","shapeCfg","getDrawCfg"],"sourceRoot":"","sources":["../../src/geometry/interval.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { Datum, MappingDatum, ShapeInfo, LooseObject } from '../interface';\nimport { ShapeAttrs } from '../dependents';\nimport { getXDimensionLength } from '../util/coordinate';\nimport Geometry, { GeometryCfg } from './base';\n/** 引入对应的 ShapeFactory */\nimport './shape/interval';\nimport { getDefaultSize } from './util/shape-size';\nimport { getMaxScale } from '../util/scale';\n\n/** Path 构造函数参数类型 */\nexport interface IntervalCfg extends GeometryCfg {\n  /** shape 背景，只对 Interval Geometry 生效，目前只对 interval-rect shape 生效。 */\n  background?: { style?: ShapeAttrs };\n}\n\n/**\n * Interval 几何标记。\n * 用于绘制柱状图、饼图、条形图、玫瑰图等。\n */\nexport default class Interval extends Geometry {\n  public readonly type: string = 'interval';\n  public readonly shapeType: string = 'interval';\n  /** shape 背景。目前只对 interval-rect shape 生效。 */\n  protected background?: { style?: ShapeAttrs };\n  protected generatePoints: boolean = true;\n\n  constructor(cfg: IntervalCfg) {\n    super(cfg);\n\n    const { background } = cfg;\n    this.background = background;\n  }\n\n  /**\n   * 获取每条数据的 Shape 绘制信息\n   * @param obj 经过分组 -> 数字化 -> adjust 调整后的数据记录\n   * @returns\n   */\n  protected createShapePointsCfg(obj: Datum) {\n    const cfg = super.createShapePointsCfg(obj);\n\n    // 计算每个 shape 的 size\n    let size;\n    const sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, obj)[0];\n      // 归一化\n      const coordinate = this.coordinate;\n      const coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n\n    return cfg;\n  }\n\n  /**\n   * 调整 y 轴的 scale 范围。\n   * 对于 Y 轴为数值轴柱状图，默认从 0 开始 生长。\n   */\n  protected adjustScale() {\n    super.adjustScale();\n    const yScale = this.getYScale();\n    // 特殊逻辑：饼图需要填充满整个空间\n    if (this.coordinate.type === 'theta') {\n      yScale.change({\n        nice: false,\n        min: 0,\n        // 发生过 stack 调整，yScale 的 max 被调整过，this.updateStackRange()\n        max: getMaxScale(yScale),\n      });\n    } else {\n      // 柱状图数值轴默认从 0 开始\n      const scaleDefs = this.scaleDefs;\n      const { field, min, max, type } = yScale;\n      if (type !== 'time') {\n        // time 类型不做调整\n        // 柱状图的 Y 轴要从 0 开始生长，但是如果用户设置了则以用户的为准\n        if (min > 0 && !get(scaleDefs, [field, 'min'])) {\n          yScale.change({\n            min: 0,\n          });\n        }\n        // 柱当柱状图全为负值时也需要从 0 开始生长，但是如果用户设置了则以用户的为准\n        if (max <= 0 && !get(scaleDefs, [field, 'max'])) {\n          yScale.change({\n            max: 0,\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  protected getDrawCfg(mappingData: MappingDatum): ShapeInfo {\n    const shapeCfg = super.getDrawCfg(mappingData);\n    shapeCfg.background = this.background;\n\n    return shapeCfg;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}