{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { each, get } from '@antv/util';\nimport { renderStatistic } from '../../../../utils/statistic';\nimport { getCurrentElement } from '../util';\n/**\n * Pie 中心文本事件的 Action\n */\n\nvar StatisticAction =\n/** @class */\nfunction (_super) {\n  __extends(StatisticAction, _super);\n\n  function StatisticAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StatisticAction.prototype.getAnnotations = function (_view) {\n    var view = _view || this.context.view; // @ts-ignore\n\n    return view.getController('annotation').option;\n  };\n\n  StatisticAction.prototype.getInitialAnnotation = function () {\n    return this.initialAnnotation;\n  };\n\n  StatisticAction.prototype.init = function () {\n    var _this = this;\n\n    var view = this.context.view;\n    view.removeInteraction('tooltip');\n    view.on('afterchangesize', function () {\n      var annotations = _this.getAnnotations(view);\n\n      _this.initialAnnotation = annotations;\n    });\n  };\n\n  StatisticAction.prototype.change = function (arg) {\n    var _a = this.context,\n        view = _a.view,\n        event = _a.event;\n\n    if (!this.initialAnnotation) {\n      this.initialAnnotation = this.getAnnotations();\n    }\n\n    var data = get(event, ['data', 'data']);\n\n    if (event.type.match('legend-item')) {\n      var delegateObject = Util.getDelegationObject(this.context); // @ts-ignore\n\n      var colorField_1 = view.getGroupedFields()[0];\n\n      if (delegateObject && colorField_1) {\n        var item_1 = delegateObject.item;\n        data = view.getData().find(function (d) {\n          return d[colorField_1] === item_1.value;\n        });\n      }\n    }\n\n    if (data) {\n      var annotations = get(arg, 'annotations', []);\n      var statistic = get(arg, 'statistic', {}); // 先清空标注，再重新渲染\n\n      view.getController('annotation').clear(true); // 先进行其他 annotations，再去渲染统计文本\n\n      each(annotations, function (annotation) {\n        if (typeof annotation === 'object') {\n          view.annotation()[annotation.type](annotation);\n        }\n      });\n      renderStatistic(view, {\n        statistic: statistic,\n        plotType: 'pie'\n      }, data);\n      view.render(true);\n    } // 交互的时候，把 shape 提前\n\n\n    var ele = getCurrentElement(this.context);\n\n    if (ele) {\n      ele.shape.toFront();\n    }\n  };\n\n  StatisticAction.prototype.reset = function () {\n    var view = this.context.view;\n    var annotationController = view.getController('annotation');\n    annotationController.clear(true);\n    var initialStatistic = this.getInitialAnnotation();\n    each(initialStatistic, function (a) {\n      view.annotation()[a.type](a);\n    });\n    view.render(true);\n  };\n\n  return StatisticAction;\n}(Action);\n\nexport { StatisticAction };","map":{"version":3,"mappings":"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","names":["Action","Util","each","get","renderStatistic","getCurrentElement","__extends","StatisticAction","_view","view","context","getController","option","initialAnnotation","removeInteraction","on","annotations","_this","getAnnotations","arg","event","data","type","match","delegateObject","getDelegationObject","colorField_1","getGroupedFields","getData","find","d","item_1","value","statistic","clear","annotation","plotType","render","ele","shape","toFront","annotationController","initialStatistic","getInitialAnnotation","a"],"sourceRoot":"","sources":["../../../../../src/plots/pie/interactions/actions/statistic-active.ts"],"sourcesContent":["import { View, Action, Util, Types } from '@antv/g2';\nimport { each, get } from '@antv/util';\nimport { Annotation } from '../../../../types/annotation';\nimport { renderStatistic } from '../../../../utils/statistic';\nimport { PieOptions } from '../../types';\nimport { getCurrentElement } from '../util';\n\n/**\n * Pie 中心文本事件的 Action\n */\nexport class StatisticAction extends Action {\n  private initialAnnotation;\n\n  private getAnnotations(_view?: View): object[] {\n    const view = _view || this.context.view;\n    // @ts-ignore\n    return view.getController('annotation').option;\n  }\n\n  private getInitialAnnotation(): Types.ComponentOption[] | null {\n    return this.initialAnnotation;\n  }\n\n  init() {\n    const { view } = this.context;\n    view.removeInteraction('tooltip');\n\n    view.on('afterchangesize', () => {\n      const annotations = this.getAnnotations(view);\n      this.initialAnnotation = annotations;\n    });\n  }\n\n  public change(arg?: Pick<PieOptions, 'annotations' | 'statistic'>) {\n    const { view, event } = this.context;\n    if (!this.initialAnnotation) {\n      this.initialAnnotation = this.getAnnotations();\n    }\n\n    let data = get(event, ['data', 'data']);\n    if (event.type.match('legend-item')) {\n      const delegateObject = Util.getDelegationObject(this.context);\n      // @ts-ignore\n      const colorField = view.getGroupedFields()[0];\n      if (delegateObject && colorField) {\n        const { item } = delegateObject;\n        data = view.getData().find((d) => d[colorField] === item.value);\n      }\n    }\n\n    if (data) {\n      const annotations = get(arg, 'annotations', []);\n      const statistic = get(arg, 'statistic', {});\n      // 先清空标注，再重新渲染\n      view.getController('annotation').clear(true);\n      // 先进行其他 annotations，再去渲染统计文本\n      each(annotations, (annotation: Annotation) => {\n        if (typeof annotation === 'object') {\n          view.annotation()[annotation.type](annotation);\n        }\n      });\n      renderStatistic(view, { statistic, plotType: 'pie' }, data);\n      view.render(true);\n    }\n\n    // 交互的时候，把 shape 提前\n    const ele = getCurrentElement(this.context);\n    if (ele) {\n      ele.shape.toFront();\n    }\n  }\n\n  public reset() {\n    const { view } = this.context;\n    const annotationController = view.getController('annotation');\n    annotationController.clear(true);\n    const initialStatistic = this.getInitialAnnotation();\n    each(initialStatistic, (a) => {\n      view.annotation()[a.type](a);\n    });\n    view.render(true);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}