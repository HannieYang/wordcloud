{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { DIRECTION } from '../../constant';\n/** @ignore */\n\nvar PaddingCal =\n/** @class */\nfunction () {\n  /**\n   * 初始的 padding 数据\n   * @param top\n   * @param right\n   * @param bottom\n   * @param left\n   */\n  function PaddingCal(top, right, bottom, left) {\n    if (top === void 0) {\n      top = 0;\n    }\n\n    if (right === void 0) {\n      right = 0;\n    }\n\n    if (bottom === void 0) {\n      bottom = 0;\n    }\n\n    if (left === void 0) {\n      left = 0;\n    }\n\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n  /**\n   * 使用静态方法创建一个\n   * @param top\n   * @param right\n   * @param bottom\n   * @param left\n   */\n\n\n  PaddingCal.instance = function (top, right, bottom, left) {\n    if (top === void 0) {\n      top = 0;\n    }\n\n    if (right === void 0) {\n      right = 0;\n    }\n\n    if (bottom === void 0) {\n      bottom = 0;\n    }\n\n    if (left === void 0) {\n      left = 0;\n    }\n\n    return new PaddingCal(top, right, bottom, left);\n  };\n  /**\n   * 取最大区间\n   * @param padding\n   */\n\n\n  PaddingCal.prototype.max = function (padding) {\n    var _a = __read(padding, 4),\n        top = _a[0],\n        right = _a[1],\n        bottom = _a[2],\n        left = _a[3];\n\n    this.top = Math.max(this.top, top);\n    this.right = Math.max(this.right, right);\n    this.bottom = Math.max(this.bottom, bottom);\n    this.left = Math.max(this.left, left);\n    return this;\n  };\n  /**\n   * 四周增加 padding\n   * @param padding\n   */\n\n\n  PaddingCal.prototype.shrink = function (padding) {\n    var _a = __read(padding, 4),\n        top = _a[0],\n        right = _a[1],\n        bottom = _a[2],\n        left = _a[3];\n\n    this.top += top;\n    this.right += right;\n    this.bottom += bottom;\n    this.left += left;\n    return this;\n  };\n  /**\n   * 在某一个方向增加 padding\n   * @param bbox\n   * @param direction\n   */\n\n\n  PaddingCal.prototype.inc = function (bbox, direction) {\n    var width = bbox.width,\n        height = bbox.height;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        this.top += height;\n        break;\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        this.right += width;\n        break;\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        this.bottom += height;\n        break;\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        this.left += width;\n        break;\n\n      default:\n        break;\n    }\n\n    return this;\n  };\n  /**\n   * 获得最终的 padding\n   */\n\n\n  PaddingCal.prototype.getPadding = function () {\n    return [this.top, this.right, this.bottom, this.left];\n  };\n  /**\n   * clone 一个 padding cal\n   */\n\n\n  PaddingCal.prototype.clone = function () {\n    return new (PaddingCal.bind.apply(PaddingCal, __spreadArray([void 0], __read(this.getPadding()), false)))();\n  };\n\n  return PaddingCal;\n}();\n\nexport { PaddingCal };","map":{"version":3,"mappings":"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","names":["DIRECTION","top","right","bottom","left","PaddingCal","padding","Math","max","bbox","direction","height","TOP","TOP_LEFT","TOP_RIGHT","RIGHT","RIGHT_TOP","RIGHT_BOTTOM","width","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","LEFT_TOP","LEFT_BOTTOM","apply","__spreadArray","getPadding"],"sourceRoot":"","sources":["../../../src/chart/layout/padding-cal.ts"],"sourcesContent":["import { DIRECTION } from '../../constant';\nimport { BBox } from '../../dependents';\nimport { Padding } from '../../interface';\n\nexport type PaddingCalCtor = {\n  readonly instance: (top?: number, right?: number, bottom?: number, left?: number) => PaddingCal;\n};\n\n/** @ignore */\nexport class PaddingCal {\n  private top: number;\n  private right: number;\n  private bottom: number;\n  private left: number;\n\n  /**\n   * 使用静态方法创建一个\n   * @param top\n   * @param right\n   * @param bottom\n   * @param left\n   */\n  public static instance(top: number = 0, right: number = 0, bottom: number = 0, left: number = 0) {\n    return new PaddingCal(top, right, bottom, left);\n  }\n\n  /**\n   * 初始的 padding 数据\n   * @param top\n   * @param right\n   * @param bottom\n   * @param left\n   */\n  constructor(top: number = 0, right: number = 0, bottom: number = 0, left: number = 0) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n\n  /**\n   * 取最大区间\n   * @param padding\n   */\n  public max(padding: Padding): PaddingCal {\n    const [top, right, bottom, left] = padding;\n\n    this.top = Math.max(this.top, top);\n    this.right = Math.max(this.right, right);\n    this.bottom = Math.max(this.bottom, bottom);\n    this.left = Math.max(this.left, left);\n\n    return this;\n  }\n\n  /**\n   * 四周增加 padding\n   * @param padding\n   */\n  public shrink(padding: Padding): PaddingCal {\n    const [top, right, bottom, left] = padding;\n\n    this.top += top;\n    this.right += right;\n    this.bottom += bottom;\n    this.left += left;\n\n    return this;\n  }\n\n  /**\n   * 在某一个方向增加 padding\n   * @param bbox\n   * @param direction\n   */\n  public inc(bbox: BBox, direction: DIRECTION): PaddingCal {\n    const { width, height } = bbox;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        this.top += height;\n        break;\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        this.right += width;\n        break;\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        this.bottom += height;\n        break;\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        this.left += width;\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  /**\n   * 获得最终的 padding\n   */\n  public getPadding(): Padding {\n    return [this.top, this.right, this.bottom, this.left];\n  }\n\n  /**\n   * clone 一个 padding cal\n   */\n  public clone(): PaddingCal {\n    return new PaddingCal(...this.getPadding());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}