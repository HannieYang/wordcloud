{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '../base';\nimport { getSmoothViolinPath, getViolinPath } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\n/**\n * 空心小提琴图\n */\n\nregisterShape('violin', 'hollow', {\n  draw: function (cfg, container) {\n    var attrs = getStyle(cfg, true, false);\n    var path = this.parsePath(getViolinPath(cfg.points));\n    return container.addShape('path', {\n      attrs: __assign(__assign({}, attrs), {\n        path: path\n      })\n    });\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4,\n        fill: null,\n        stroke: color\n      }\n    };\n  }\n});\n/**\n * 平滑边界的空心小提琴图\n */\n\nregisterShape('violin', 'hollow-smooth', {\n  draw: function (cfg, container) {\n    var attrs = getStyle(cfg, true, false);\n    var path = this.parsePath(getSmoothViolinPath(cfg.points));\n    return container.addShape('path', {\n      attrs: __assign(__assign({}, attrs), {\n        path: path\n      })\n    });\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4,\n        fill: null,\n        stroke: color\n      }\n    };\n  }\n});","map":{"version":3,"mappings":";AAEA,SAASA,aAAT,QAA8B,SAA9B;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAmD,yBAAnD;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA;;;;AAGAH,aAAa,CAAC,QAAD,EAAW,QAAX,EAAqB;EAChCI,IAAI,EAAJ,UAAKC,GAAL,EAAqBC,SAArB,EAAsC;IACpC,IAAMC,KAAK,GAAGJ,QAAQ,CAACE,GAAD,EAAM,IAAN,EAAY,KAAZ,CAAtB;IACA,IAAMG,IAAI,GAAG,KAAKC,SAAL,CAAeP,aAAa,CAACG,GAAG,CAACK,MAAL,CAA5B,CAAb;IACA,OAAOJ,SAAS,CAACK,QAAV,CAAmB,MAAnB,EAA2B;MAChCJ,KAAK,wBACAA,KADA,GACK;QACRC,IAAI;MADI,CADL;IAD2B,CAA3B,CAAP;EAMD,CAV+B;EAWhCI,SAAS,EAAT,UAAUC,SAAV,EAAmC;IACzB,SAAK,GAAKA,SAAS,MAAnB;IACR,OAAO;MACLC,MAAM,EAAE,QADH;MAELC,KAAK,EAAE;QACLC,CAAC,EAAE,CADE;QAELC,IAAI,EAAE,IAFD;QAGLC,MAAM,EAAEC;MAHH;IAFF,CAAP;EAQD;AArB+B,CAArB,CAAb;AAwBA;;;;AAGAnB,aAAa,CAAC,QAAD,EAAW,eAAX,EAA4B;EACvCI,IAAI,EAAJ,UAAKC,GAAL,EAAqBC,SAArB,EAAsC;IACpC,IAAMC,KAAK,GAAGJ,QAAQ,CAACE,GAAD,EAAM,IAAN,EAAY,KAAZ,CAAtB;IACA,IAAMG,IAAI,GAAG,KAAKC,SAAL,CAAeR,mBAAmB,CAACI,GAAG,CAACK,MAAL,CAAlC,CAAb;IACA,OAAOJ,SAAS,CAACK,QAAV,CAAmB,MAAnB,EAA2B;MAChCJ,KAAK,wBACAA,KADA,GACK;QACRC,IAAI;MADI,CADL;IAD2B,CAA3B,CAAP;EAMD,CAVsC;EAWvCI,SAAS,EAAT,UAAUC,SAAV,EAAmC;IACzB,SAAK,GAAKA,SAAS,MAAnB;IACR,OAAO;MACLC,MAAM,EAAE,QADH;MAELC,KAAK,EAAE;QACLC,CAAC,EAAE,CADE;QAELC,IAAI,EAAE,IAFD;QAGLC,MAAM,EAAEC;MAHH;IAFF,CAAP;EAQD;AArBsC,CAA5B,CAAb","names":["registerShape","getSmoothViolinPath","getViolinPath","getStyle","draw","cfg","container","attrs","path","parsePath","points","addShape","getMarker","markerCfg","symbol","style","r","fill","stroke","color"],"sourceRoot":"","sources":["../../../../src/geometry/shape/violin/hollow.ts"],"sourcesContent":["import { IGroup, Point } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\nimport { registerShape } from '../base';\nimport { getSmoothViolinPath, getViolinPath } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\n\n/**\n * 空心小提琴图\n */\nregisterShape('violin', 'hollow', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const attrs = getStyle(cfg, true, false);\n    const path = this.parsePath(getViolinPath(cfg.points));\n    return container.addShape('path', {\n      attrs: {\n        ...attrs,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4,\n        fill: null,\n        stroke: color,\n      },\n    };\n  },\n});\n\n/**\n * 平滑边界的空心小提琴图\n */\nregisterShape('violin', 'hollow-smooth', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const attrs = getStyle(cfg, true, false);\n    const path = this.parsePath(getSmoothViolinPath(cfg.points));\n    return container.addShape('path', {\n      attrs: {\n        ...attrs,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4,\n        fill: null,\n        stroke: color,\n      },\n    };\n  },\n});\n"]},"metadata":{},"sourceType":"module"}