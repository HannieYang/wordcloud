{"ast":null,"code":"import { WordCloud } from '@antv/g2plot';\nimport axios from 'axios';\nimport { ElMessage, ElMessageBox } from 'element-plus'; // axios.defaults.baseURL = 'cloudapi'\n\nexport default {\n  data() {\n    return {\n      all_labels_data: [],\n      labels: [],\n      labels_list: [],\n      searchContent: '',\n      // netValue:\"\",\n      // netOptions:[],\n      categoryValue: \"\",\n      categoryOptions: [],\n      tableData: [],\n      currentPage: 1,\n      pageSize: 10,\n      small: false,\n      disabled: false,\n      background: false,\n      total: 0\n    };\n  },\n\n  computed: {\n    // netValue(){\n    //     return this.netOptions[0]\n    // },\n    // categoryValue(){\n    //     return this.categoryOptions[0]\n    // },\n    labelsContainerIsShow() {\n      return this.searchContent == \"\";\n    },\n\n    searchResultTableIsShow() {\n      return this.tableData.length != 0;\n    },\n\n    emptyIsShow() {\n      return this.searchContent != \"\" && this.tableData.length == 0;\n    }\n\n  },\n\n  created() {\n    window.clickTooltip = this.clickTooltip;\n  },\n\n  methods: {\n    initChart() {\n      const wordCloud = new WordCloud('wordcloud', {\n        data: this.labels,\n        autoFit: true,\n        wordField: 'name',\n        weightField: 'cnt',\n        colorField: 'cnt',\n        wordStyle: {\n          fontFamily: 'Verdana',\n          fontSize: [15, 30]\n        },\n        // 设置交互类型\n        interactions: [{\n          type: 'element-active'\n        }],\n        state: {\n          active: {\n            // 这里可以设置 active 时的样式\n            style: {\n              lineWidth: 3\n            }\n          }\n        },\n        tooltip: {\n          enterable: true,\n          customContent: (title, data) => {\n            if (!data || data.length <= 0) return;\n            const d = data[0];\n            return `<div>\n                            <ul style=\"padding:0; margin:0; text-align: left; list-style-type: none;\">\n                                ${d.data.datum.ctg.map(item => `<li class=\"g2-tooltip-list-item\" onclick=\"clickTooltip('${d.data.datum.name}', '${item.category}')\">\n                                    <span class=\"g2-tooltip-marker\" style=\"background-color: ${d.color};\"></span>\n                                    <span class=\"g2-tooltip-name\">${item.category}</span>:\n                                    <span class=\"g2-tooltip-value\">${item.cnt}</span>\n                                </li>`).join('')}\n                            </ul>\n                        </div>`;\n          }\n        },\n        random: () => 0.5\n      });\n      wordCloud.render(); // 图例名称添加点击事件\n      // wordCloud.on('element:click', (...args) => {\n      //     console.log(args[0].data.data.text);\n      //     this.searchContent = args[0].data.data.text;\n      //     //todo：向后端请求数据\n      //     axios({\n      //         method: 'post',\n      //         url:'/mock/two',\n      //         data:{\n      //             label: this.searchContent,\n      //             // net: this.netValue,\n      //             category: this.categoryValue,\n      //             page:1,\n      //             page_size:this.pageSize\n      //         }\n      //     }).then((response)=>{\n      //         console.log(response)\n      //         const data = response.data;\n      //         this.total = data.total;\n      //         this.tableData = data.result_list;\n      //     }).catch((error)=>{\n      //         console.log(error)\n      //     })\n      // });\n    },\n\n    clickTooltip(label, category) {\n      console.log(label, category);\n      this.searchContent = label;\n      this.categoryValue = category;\n      this.search();\n    },\n\n    categoryChange() {\n      if (this.searchContent.length == 0) {\n        this.labels_list = this.all_labels_data[this.categoryValue];\n      } else {\n        this.search();\n      }\n    },\n\n    clickSearchButton() {\n      if (this.searchContent.length == 0) {\n        ElMessageBox.alert('请输入查询内容', '提示', {\n          // if you want to disable its autofocus\n          // autofocus: false,\n          confirmButtonText: 'OK',\n          callback: action => {\n            ElMessage({\n              type: 'info',\n              message: `action: ${action}`\n            });\n          }\n        });\n      } else {\n        this.search();\n      }\n    },\n\n    inputSearchContent() {\n      if (this.searchContent.length == 0) {\n        this.tableData = [];\n      } else {\n        this.search();\n      }\n    },\n\n    search() {\n      if (this.searchContent != \"\") {\n        // console.log(this.searchContent)\n        // console.log(this.netValue)\n        // console.log(this.categoryValue)\n        // 向后端请求数据\n        axios({\n          method: 'get',\n          url: '/cloudapi/api/cloud/filter',\n          params: {\n            keyword: this.searchContent,\n            // net: this.netValue,\n            category: this.categoryValue,\n            page: 1,\n            pagesize: this.pageSize\n          },\n          paramsSerializer: params => {\n            let result = '';\n            Object.keys(params).forEach(key => {\n              result += `${key}=${encodeURIComponent(params[key])}&`;\n            });\n            return result.substr(0, result.length - 1);\n          }\n        }).then(response => {\n          // console.log(response)\n          const data = response.data; // console.log(data)\n\n          this.total = data.total;\n          this.tableData = data.data;\n          this.currentPage = data.page;\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n\n    searchThisLabel(label) {\n      this.searchContent = label; // console.log(label)\n      // 向后端请求数据\n      // axios({\n      //     method: 'get',\n      //     url:'/cloudapi/api/cloud/filter',\n      //     params:{\n      //         keyword: this.searchContent,\n      //         // net: this.netValue,\n      //         category: this.categoryValue,\n      //         page:1,\n      //         pagesize:this.pageSize\n      //     }\n      // }).then((response)=>{\n      //     // console.log(response)\n      //     const data = response.data;\n      //     // console.log(data)\n      //     this.total = data.total;\n      //     this.tableData = data.data;\n      //     this.currentPage = data.page;\n      // }).catch((error)=>{\n      //     console.log(error)\n      // })\n\n      this.search();\n    },\n\n    getTableData() {\n      // console.log(this.pageSize);\n      // console.log(this.currentPage);\n      //todo：向后端请求数据\n      axios({\n        method: 'get',\n        url: '/cloudapi/api/cloud/filter',\n        params: {\n          keyword: this.searchContent,\n          // net: this.netValue,\n          category: this.categoryValue,\n          page: this.currentPage,\n          pagesize: this.pageSize\n        },\n        paramsSerializer: params => {\n          let result = '';\n          Object.keys(params).forEach(key => {\n            result += `${key}=${encodeURIComponent(params[key])}&`;\n          });\n          return result.substr(0, result.length - 1);\n        }\n      }).then(response => {\n        // console.log(response)\n        const data = response.data; // console.log(data)\n\n        this.total = data.total;\n        this.tableData = data.data;\n        this.currentPage = data.page;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    getAllLabelData(data) {\n      // console.log(data)\n      let labels = [];\n\n      for (let key in data) {\n        // console.log(key);\n        const key_data = data[key]; // console.log(key_data);\n\n        key_data.forEach(element => {\n          // console.log(key)\n          // console.log(element);\n          this.element = element;\n          let index = labels.findIndex(value => {\n            return value.name == this.element.name;\n          }, this);\n\n          if (index == -1) {\n            labels.push({\n              'name': element.name,\n              'cnt': element.cnt,\n              // 'ctg':[{\n              //    [key] : element.cnt\n              // }]\n              'ctg': [{\n                'category': key,\n                'cnt': element.cnt\n              }]\n            });\n          } else {\n            // let label = labels[index];\n            labels[index].cnt = labels[index].cnt + element.cnt; // labels[index].ctg.push({[key]: element.cnt})\n\n            labels[index].ctg.push({\n              'category': key,\n              'cnt': element.cnt\n            });\n          } // console.log(labels)\n\n        });\n      }\n\n      return labels;\n    }\n\n  },\n\n  mounted() {\n    axios({\n      method: 'get',\n      url: '/cloudapi/api/cloud'\n    }).then(response => {\n      // console.log(response)\n      const data = response.data.data; // console.log(data)\n      // 保留数据\n\n      this.all_labels_data = data; // 处理数据，得到词云对应的数据\n\n      this.labels = this.getAllLabelData(data); // console.log(this.labels)\n\n      const category_list = Object.keys(data);\n      this.categoryOptions = category_list;\n      this.categoryValue = category_list[0];\n      this.labels_list = data[this.categoryValue];\n      this.initChart();\n    }).catch(error => {\n      console.log('here');\n      console.log(error);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAoGA,SAASA,SAAT,QAA0B,cAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,cAAxC,C,CACA;;AACA,eAAe;EACXC,IAAI,GAAE;IACF,OAAM;MACFC,eAAe,EAAC,EADd;MAEFC,MAAM,EAAC,EAFL;MAGFC,WAAW,EAAC,EAHV;MAIFC,aAAa,EAAC,EAJZ;MAKF;MACA;MACAC,aAAa,EAAC,EAPZ;MAQFC,eAAe,EAAC,EARd;MASFC,SAAS,EAAC,EATR;MAUFC,WAAW,EAAC,CAVV;MAWFC,QAAQ,EAAC,EAXP;MAYFC,KAAK,EAAC,KAZJ;MAaFC,QAAQ,EAAC,KAbP;MAcFC,UAAU,EAAC,KAdT;MAeFC,KAAK,EAAC;IAfJ,CAAN;EAiBH,CAnBU;;EAoBXC,QAAQ,EAAC;IACL;IACA;IACA;IACA;IACA;IACA;IACAC,qBAAqB,GAAE;MACnB,OAAO,KAAKX,aAAL,IAAoB,EAA3B;IACH,CATI;;IAULY,uBAAuB,GAAE;MACrB,OAAO,KAAKT,SAAL,CAAeU,MAAf,IAAyB,CAAhC;IACH,CAZI;;IAaLC,WAAW,GAAE;MACT,OAAO,KAAKd,aAAL,IAAoB,EAApB,IAA0B,KAAKG,SAAL,CAAeU,MAAf,IAAyB,CAA1D;IACJ;;EAfK,CApBE;;EAqCXE,OAAO,GAAE;IACLC,MAAM,CAACC,YAAP,GAAsB,KAAKA,YAA3B;EACH,CAvCU;;EAwCXC,OAAO,EAAC;IACJC,SAAS,GAAE;MACP,MAAMC,SAAQ,GAAI,IAAI5B,SAAJ,CAAc,WAAd,EAA2B;QACzCI,IAAI,EAAC,KAAKE,MAD+B;QAEzCuB,OAAO,EAAC,IAFiC;QAGzCC,SAAS,EAAE,MAH8B;QAIzCC,WAAW,EAAE,KAJ4B;QAKzCC,UAAU,EAAC,KAL8B;QAMzCC,SAAS,EAAE;UACPC,UAAU,EAAE,SADL;UAEPC,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;QAFH,CAN8B;QAUzC;QACAC,YAAY,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAR,CAAD,CAX2B;QAYzCC,KAAK,EAAE;UACHC,MAAM,EAAE;YACR;YACIC,KAAK,EAAE;cACHC,SAAS,EAAE;YADR;UAFH;QADL,CAZkC;QAoBzCC,OAAO,EAAC;UACJC,SAAS,EAAE,IADP;UAEJC,aAAa,EAAE,CAACC,KAAD,EAAQzC,IAAR,KAAiB;YAC5B,IAAI,CAACA,IAAD,IAASA,IAAI,CAACiB,MAAL,IAAe,CAA5B,EAA+B;YAC/B,MAAMyB,IAAI1C,IAAI,CAAC,CAAD,CAAd;YACA,OAAQ;;kCAEE0C,CAAC,CAAC1C,IAAF,CAAO2C,KAAP,CAAaC,GAAb,CAAiBC,GAAjB,CAAsBC,IAAD,IAAS,2DAA0DJ,CAAC,CAAC1C,IAAF,CAAO2C,KAAP,CAAaI,IAAK,OAAMD,IAAI,CAACE,QAAS;+FACjEN,CAAC,CAACO,KAAM;oEACnCH,IAAI,CAACE,QAAS;qEACbF,IAAI,CAACI,GAAI;sCAH5C,EAIMC,IAJN,CAIW,EAJX,CAIc;;+BANxB;UASJ;QAdI,CApBiC;QAoCzCC,MAAM,EAAE,MAAM;MApC2B,CAA3B,CAAlB;MAuCA5B,SAAS,CAAC6B,MAAV,GAxCO,CAyCP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACH,CAlEG;;IAmEJhC,YAAY,CAACiC,KAAD,EAAQN,QAAR,EAAiB;MACzBO,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmBN,QAAnB;MACA,KAAK5C,aAAL,GAAqBkD,KAArB;MACA,KAAKjD,aAAL,GAAqB2C,QAArB;MACA,KAAKS,MAAL;IACH,CAxEG;;IAyEJC,cAAc,GAAE;MACZ,IAAG,KAAKtD,aAAL,CAAmBa,MAAnB,IAA6B,CAAhC,EAAkC;QAC9B,KAAKd,WAAL,GAAmB,KAAKF,eAAL,CAAqB,KAAKI,aAA1B,CAAnB;MACH,CAFD,MAEK;QACD,KAAKoD,MAAL;MACJ;IACH,CA/EG;;IAgFJE,iBAAiB,GAAE;MACf,IAAG,KAAKvD,aAAL,CAAmBa,MAAnB,IAA6B,CAAhC,EAAkC;QAC9BlB,YAAY,CAAC6D,KAAb,CAAmB,SAAnB,EAA8B,IAA9B,EAAoC;UAChC;UACA;UACAC,iBAAiB,EAAE,IAHa;UAIhCC,QAAQ,EAAGC,MAAD,IAAY;YAClBjE,SAAS,CAAC;cACNmC,IAAI,EAAE,MADA;cAEN+B,OAAO,EAAG,WAAUD,MAAO;YAFrB,CAAD,CAAT;UAIH;QAT+B,CAApC;MAWH,CAZD,MAYK;QACD,KAAKN,MAAL;MACJ;IACH,CAhGG;;IAiGJQ,kBAAkB,GAAE;MAChB,IAAG,KAAK7D,aAAL,CAAmBa,MAAnB,IAA6B,CAAhC,EAAkC;QAC9B,KAAKV,SAAL,GAAiB,EAAjB;MACH,CAFD,MAEK;QACD,KAAKkD,MAAL;MACJ;IACH,CAvGG;;IAwGJA,MAAM,GAAE;MACJ,IAAG,KAAKrD,aAAL,IAAsB,EAAzB,EAA4B;QACxB;QACA;QACA;QACA;QACAP,KAAK,CAAC;UACFqE,MAAM,EAAE,KADN;UAEFC,GAAG,EAAC,4BAFF;UAGFC,MAAM,EAAC;YACHC,OAAO,EAAE,KAAKjE,aADX;YAEH;YACA4C,QAAQ,EAAE,KAAK3C,aAHZ;YAIHiE,IAAI,EAAC,CAJF;YAKHC,QAAQ,EAAC,KAAK9D;UALX,CAHL;UAUF+D,gBAAgB,EAAGJ,MAAD,IAAY;YAC1B,IAAIK,MAAK,GAAI,EAAb;YACAC,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,OAApB,CAA4BC,GAAE,IAAK;cAC/BJ,MAAK,IAAM,GAAEI,GAAI,IAAGC,kBAAkB,CAACV,MAAM,CAACS,GAAD,CAAP,CAAc,GAApD;YACH,CAFD;YAGA,OAAOJ,MAAM,CAACM,MAAP,CAAc,CAAd,EAAiBN,MAAM,CAACxD,MAAP,GAAgB,CAAjC,CAAP;UACJ;QAhBE,CAAD,CAAL,CAiBG+D,IAjBH,CAiBSC,QAAD,IAAY;UAChB;UACA,MAAMjF,IAAG,GAAIiF,QAAQ,CAACjF,IAAtB,CAFgB,CAGhB;;UACA,KAAKa,KAAL,GAAab,IAAI,CAACa,KAAlB;UACA,KAAKN,SAAL,GAAiBP,IAAI,CAACA,IAAtB;UACA,KAAKQ,WAAL,GAAmBR,IAAI,CAACsE,IAAxB;QACH,CAxBD,EAwBGY,KAxBH,CAwBUC,KAAD,IAAS;UACd5B,OAAO,CAACC,GAAR,CAAY2B,KAAZ;QACH,CA1BD;MA2BJ;IACH,CA1IG;;IA2IJC,eAAe,CAAC9B,KAAD,EAAO;MAClB,KAAKlD,aAAL,GAAqBkD,KAArB,CADkB,CAElB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACA,KAAKG,MAAL;IACH,CApKG;;IAqKJ4B,YAAY,GAAE;MACV;MACA;MACA;MACAxF,KAAK,CAAC;QACFqE,MAAM,EAAE,KADN;QAEFC,GAAG,EAAC,4BAFF;QAGFC,MAAM,EAAC;UACHC,OAAO,EAAE,KAAKjE,aADX;UAEH;UACA4C,QAAQ,EAAE,KAAK3C,aAHZ;UAIHiE,IAAI,EAAC,KAAK9D,WAJP;UAKH+D,QAAQ,EAAC,KAAK9D;QALX,CAHL;QAUE+D,gBAAgB,EAAGJ,MAAD,IAAY;UAC1B,IAAIK,MAAK,GAAI,EAAb;UACAC,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,OAApB,CAA4BC,GAAE,IAAK;YAC/BJ,MAAK,IAAM,GAAEI,GAAI,IAAGC,kBAAkB,CAACV,MAAM,CAACS,GAAD,CAAP,CAAc,GAApD;UACH,CAFD;UAGA,OAAOJ,MAAM,CAACM,MAAP,CAAc,CAAd,EAAiBN,MAAM,CAACxD,MAAP,GAAgB,CAAjC,CAAP;QACJ;MAhBF,CAAD,CAAL,CAiBG+D,IAjBH,CAiBSC,QAAD,IAAY;QAChB;QACA,MAAMjF,IAAG,GAAIiF,QAAQ,CAACjF,IAAtB,CAFgB,CAGhB;;QACA,KAAKa,KAAL,GAAab,IAAI,CAACa,KAAlB;QACA,KAAKN,SAAL,GAAiBP,IAAI,CAACA,IAAtB;QACA,KAAKQ,WAAL,GAAmBR,IAAI,CAACsE,IAAxB;MACH,CAxBD,EAwBGY,KAxBH,CAwBUC,KAAD,IAAS;QACd5B,OAAO,CAACC,GAAR,CAAY2B,KAAZ;MACH,CA1BD;IA2BH,CApMG;;IAqMJG,eAAe,CAACtF,IAAD,EAAM;MACjB;MACA,IAAIE,MAAK,GAAI,EAAb;;MACA,KAAI,IAAI2E,GAAR,IAAe7E,IAAf,EAAoB;QAChB;QACA,MAAMuF,QAAO,GAAIvF,IAAI,CAAC6E,GAAD,CAArB,CAFgB,CAGhB;;QACAU,QAAQ,CAACX,OAAT,CAAiBY,OAAM,IAAK;UACxB;UACA;UACA,KAAKA,OAAL,GAAeA,OAAf;UACA,IAAIC,KAAI,GAAIvF,MAAM,CAACwF,SAAP,CAAkBC,KAAD,IAAS;YAClC,OAAOA,KAAK,CAAC5C,IAAN,IAAc,KAAKyC,OAAL,CAAazC,IAAlC;UACH,CAFW,EAET,IAFS,CAAZ;;UAGA,IAAG0C,KAAI,IAAK,CAAC,CAAb,EAAe;YACXvF,MAAM,CAAC0F,IAAP,CAAY;cACR,QAAQJ,OAAO,CAACzC,IADR;cAER,OAAMyC,OAAO,CAACtC,GAFN;cAGR;cACA;cACA;cACA,OAAM,CAAC;gBACH,YAAW2B,GADR;gBAEH,OAAMW,OAAO,CAACtC;cAFX,CAAD;YANE,CAAZ;UAWH,CAZD,MAYK;YACD;YACAhD,MAAM,CAACuF,KAAD,CAAN,CAAcvC,GAAd,GAAoBhD,MAAM,CAACuF,KAAD,CAAN,CAAcvC,GAAd,GAAoBsC,OAAO,CAACtC,GAAhD,CAFC,CAGD;;YACAhD,MAAM,CAACuF,KAAD,CAAN,CAAc7C,GAAd,CAAkBgD,IAAlB,CAAuB;cACnB,YAAWf,GADQ;cAEnB,OAAMW,OAAO,CAACtC;YAFK,CAAvB;UAIJ,CA3BwB,CA4BxB;;QACH,CA7BD;MA8BJ;;MACA,OAAOhD,MAAP;IACH;;EA5OG,CAxCG;;EAsRX2F,OAAO,GAAE;IACLhG,KAAK,CAAC;MACFqE,MAAM,EAAE,KADN;MAEFC,GAAG,EAAE;IAFH,CAAD,CAAL,CAGGa,IAHH,CAGSC,QAAD,IAAY;MAChB;MACA,MAAMjF,IAAG,GAAIiF,QAAQ,CAACjF,IAAT,CAAcA,IAA3B,CAFgB,CAGhB;MACA;;MACA,KAAKC,eAAL,GAAuBD,IAAvB,CALgB,CAMhB;;MACA,KAAKE,MAAL,GAAc,KAAKoF,eAAL,CAAqBtF,IAArB,CAAd,CAPgB,CAQhB;;MACA,MAAM8F,aAAY,GAAIpB,MAAM,CAACC,IAAP,CAAY3E,IAAZ,CAAtB;MACA,KAAKM,eAAL,GAAuBwF,aAAvB;MACA,KAAKzF,aAAL,GAAqByF,aAAa,CAAC,CAAD,CAAlC;MACA,KAAK3F,WAAL,GAAmBH,IAAI,CAAC,KAAKK,aAAN,CAAvB;MACA,KAAKkB,SAAL;IACH,CAjBD,EAiBG2D,KAjBH,CAiBUC,KAAD,IAAS;MACd5B,OAAO,CAACC,GAAR,CAAY,MAAZ;MACAD,OAAO,CAACC,GAAR,CAAY2B,KAAZ;IACH,CApBD;EAqBJ;;AA5SW,CAAf","names":["WordCloud","axios","ElMessage","ElMessageBox","data","all_labels_data","labels","labels_list","searchContent","categoryValue","categoryOptions","tableData","currentPage","pageSize","small","disabled","background","total","computed","labelsContainerIsShow","searchResultTableIsShow","length","emptyIsShow","created","window","clickTooltip","methods","initChart","wordCloud","autoFit","wordField","weightField","colorField","wordStyle","fontFamily","fontSize","interactions","type","state","active","style","lineWidth","tooltip","enterable","customContent","title","d","datum","ctg","map","item","name","category","color","cnt","join","random","render","label","console","log","search","categoryChange","clickSearchButton","alert","confirmButtonText","callback","action","message","inputSearchContent","method","url","params","keyword","page","pagesize","paramsSerializer","result","Object","keys","forEach","key","encodeURIComponent","substr","then","response","catch","error","searchThisLabel","getTableData","getAllLabelData","key_data","element","index","findIndex","value","push","mounted","category_list"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\Desktop\\wordcloud\\src\\views\\WordCloudView.vue"],"sourcesContent":["<template>\r\n    <div id=\"whole-wordcloud-page\">\r\n        <el-container>\r\n            <el-main>\r\n                <div id=\"wordcloud-container\">\r\n                    <p>Label Word Cloud</p>\r\n                    <div id=\"wordcloud\"></div>\r\n                </div>\r\n                <div id=\"search-container\">\r\n                    <el-row :gutter=\"20\">\r\n                        <!-- <el-col :sm=\"6\" :xs=\"10\">\r\n                            <div id=\"net-selector\" class=\"layout-search\">\r\n                                <p>net:</p>\r\n                                <el-select v-model=\"netValue\" placeholder=\"Select\" @change=\"search\">\r\n                                    <el-option\r\n                                    v-for=\"item in netOptions\"\r\n                                    :key=\"item\"\r\n                                    :value=\"item\"\r\n                                    />\r\n                                </el-select>\r\n                            </div>\r\n                        </el-col> -->\r\n                        <el-col :sm=\"10\" :xs=\"24\">\r\n                            <div id=\"category-selector\" class=\"layout-search\">\r\n                                <p>category:</p>\r\n                                <el-select v-model=\"categoryValue\" placeholder=\"Select\" @change=\"categoryChange\">\r\n                                    <el-option\r\n                                    v-for=\"item in categoryOptions\"\r\n                                    :key=\"item\"\r\n                                    :value=\"item\"\r\n                                    />\r\n                                </el-select>\r\n                            </div>\r\n                        </el-col>\r\n                        <el-col :sm=\"14\" :xs=\"24\">\r\n                            <div id=\"label-input-box\" class=\"layout-search\">\r\n                                <el-input v-model=\"searchContent\" placeholder=\"Search Labels\" @input=\"inputSearchContent\">\r\n                                    <template #append>\r\n                                        <el-button class=\"search-button\" @click=\"clickSearchButton\">Search</el-button>\r\n                                    </template>\r\n                                </el-input>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n                <div id=\"labels-container\" v-show=\"labelsContainerIsShow\">\r\n                    <el-row justify=\"start\">\r\n                        <el-col :lg=\"6\" :md=\"8\" :sm=\"12\" :xs=\"24\" v-for=\"label in labels_list\" :key=\"label.name\">\r\n                            <el-button class=\"label-button\" @click=\"searchThisLabel(label.name)\">{{label.name}}\r\n                                <el-tag effect=\"dark\" round size=\"small\" style=\"margin-left:10px\">{{ label.cnt }}</el-tag>\r\n                            </el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n                <div id=\"search-result-table\" v-show=\"searchResultTableIsShow\">\r\n                    <div id=\"result-table\">\r\n                        <el-table :data=\"tableData\">\r\n                            <el-table-column type=\"expand\">\r\n                                <template #default=\"props\">\r\n                                    <div>\r\n                                        <p v-for=\"(value,name) in props.row.info\" :key=\"name\">{{name}}:{{value}}</p>\r\n                                    </div>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column label=\"Label\" prop=\"labels\">\r\n                                <template #default=\"scope\">\r\n                                    <el-tag v-for=\"item in scope.row.labels\" v-bind:key=\"item\" disable-transitions hit @click=\"searchThisLabel(item)\"> {{item}}</el-tag>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <!-- <el-table-column label=\"Net\" prop=\"net\" /> -->\r\n                            <el-table-column label=\"Category\" prop=\"category\" />\r\n                            <el-table-column label=\"Address\" prop=\"info.address\" v-if=\"categoryValue=='Account'\"/>\r\n                            <el-table-column label=\"Txn Hash\" prop=\"info.txn_hash\" v-if=\"categoryValue=='Transaction'\"/>\r\n                            <el-table-column label=\"Block Number\" prop=\"info.block_number\" v-if=\"categoryValue=='Block'\"/>\r\n                        </el-table>\r\n                    </div>\r\n                    <div id=\"result-pagination\">\r\n                        <el-pagination\r\n                            v-model:currentPage=\"currentPage\"\r\n                            v-model:page-size=\"pageSize\"\r\n                            :page-sizes=\"[10,25,50,100]\"\r\n                            :small=\"small\"\r\n                            :disabled=\"disabled\"\r\n                            :background=\"background\"\r\n                            layout=\"total, sizes, prev, pager, next, jumper\"\r\n                            :total=\"total\"\r\n                            @size-change=\"getTableData\"\r\n                            @current-change=\"getTableData\"\r\n                            @next-click=\"getTableData\"\r\n                            @prev-click=\"getTableData\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <el-empty description=\"No Data\" v-show=\"emptyIsShow\"/>\r\n            </el-main>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { WordCloud } from '@antv/g2plot';\r\nimport axios from 'axios';\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n// axios.defaults.baseURL = 'cloudapi'\r\nexport default {\r\n    data(){\r\n        return{\r\n            all_labels_data:[],\r\n            labels:[],\r\n            labels_list:[],\r\n            searchContent:'',\r\n            // netValue:\"\",\r\n            // netOptions:[],\r\n            categoryValue:\"\",\r\n            categoryOptions:[],\r\n            tableData:[],\r\n            currentPage:1,\r\n            pageSize:10,\r\n            small:false,\r\n            disabled:false,\r\n            background:false,\r\n            total:0,\r\n        }\r\n    },\r\n    computed:{\r\n        // netValue(){\r\n        //     return this.netOptions[0]\r\n        // },\r\n        // categoryValue(){\r\n        //     return this.categoryOptions[0]\r\n        // },\r\n        labelsContainerIsShow(){\r\n            return this.searchContent==\"\"\r\n        },\r\n        searchResultTableIsShow(){\r\n            return this.tableData.length != 0\r\n        },\r\n        emptyIsShow(){\r\n            return this.searchContent!=\"\" && this.tableData.length == 0\r\n        }\r\n    },\r\n    created(){\r\n        window.clickTooltip = this.clickTooltip;\r\n    },\r\n    methods:{\r\n        initChart(){\r\n            const wordCloud = new WordCloud('wordcloud', {\r\n                data:this.labels,\r\n                autoFit:true,\r\n                wordField: 'name',\r\n                weightField: 'cnt',\r\n                colorField:'cnt',\r\n                wordStyle: {\r\n                    fontFamily: 'Verdana',\r\n                    fontSize: [15, 30],\r\n                },\r\n                // 设置交互类型\r\n                interactions: [{ type: 'element-active' }],\r\n                state: {\r\n                    active: {\r\n                    // 这里可以设置 active 时的样式\r\n                        style: {\r\n                            lineWidth: 3,\r\n                        },\r\n                    },\r\n                },\r\n                tooltip:{\r\n                    enterable: true,\r\n                    customContent: (title, data) => {\r\n                        if (!data || data.length <= 0) return;\r\n                        const d = data[0];\r\n                        return `<div>\r\n                            <ul style=\"padding:0; margin:0; text-align: left; list-style-type: none;\">\r\n                                ${d.data.datum.ctg.map((item)=>`<li class=\"g2-tooltip-list-item\" onclick=\"clickTooltip('${d.data.datum.name}', '${item.category}')\">\r\n                                    <span class=\"g2-tooltip-marker\" style=\"background-color: ${d.color};\"></span>\r\n                                    <span class=\"g2-tooltip-name\">${item.category}</span>:\r\n                                    <span class=\"g2-tooltip-value\">${item.cnt}</span>\r\n                                </li>`).join('')}\r\n                            </ul>\r\n                        </div>`;\r\n                    }\r\n                },\r\n                random: () => 0.5,\r\n            });\r\n\r\n            wordCloud.render();\r\n            // 图例名称添加点击事件\r\n            // wordCloud.on('element:click', (...args) => {\r\n            //     console.log(args[0].data.data.text);\r\n            //     this.searchContent = args[0].data.data.text;\r\n            //     //todo：向后端请求数据\r\n            //     axios({\r\n            //         method: 'post',\r\n            //         url:'/mock/two',\r\n            //         data:{\r\n            //             label: this.searchContent,\r\n            //             // net: this.netValue,\r\n            //             category: this.categoryValue,\r\n            //             page:1,\r\n            //             page_size:this.pageSize\r\n            //         }\r\n            //     }).then((response)=>{\r\n            //         console.log(response)\r\n            //         const data = response.data;\r\n            //         this.total = data.total;\r\n            //         this.tableData = data.result_list;\r\n            //     }).catch((error)=>{\r\n            //         console.log(error)\r\n            //     })\r\n            // });\r\n        },\r\n        clickTooltip(label, category){\r\n            console.log(label, category)\r\n            this.searchContent = label;\r\n            this.categoryValue = category;\r\n            this.search();\r\n        },\r\n        categoryChange(){\r\n            if(this.searchContent.length == 0){\r\n                this.labels_list = this.all_labels_data[this.categoryValue]\r\n            }else{\r\n                this.search()\r\n            }\r\n        },\r\n        clickSearchButton(){\r\n            if(this.searchContent.length == 0){\r\n                ElMessageBox.alert('请输入查询内容', '提示', {\r\n                    // if you want to disable its autofocus\r\n                    // autofocus: false,\r\n                    confirmButtonText: 'OK',\r\n                    callback: (action) => {\r\n                        ElMessage({\r\n                            type: 'info',\r\n                            message: `action: ${action}`,\r\n                        })\r\n                    },\r\n                })\r\n            }else{\r\n                this.search();\r\n            }\r\n        },\r\n        inputSearchContent(){\r\n            if(this.searchContent.length == 0){\r\n                this.tableData = []\r\n            }else{\r\n                this.search()\r\n            }\r\n        },\r\n        search(){\r\n            if(this.searchContent != \"\"){\r\n                // console.log(this.searchContent)\r\n                // console.log(this.netValue)\r\n                // console.log(this.categoryValue)\r\n                // 向后端请求数据\r\n                axios({\r\n                    method: 'get',\r\n                    url:'/cloudapi/api/cloud/filter',\r\n                    params:{\r\n                        keyword: this.searchContent,\r\n                        // net: this.netValue,\r\n                        category: this.categoryValue,\r\n                        page:1,\r\n                        pagesize:this.pageSize\r\n                    },\r\n                    paramsSerializer: (params) => {\r\n                        let result = '';\r\n                        Object.keys(params).forEach(key => {\r\n                            result += `${key}=${encodeURIComponent(params[key])}&`;\r\n                        });\r\n                        return result.substr(0, result.length - 1);\r\n                    }\r\n                }).then((response)=>{\r\n                    // console.log(response)\r\n                    const data = response.data;\r\n                    // console.log(data)\r\n                    this.total = data.total;\r\n                    this.tableData = data.data;\r\n                    this.currentPage = data.page;\r\n                }).catch((error)=>{\r\n                    console.log(error)\r\n                })\r\n            }\r\n        },\r\n        searchThisLabel(label){\r\n            this.searchContent = label;\r\n            // console.log(label)\r\n            // 向后端请求数据\r\n            // axios({\r\n            //     method: 'get',\r\n            //     url:'/cloudapi/api/cloud/filter',\r\n            //     params:{\r\n            //         keyword: this.searchContent,\r\n            //         // net: this.netValue,\r\n            //         category: this.categoryValue,\r\n            //         page:1,\r\n            //         pagesize:this.pageSize\r\n            //     }\r\n            // }).then((response)=>{\r\n            //     // console.log(response)\r\n            //     const data = response.data;\r\n            //     // console.log(data)\r\n            //     this.total = data.total;\r\n            //     this.tableData = data.data;\r\n            //     this.currentPage = data.page;\r\n            // }).catch((error)=>{\r\n            //     console.log(error)\r\n            // })\r\n            this.search()\r\n        },\r\n        getTableData(){\r\n            // console.log(this.pageSize);\r\n            // console.log(this.currentPage);\r\n            //todo：向后端请求数据\r\n            axios({\r\n                method: 'get',\r\n                url:'/cloudapi/api/cloud/filter',\r\n                params:{\r\n                    keyword: this.searchContent,\r\n                    // net: this.netValue,\r\n                    category: this.categoryValue,\r\n                    page:this.currentPage,\r\n                    pagesize:this.pageSize\r\n                },\r\n                    paramsSerializer: (params) => {\r\n                        let result = '';\r\n                        Object.keys(params).forEach(key => {\r\n                            result += `${key}=${encodeURIComponent(params[key])}&`;\r\n                        });\r\n                        return result.substr(0, result.length - 1);\r\n                    }\r\n            }).then((response)=>{\r\n                // console.log(response)\r\n                const data = response.data;\r\n                // console.log(data)\r\n                this.total = data.total;\r\n                this.tableData = data.data;\r\n                this.currentPage = data.page;\r\n            }).catch((error)=>{\r\n                console.log(error)\r\n            })\r\n        },\r\n        getAllLabelData(data){\r\n            // console.log(data)\r\n            let labels = [];\r\n            for(let key in data){\r\n                // console.log(key);\r\n                const key_data = data[key];\r\n                // console.log(key_data);\r\n                key_data.forEach(element => {\r\n                    // console.log(key)\r\n                    // console.log(element);\r\n                    this.element = element\r\n                    let index = labels.findIndex((value)=>{\r\n                        return value.name == this.element.name\r\n                    }, this);\r\n                    if(index == -1){\r\n                        labels.push({\r\n                            'name': element.name,\r\n                            'cnt':element.cnt,\r\n                            // 'ctg':[{\r\n                            //    [key] : element.cnt\r\n                            // }]\r\n                            'ctg':[{\r\n                                'category':key,\r\n                                'cnt':element.cnt\r\n                            }]\r\n                        })\r\n                    }else{\r\n                        // let label = labels[index];\r\n                        labels[index].cnt = labels[index].cnt + element.cnt;\r\n                        // labels[index].ctg.push({[key]: element.cnt})\r\n                        labels[index].ctg.push({\r\n                            'category':key,\r\n                            'cnt':element.cnt\r\n                        })\r\n                    }\r\n                    // console.log(labels)\r\n                });\r\n            }\r\n            return labels\r\n        },\r\n    },\r\n    mounted(){\r\n        axios({\r\n            method: 'get',\r\n            url: '/cloudapi/api/cloud'\r\n        }).then((response)=>{\r\n            // console.log(response)\r\n            const data = response.data.data;\r\n            // console.log(data)\r\n            // 保留数据\r\n            this.all_labels_data = data;\r\n            // 处理数据，得到词云对应的数据\r\n            this.labels = this.getAllLabelData(data);\r\n            // console.log(this.labels)\r\n            const category_list = Object.keys(data);\r\n            this.categoryOptions = category_list;\r\n            this.categoryValue = category_list[0];\r\n            this.labels_list = data[this.categoryValue];\r\n            this.initChart();\r\n        }).catch((error)=>{\r\n            console.log('here');\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    #whole-wordcloud-page{\r\n        width:100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .el-main{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n    #wordcloud-container{\r\n        width: 80%;\r\n        p{\r\n            font-size: 30px;\r\n        }\r\n    }\r\n    #search-container{\r\n        width:80%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n        .el-row{\r\n            width:100%;\r\n        }\r\n    }\r\n    .layout-search{\r\n        width:100%;\r\n        height:100%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    #category-selector{\r\n        .el-select{\r\n            width:70%\r\n        }\r\n    }\r\n    .label-button{\r\n        width:80%\r\n    }\r\n    #labels-container{\r\n        width: 90%;\r\n        .el-col{\r\n            margin-top:10px\r\n        }\r\n    }\r\n    #search-result-table{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        width:90%;\r\n        margin-top: 20px;\r\n        .el-tag{\r\n            margin-right: 5px;\r\n            margin-bottom: 2px;\r\n        }\r\n    }\r\n    #result-table{\r\n        width:100%\r\n    }\r\n    #result-pagination{\r\n        margin-top: 5px;\r\n        align-self: flex-end;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}