{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { getTinyData } from './utils';\n\nvar TinyLine =\n/** @class */\nfunction (_super) {\n  __extends(TinyLine, _super);\n\n  function TinyLine() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'tiny-line';\n    return _this;\n  }\n  /**\n   * 获取默认配置项\n   * 供外部使用\n   */\n\n\n  TinyLine.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  TinyLine.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n\n    var _a = this,\n        chart = _a.chart,\n        options = _a.options;\n\n    meta({\n      chart: chart,\n      options: options\n    });\n    chart.changeData(getTinyData(data));\n  };\n\n  TinyLine.prototype.getDefaultOptions = function () {\n    return TinyLine.getDefaultOptions();\n  };\n  /**\n   * 获取 迷你折线图 的适配器\n   */\n\n\n  TinyLine.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return TinyLine;\n}(Plot);\n\nexport { TinyLine };","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;AAGA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,WAA9B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAIA;AAAA;AAAA;EAA8BC;;EAA9B;IAAA;IASE;;;IACOC,aAAe,WAAf;;EAuBR;EAhCC;;;;;;EAIOC,6BAAP;IACE,OAAOJ,eAAP;EACD,CAFM;EAOP;;;;;;EAIOI,gCAAP,UAAkBC,IAAlB,EAA+C;IAC7C,KAAKC,YAAL,CAAkB;MAAED,IAAI;IAAN,CAAlB;;IACM,SAAqB,IAArB;IAAA,IAAEE,KAAK,WAAP;IAAA,IAASC,OAAO,aAAhB;;IACNT,IAAI,CAAC;MAAEQ,KAAK,OAAP;MAASC,OAAO;IAAhB,CAAD,CAAJ;IACAD,KAAK,CAACE,UAAN,CAAiBR,WAAW,CAACI,IAAD,CAA5B;EACD,CALM;;EAOGD,uCAAV;IACE,OAAOA,QAAQ,CAACM,iBAAT,EAAP;EACD,CAFS;EAIV;;;;;EAGUN,sCAAV;IACE,OAAON,OAAP;EACD,CAFS;;EAGZ;AAAC,CAjCD,CAA8BD,IAA9B","names":["Plot","adaptor","meta","DEFAULT_OPTIONS","getTinyData","__extends","_this","TinyLine","data","updateOption","chart","options","changeData","getDefaultOptions"],"sourceRoot":"","sources":["../../../src/plots/tiny-line/index.ts"],"sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { TinyLineOptions } from './types';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { getTinyData } from './utils';\n\nexport type { TinyLineOptions };\n\nexport class TinyLine extends Plot<TinyLineOptions> {\n  /**\n   * 获取默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<TinyLineOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'tiny-line';\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data: TinyLineOptions['data']) {\n    this.updateOption({ data });\n    const { chart, options } = this;\n    meta({ chart, options });\n    chart.changeData(getTinyData(data));\n  }\n\n  protected getDefaultOptions() {\n    return TinyLine.getDefaultOptions();\n  }\n\n  /**\n   * 获取 迷你折线图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<TinyLineOptions> {\n    return adaptor;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}