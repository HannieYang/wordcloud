{"ast":null,"code":"/**\n * 默认的 syncViewPadding 逻辑\n * @param chart\n * @param views\n * @param PC: PaddingCalCtor\n */\nexport function defaultSyncViewPadding(chart, views, PC) {\n  var syncPadding = PC.instance(); // 所有的 view 的 autoPadding 指向同一个引用\n\n  views.forEach(function (v) {\n    v.autoPadding = syncPadding.max(v.autoPadding.getPadding());\n  });\n}","map":{"version":3,"mappings":"AAGA;;;;;;AAMA,OAAM,SAAUA,sBAAV,CAAiCC,KAAjC,EAA8CC,KAA9C,EAA6DC,EAA7D,EAA+E;EACnF,IAAMC,WAAW,GAAGD,EAAE,CAACE,QAAH,EAApB,CADmF,CAGnF;;EACAH,KAAK,CAACI,OAAN,CAAc,UAACC,CAAD,EAAQ;IACpBA,CAAC,CAACC,WAAF,GAAgBJ,WAAW,CAACK,GAAZ,CAAgBF,CAAC,CAACC,WAAF,CAAcE,UAAd,EAAhB,CAAhB;EACD,CAFD;AAGD","names":["defaultSyncViewPadding","chart","views","PC","syncPadding","instance","forEach","v","autoPadding","max","getPadding"],"sourceRoot":"","sources":["../../../src/chart/util/sync-view-padding.ts"],"sourcesContent":["import { PaddingCalCtor } from '../layout/padding-cal';\nimport { View } from '../view';\n\n/**\n * 默认的 syncViewPadding 逻辑\n * @param chart\n * @param views\n * @param PC: PaddingCalCtor\n */\nexport function defaultSyncViewPadding(chart: View, views: View[], PC: PaddingCalCtor) {\n  const syncPadding = PC.instance();\n\n  // 所有的 view 的 autoPadding 指向同一个引用\n  views.forEach((v: View) => {\n    v.autoPadding = syncPadding.max(v.autoPadding.getPadding());\n  });\n}\n"]},"metadata":{},"sourceType":"module"}