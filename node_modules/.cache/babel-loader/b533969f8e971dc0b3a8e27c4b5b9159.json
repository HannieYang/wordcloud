{"ast":null,"code":"import { registerInteraction } from '@antv/g2';\nvar INTERACTION_MAP = {\n  hover: '__interval-connected-area-hover__',\n  click: '__interval-connected-area-click__'\n};\n\nvar getStartStages = function (trigger, style) {\n  if (trigger === 'hover') {\n    return [{\n      trigger: \"interval:mouseenter\",\n      action: ['element-highlight-by-color:highlight', 'element-link-by-color:link'],\n      arg: [null, {\n        style: style\n      }]\n    }];\n  }\n\n  return [{\n    trigger: \"interval:click\",\n    action: ['element-highlight-by-color:clear', 'element-highlight-by-color:highlight', 'element-link-by-color:clear', 'element-link-by-color:unlink', 'element-link-by-color:link'],\n    arg: [null, null, null, null, {\n      style: style\n    }]\n  }];\n};\n/** hover 触发的连通区域交互 */\n\n\nregisterInteraction(INTERACTION_MAP.hover, {\n  start: getStartStages(INTERACTION_MAP.hover),\n  end: [{\n    trigger: 'interval:mouseleave',\n    action: ['element-highlight-by-color:reset', 'element-link-by-color:unlink']\n  }]\n});\n/** click 触发的联通区域交互 */\n\nregisterInteraction(INTERACTION_MAP.click, {\n  start: getStartStages(INTERACTION_MAP.click),\n  end: [{\n    trigger: 'document:mousedown',\n    action: ['element-highlight-by-color:clear', 'element-link-by-color:clear']\n  }]\n});\n/**\n * 返回支持联通区域组件交互的 adaptor，适用于堆叠柱形图/堆叠条形图\n * @param disable\n */\n\nexport function connectedArea(disable) {\n  if (disable === void 0) {\n    disable = false;\n  }\n\n  return function (params) {\n    var chart = params.chart,\n        options = params.options;\n    var connectedArea = options.connectedArea;\n\n    var clear = function () {\n      chart.removeInteraction(INTERACTION_MAP.hover);\n      chart.removeInteraction(INTERACTION_MAP.click);\n    };\n\n    if (!disable && connectedArea) {\n      var trigger = connectedArea.trigger || 'hover';\n      clear();\n      chart.interaction(INTERACTION_MAP[trigger], {\n        start: getStartStages(trigger, connectedArea.style)\n      });\n    } else {\n      clear();\n    }\n\n    return params;\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,mBAAT,QAAyD,UAAzD;AAeA,IAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE,mCADe;EAEtBC,KAAK,EAAE;AAFe,CAAxB;;AAKA,IAAMC,cAAc,GAAG,UAACC,OAAD,EAAkBC,KAAlB,EAAuD;EAC5E,IAAID,OAAO,KAAK,OAAhB,EAAyB;IACvB,OAAO,CACL;MACEA,OAAO,EAAE,qBADX;MAEEE,MAAM,EAAE,CAAC,sCAAD,EAAyC,4BAAzC,CAFV;MAGEC,GAAG,EAAE,CAAC,IAAD,EAAO;QAAEF,KAAK;MAAP,CAAP;IAHP,CADK,CAAP;EAOD;;EACD,OAAO,CACL;IACED,OAAO,EAAE,gBADX;IAEEE,MAAM,EAAE,CACN,kCADM,EAEN,sCAFM,EAGN,6BAHM,EAIN,8BAJM,EAKN,4BALM,CAFV;IASEC,GAAG,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB;MAAEF,KAAK;IAAP,CAAzB;EATP,CADK,CAAP;AAaD,CAvBD;AAyBA;;;AACAN,mBAAmB,CAACC,eAAe,CAACC,KAAjB,EAAwB;EACzCO,KAAK,EAAEL,cAAc,CAACH,eAAe,CAACC,KAAjB,CADoB;EAEzCQ,GAAG,EAAE,CACH;IACEL,OAAO,EAAE,qBADX;IAEEE,MAAM,EAAE,CAAC,kCAAD,EAAqC,8BAArC;EAFV,CADG;AAFoC,CAAxB,CAAnB;AAUA;;AACAP,mBAAmB,CAACC,eAAe,CAACE,KAAjB,EAAwB;EACzCM,KAAK,EAAEL,cAAc,CAACH,eAAe,CAACE,KAAjB,CADoB;EAEzCO,GAAG,EAAE,CACH;IACEL,OAAO,EAAE,oBADX;IAEEE,MAAM,EAAE,CAAC,kCAAD,EAAqC,6BAArC;EAFV,CADG;AAFoC,CAAxB,CAAnB;AAUA;;;;;AAIA,OAAM,SAAUI,aAAV,CAA2DC,OAA3D,EAA0E;EAAf;IAAAA;EAAe;;EAC9E,OAAO,UAAUC,MAAV,EAA2B;IACxB,SAAK,GAAcA,MAAM,MAAzB;IAAA,IAAOC,OAAO,GAAKD,MAAM,QAAzB;IACA,iBAAa,GAAKC,OAAO,cAAzB;;IAER,IAAMC,KAAK,GAAG;MACZC,KAAK,CAACC,iBAAN,CAAwBhB,eAAe,CAACC,KAAxC;MACAc,KAAK,CAACC,iBAAN,CAAwBhB,eAAe,CAACE,KAAxC;IACD,CAHD;;IAKA,IAAI,CAACS,OAAD,IAAYD,aAAhB,EAA+B;MAC7B,IAAMN,OAAO,GAAGM,aAAa,CAACN,OAAd,IAAyB,OAAzC;MACAU,KAAK;MACLC,KAAK,CAACE,WAAN,CAAkBjB,eAAe,CAACI,OAAD,CAAjC,EAA4C;QAC1CI,KAAK,EAAEL,cAAc,CAACC,OAAD,EAAUM,aAAa,CAACL,KAAxB;MADqB,CAA5C;IAGD,CAND,MAMO;MACLS,KAAK;IACN;;IAED,OAAOF,MAAP;EACD,CApBD;AAqBD","names":["registerInteraction","INTERACTION_MAP","hover","click","getStartStages","trigger","style","action","arg","start","end","connectedArea","disable","params","options","clear","chart","removeInteraction","interaction"],"sourceRoot":"","sources":["../../src/adaptor/connected-area.ts"],"sourcesContent":["import { registerInteraction, ShapeAttrs, Element } from '@antv/g2';\nimport { Params } from '../core/adaptor';\n\nexport interface ConnectedAreaOptions {\n  /** 触发方式, 默认 hover */\n  trigger?: 'hover' | 'click';\n  /** 自定义样式 */\n  style?: ShapeAttrs | ((style: ShapeAttrs, element: Element) => ShapeAttrs);\n}\n\n/** 联通区域组件：使用于堆叠柱形图、堆叠条形图 */\nexport interface OptionWithConnectedArea {\n  connectedArea?: ConnectedAreaOptions | false;\n}\n\nconst INTERACTION_MAP = {\n  hover: '__interval-connected-area-hover__',\n  click: '__interval-connected-area-click__',\n};\n\nconst getStartStages = (trigger: string, style?: ConnectedAreaOptions['style']) => {\n  if (trigger === 'hover') {\n    return [\n      {\n        trigger: `interval:mouseenter`,\n        action: ['element-highlight-by-color:highlight', 'element-link-by-color:link'],\n        arg: [null, { style }],\n      },\n    ];\n  }\n  return [\n    {\n      trigger: `interval:click`,\n      action: [\n        'element-highlight-by-color:clear',\n        'element-highlight-by-color:highlight',\n        'element-link-by-color:clear',\n        'element-link-by-color:unlink',\n        'element-link-by-color:link',\n      ],\n      arg: [null, null, null, null, { style }],\n    },\n  ];\n};\n\n/** hover 触发的连通区域交互 */\nregisterInteraction(INTERACTION_MAP.hover, {\n  start: getStartStages(INTERACTION_MAP.hover),\n  end: [\n    {\n      trigger: 'interval:mouseleave',\n      action: ['element-highlight-by-color:reset', 'element-link-by-color:unlink'],\n    },\n  ],\n});\n\n/** click 触发的联通区域交互 */\nregisterInteraction(INTERACTION_MAP.click, {\n  start: getStartStages(INTERACTION_MAP.click),\n  end: [\n    {\n      trigger: 'document:mousedown',\n      action: ['element-highlight-by-color:clear', 'element-link-by-color:clear'],\n    },\n  ],\n});\n\n/**\n * 返回支持联通区域组件交互的 adaptor，适用于堆叠柱形图/堆叠条形图\n * @param disable\n */\nexport function connectedArea<O extends OptionWithConnectedArea>(disable = false) {\n  return function (params: Params<O>): Params<O> {\n    const { chart, options } = params;\n    const { connectedArea } = options;\n\n    const clear = () => {\n      chart.removeInteraction(INTERACTION_MAP.hover);\n      chart.removeInteraction(INTERACTION_MAP.click);\n    };\n\n    if (!disable && connectedArea) {\n      const trigger = connectedArea.trigger || 'hover';\n      clear();\n      chart.interaction(INTERACTION_MAP[trigger], {\n        start: getStartStages(trigger, connectedArea.style),\n      });\n    } else {\n      clear();\n    }\n\n    return params;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}