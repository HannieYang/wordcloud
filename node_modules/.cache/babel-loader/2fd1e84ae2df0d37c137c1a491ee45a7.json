{"ast":null,"code":"import { isArray } from '@antv/util';\nimport { flow, deepAssign } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE } from '../constant';\nimport { conversionTagComponent, transformData } from './common';\n/**\n * 处理字段数据\n * @param params\n */\n\nfunction field(params) {\n  var _a;\n\n  var chart = params.chart,\n      options = params.options;\n  var _b = options.data,\n      data = _b === void 0 ? [] : _b,\n      yField = options.yField; // 绘制漏斗图\n\n  chart.data(data);\n  chart.scale((_a = {}, _a[yField] = {\n    sync: true\n  }, _a));\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      xField = options.xField,\n      yField = options.yField,\n      color = options.color,\n      compareField = options.compareField,\n      isTransposed = options.isTransposed,\n      tooltip = options.tooltip,\n      maxSize = options.maxSize,\n      minSize = options.minSize,\n      label = options.label,\n      funnelStyle = options.funnelStyle,\n      state = options.state,\n      showFacetTitle = options.showFacetTitle;\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    showTitle: showFacetTitle,\n    eachView: function (view, facet) {\n      var index = isTransposed ? facet.rowIndex : facet.columnIndex;\n\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', index === 0 ? -1 : 1, -1]]\n        });\n      }\n\n      var formatterData = transformData(facet.data, data, {\n        yField: yField,\n        maxSize: maxSize,\n        minSize: minSize\n      });\n      view.data(formatterData); // 绘制图形\n\n      var _a = getTooltipMapping(tooltip, [xField, yField, compareField]),\n          fields = _a.fields,\n          formatter = _a.formatter;\n\n      var defaultFacetLabel = isTransposed ? {\n        offset: index === 0 ? 10 : -23,\n        position: index === 0 ? 'bottom' : 'top'\n      } : {\n        offset: 10,\n        position: 'left',\n        style: {\n          textAlign: index === 0 ? 'end' : 'start'\n        }\n      };\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: FUNNEL_MAPPING_VALUE,\n          colorField: xField,\n          tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n          mapping: {\n            // todo 暂时不提供 金字塔 shape，后续需要自定义下形状\n            shape: 'funnel',\n            tooltip: formatter,\n            color: color,\n            style: funnelStyle\n          },\n          label: label === false ? false : deepAssign({}, defaultFacetLabel, label),\n          state: state\n        }\n      });\n    }\n  });\n  return params;\n}\n/**\n * 转化率组件\n * @param params\n */\n\n\nfunction conversionTag(params) {\n  var chart = params.chart,\n      options = params.options;\n  var conversionTag = options.conversionTag,\n      isTransposed = options.isTransposed; // @ts-ignore\n\n  chart.once('beforepaint', function () {\n    chart.views.forEach(function (view, viewIndex) {\n      var getLineCoordinate = function (datum, datumIndex, data, initLineOption) {\n        var ratio = viewIndex === 0 ? -1 : 1;\n        return deepAssign({}, initLineOption, {\n          start: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE]],\n          end: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE] + 0.05],\n          text: isTransposed ? {\n            style: {\n              textAlign: 'start'\n            }\n          } : {\n            offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n            style: {\n              textAlign: viewIndex === 0 ? 'end' : 'start'\n            }\n          }\n        });\n      };\n\n      conversionTagComponent(getLineCoordinate)(deepAssign({}, {\n        chart: view,\n        options: options\n      }));\n    });\n  });\n  return params;\n}\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\n\n\nexport function compareFunnel(params) {\n  return flow(field, geometry, conversionTag)(params);\n}","map":{"version":3,"mappings":"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","names":["isArray","flow","deepAssign","getTooltipMapping","geometry","baseGeometry","FUNNEL_PERCENT","FUNNEL_CONVERSATION","FUNNEL_MAPPING_VALUE","conversionTagComponent","transformData","field","params","options","_b","yField","chart","data","scale","_a","sync","xField","color","compareField","isTransposed","tooltip","maxSize","minSize","label","funnelStyle","state","showFacetTitle","facet","fields","transpose","padding","showTitle","eachView","view","index","rowIndex","columnIndex","coordinate","type","actions","formatterData","formatter","defaultFacetLabel","offset","position","style","textAlign","colorField","tooltipFields","concat","mapping","shape","conversionTag","once","views","forEach","viewIndex","getLineCoordinate","datum","datumIndex","initLineOption","ratio","start","end","text","offsetX","compareFunnel"],"sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/compare.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { isArray } from '@antv/util';\nimport { flow, deepAssign } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { Datum, Data } from '../../../types/common';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { FunnelOptions } from '../types';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE } from '../constant';\nimport { conversionTagComponent, transformData } from './common';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale({\n    [yField]: {\n      sync: true,\n    },\n  });\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const {\n    data,\n    xField,\n    yField,\n    color,\n    compareField,\n    isTransposed,\n    tooltip,\n    maxSize,\n    minSize,\n    label,\n    funnelStyle,\n    state,\n    showFacetTitle,\n  } = options;\n\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    showTitle: showFacetTitle,\n    eachView(view, facet) {\n      const index = isTransposed ? facet.rowIndex : facet.columnIndex;\n\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', index === 0 ? -1 : 1, -1]],\n        });\n      }\n\n      const formatterData = transformData(facet.data, data, {\n        yField,\n        maxSize,\n        minSize,\n      });\n\n      view.data(formatterData);\n\n      // 绘制图形\n      const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, compareField]);\n\n      const defaultFacetLabel = isTransposed\n        ? {\n            offset: index === 0 ? 10 : -23,\n            position: (index === 0 ? 'bottom' : 'top') as Types.IntervalGeometryLabelPosition,\n          }\n        : {\n            offset: 10,\n            position: 'left' as Types.IntervalGeometryLabelPosition,\n            style: {\n              textAlign: index === 0 ? 'end' : 'start',\n            },\n          };\n\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: FUNNEL_MAPPING_VALUE,\n          colorField: xField,\n          tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n          mapping: {\n            // todo 暂时不提供 金字塔 shape，后续需要自定义下形状\n            shape: 'funnel',\n            tooltip: formatter,\n            color,\n            style: funnelStyle,\n          },\n          label: label === false ? false : deepAssign({}, defaultFacetLabel, label),\n          state,\n        },\n      });\n    },\n  });\n\n  return params;\n}\n\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { conversionTag, isTransposed } = options;\n  // @ts-ignore\n  chart.once('beforepaint', () => {\n    chart.views.forEach((view, viewIndex) => {\n      const getLineCoordinate = (\n        datum: Datum,\n        datumIndex: number,\n        data: Data,\n        initLineOption: Record<string, any>\n      ): Types.LineOption => {\n        const ratio = viewIndex === 0 ? -1 : 1;\n        return deepAssign({}, initLineOption, {\n          start: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE]],\n          end: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE] + 0.05],\n          text: isTransposed\n            ? {\n                style: {\n                  textAlign: 'start',\n                },\n              }\n            : {\n                offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n                style: {\n                  textAlign: viewIndex === 0 ? 'end' : 'start',\n                },\n              },\n        });\n      };\n\n      conversionTagComponent(getLineCoordinate)(\n        deepAssign(\n          {},\n          {\n            chart: view,\n            options,\n          }\n        )\n      );\n    });\n  });\n  return params;\n}\n\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function compareFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, conversionTag)(params);\n}\n"]},"metadata":{},"sourceType":"module"}