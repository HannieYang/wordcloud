{"ast":null,"code":"import { isArray, isNil, isString } from '@antv/util'; // todo 这个到底目的是什么？\n\nvar toScaleString = function (scale, value) {\n  if (isString(value)) {\n    return value;\n  }\n\n  return scale.invert(scale.scale(value));\n};\n/**\n * 所有视觉通道属性的基类\n * @class Base\n */\n\n\nvar Attribute =\n/** @class */\nfunction () {\n  function Attribute(cfg) {\n    this.names = [];\n    this.scales = [];\n    this.linear = false;\n    this.values = [];\n\n    this.callback = function () {\n      return [];\n    }; // 解析配置\n\n\n    this._parseCfg(cfg);\n  }\n  /**\n   * 映射的值组成的数组\n   * @param params 对应 scale 顺序的值传入\n   */\n\n\n  Attribute.prototype.mapping = function () {\n    var _this = this;\n\n    var params = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      params[_i] = arguments[_i];\n    }\n\n    var values = params.map(function (param, idx) {\n      return _this._toOriginParam(param, _this.scales[idx]);\n    });\n    return this.callback.apply(this, values);\n  };\n  /**\n   * 如果进行线性映射，返回对应的映射值\n   * @param percent\n   */\n\n\n  Attribute.prototype.getLinearValue = function (percent) {\n    // 分段数量\n    var steps = this.values.length - 1;\n    var step = Math.floor(steps * percent);\n    var leftPercent = steps * percent - step; // todo 不懂这个逻辑\n\n    var start = this.values[step];\n    var end = step === steps ? start : this.values[step + 1]; // 线性方程\n\n    return start + (end - start) * leftPercent;\n  };\n  /**\n   * 根据度量获取属性名\n   */\n\n\n  Attribute.prototype.getNames = function () {\n    var scales = this.scales;\n    var names = this.names;\n    var length = Math.min(scales.length, names.length);\n    var rst = [];\n\n    for (var i = 0; i < length; i += 1) {\n      rst.push(names[i]);\n    }\n\n    return rst;\n  };\n  /**\n   * 获取所有的维度名\n   */\n\n\n  Attribute.prototype.getFields = function () {\n    return this.scales.map(function (scale) {\n      return scale.field;\n    });\n  };\n  /**\n   * 根据名称获取度量\n   * @param name\n   */\n\n\n  Attribute.prototype.getScale = function (name) {\n    return this.scales[this.names.indexOf(name)];\n  };\n  /**\n   * 默认的回调函数（用户没有自定义 callback，或者用户自定义 callback 返回空的时候，使用 values 映射）\n   * @param params\n   */\n\n\n  Attribute.prototype.defaultCallback = function () {\n    var _this = this;\n\n    var params = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      params[_i] = arguments[_i];\n    } // 没有 params 的情况，是指没有指定 fields，直接返回配置的 values 常量\n\n\n    if (params.length === 0) {\n      return this.values;\n    }\n\n    return params.map(function (param, idx) {\n      var scale = _this.scales[idx];\n      return scale.type === 'identity' ? scale.values[0] : _this._getAttributeValue(scale, param);\n    });\n  }; // 解析配置\n\n\n  Attribute.prototype._parseCfg = function (cfg) {\n    var _this = this;\n\n    var _a = cfg.type,\n        type = _a === void 0 ? 'base' : _a,\n        _b = cfg.names,\n        names = _b === void 0 ? [] : _b,\n        _c = cfg.scales,\n        scales = _c === void 0 ? [] : _c,\n        _d = cfg.values,\n        values = _d === void 0 ? [] : _d,\n        callback = cfg.callback;\n    this.type = type;\n    this.scales = scales;\n    this.values = values;\n    this.names = names; // 构造 callback 方法\n\n    this.callback = function () {\n      var params = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        params[_i] = arguments[_i];\n      }\n      /**\n       * 当用户设置的 callback 返回 null 时, 应该返回默认 callback 中的值\n       */\n\n\n      if (callback) {\n        // 使用用户返回的值处理\n        var ret = callback.apply(void 0, params);\n\n        if (!isNil(ret)) {\n          return [ret];\n        }\n      } // 没有 callback 或者用户 callback 返回值为空，则使用默认的逻辑处理\n\n\n      return _this.defaultCallback.apply(_this, params);\n    };\n  }; // 获取属性值，将值映射到视觉通道\n\n\n  Attribute.prototype._getAttributeValue = function (scale, value) {\n    // 如果是非线性的字段，直接从 values 中取值即可\n    if (scale.isCategory && !this.linear) {\n      // 离散 scale 变换成索引\n      var idx = scale.translate(value);\n      return this.values[idx % this.values.length];\n    } // 线性则使用线性值\n\n\n    var percent = scale.scale(value);\n    return this.getLinearValue(percent);\n  };\n  /**\n   * 通过 scale 拿到数据对应的原始的参数\n   * @param param\n   * @param scale\n   * @private\n   */\n\n\n  Attribute.prototype._toOriginParam = function (param, scale) {\n    // 是线性，直接返回\n    // 非线性，使用 scale 变换\n    return !scale.isLinear ? isArray(param) ? param.map(function (p) {\n      return toScaleString(scale, p);\n    }) : toScaleString(scale, param) : param;\n  };\n\n  return Attribute;\n}();\n\nexport default Attribute;","map":{"version":3,"mappings":"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","names":["isArray","isNil","isString","toScaleString","scale","value","invert","cfg","_parseCfg","Attribute","params","values","map","param","idx","_this","_toOriginParam","scales","callback","apply","percent","steps","length","step","Math","floor","leftPercent","start","end","names","min","rst","i","push","field","name","indexOf","type","_getAttributeValue","_a","_b","_c","_d","ret","defaultCallback","isCategory","linear","translate","getLinearValue","isLinear","p"],"sourceRoot":"","sources":["../../src/attributes/base.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}