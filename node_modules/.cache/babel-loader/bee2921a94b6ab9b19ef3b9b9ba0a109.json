{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { deepAssign, normalPadding } from '../../utils';\nvar PADDING_RIGHT = 10;\nvar PADDING_TOP = 5;\n/**\n * Action 中的 Button 按钮配置\n *\n * 可能的使用场景：brush filter\n */\n\nexport var BUTTON_ACTION_CONFIG = {\n  padding: [8, 10],\n  text: 'reset',\n  textStyle: {\n    default: {\n      x: 0,\n      y: 0,\n      fontSize: 12,\n      fill: '#333333',\n      cursor: 'pointer'\n    }\n  },\n  buttonStyle: {\n    default: {\n      fill: '#f7f7f7',\n      stroke: '#cccccc',\n      cursor: 'pointer'\n    },\n    active: {\n      fill: '#e6e6e6'\n    }\n  }\n};\n/**\n * @override 复写 G2 Button Action, 后续直接使用 GUI\n */\n\nvar ButtonAction =\n/** @class */\nfunction (_super) {\n  __extends(ButtonAction, _super);\n\n  function ButtonAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.buttonGroup = null;\n    _this.buttonCfg = __assign({\n      name: 'button'\n    }, BUTTON_ACTION_CONFIG);\n    return _this;\n  }\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n\n\n  ButtonAction.prototype.getButtonCfg = function () {\n    var view = this.context.view;\n    var buttonCfg = get(view, ['interactions', 'filter-action', 'cfg', 'buttonConfig']);\n    return deepAssign(this.buttonCfg, buttonCfg, this.cfg);\n  };\n  /**\n   * 绘制 Button 和 文本\n   */\n\n\n  ButtonAction.prototype.drawButton = function () {\n    var config = this.getButtonCfg();\n    var group = this.context.view.foregroundGroup.addGroup({\n      name: config.name\n    });\n    var textShape = this.drawText(group);\n    this.drawBackground(group, textShape.getBBox());\n    this.buttonGroup = group;\n  };\n  /**\n   * 绘制文本\n   */\n\n\n  ButtonAction.prototype.drawText = function (group) {\n    var _a;\n\n    var config = this.getButtonCfg(); // 添加文本\n\n    return group.addShape({\n      type: 'text',\n      name: 'button-text',\n      attrs: __assign({\n        text: config.text\n      }, (_a = config.textStyle) === null || _a === void 0 ? void 0 : _a.default)\n    });\n  };\n\n  ButtonAction.prototype.drawBackground = function (group, bbox) {\n    var _a;\n\n    var config = this.getButtonCfg();\n    var padding = normalPadding(config.padding); // 添加背景按钮\n\n    var buttonShape = group.addShape({\n      type: 'rect',\n      name: 'button-rect',\n      attrs: __assign({\n        x: bbox.x - padding[3],\n        y: bbox.y - padding[0],\n        width: bbox.width + padding[1] + padding[3],\n        height: bbox.height + padding[0] + padding[2]\n      }, (_a = config.buttonStyle) === null || _a === void 0 ? void 0 : _a.default)\n    });\n    buttonShape.toBack(); // 在后面\n    // active 效果内置\n\n    group.on('mouseenter', function () {\n      var _a;\n\n      buttonShape.attr((_a = config.buttonStyle) === null || _a === void 0 ? void 0 : _a.active);\n    });\n    group.on('mouseleave', function () {\n      var _a;\n\n      buttonShape.attr((_a = config.buttonStyle) === null || _a === void 0 ? void 0 : _a.default);\n    });\n    return buttonShape;\n  }; // 重置位置\n\n\n  ButtonAction.prototype.resetPosition = function () {\n    var view = this.context.view;\n    var coord = view.getCoordinate();\n    var point = coord.convert({\n      x: 1,\n      y: 1\n    }); // 后面直接改成左上角\n\n    var buttonGroup = this.buttonGroup;\n    var bbox = buttonGroup.getBBox();\n    var matrix = Util.transform(null, [['t', point.x - bbox.width - PADDING_RIGHT, point.y + bbox.height + PADDING_TOP]]);\n    buttonGroup.setMatrix(matrix);\n  };\n  /**\n   * 显示\n   */\n\n\n  ButtonAction.prototype.show = function () {\n    if (!this.buttonGroup) {\n      this.drawButton();\n    }\n\n    this.resetPosition();\n    this.buttonGroup.show();\n  };\n  /**\n   * 隐藏\n   */\n\n\n  ButtonAction.prototype.hide = function () {\n    if (this.buttonGroup) {\n      this.buttonGroup.hide();\n    }\n  };\n  /**\n   * 销毁\n   */\n\n\n  ButtonAction.prototype.destroy = function () {\n    var buttonGroup = this.buttonGroup;\n\n    if (buttonGroup) {\n      buttonGroup.remove();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  return ButtonAction;\n}(Action);\n\nexport { ButtonAction };","map":{"version":3,"mappings":"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","names":["Action","Util","get","deepAssign","normalPadding","PADDING_RIGHT","PADDING_TOP","BUTTON_ACTION_CONFIG","padding","text","textStyle","default","x","y","fontSize","fill","cursor","buttonStyle","stroke","active","__extends","_this","__assign","name","ButtonAction","context","view","buttonCfg","cfg","config","getButtonCfg","group","foregroundGroup","addGroup","textShape","drawText","drawBackground","getBBox","buttonGroup","addShape","type","attrs","_a","bbox","buttonShape","width","height","toBack","on","attr","coord","getCoordinate","point","convert","matrix","transform","setMatrix","drawButton","resetPosition","show","hide","remove","_super","destroy","call"],"sourceRoot":"","sources":["../../../src/interactions/actions/reset-button.ts"],"sourcesContent":["import { Action, IGroup, Util } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { BBox, ButtonCfg } from '../../types';\nimport { deepAssign, normalPadding } from '../../utils';\n\nconst PADDING_RIGHT = 10;\nconst PADDING_TOP = 5;\n\n/**\n * Action 中的 Button 按钮配置\n *\n * 可能的使用场景：brush filter\n */\nexport const BUTTON_ACTION_CONFIG: ButtonCfg = {\n  padding: [8, 10],\n  text: 'reset',\n  textStyle: {\n    default: {\n      x: 0,\n      y: 0,\n      fontSize: 12,\n      fill: '#333333',\n      cursor: 'pointer',\n    },\n  },\n  buttonStyle: {\n    default: {\n      fill: '#f7f7f7',\n      stroke: '#cccccc',\n      cursor: 'pointer',\n    },\n    active: {\n      fill: '#e6e6e6',\n    },\n  },\n};\n\n/**\n * @override 复写 G2 Button Action, 后续直接使用 GUI\n */\nclass ButtonAction extends Action {\n  private buttonGroup: IGroup = null;\n  private buttonCfg = {\n    name: 'button',\n    ...BUTTON_ACTION_CONFIG,\n  };\n\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n  private getButtonCfg(): ButtonCfg & { name: string } {\n    const { view } = this.context;\n    const buttonCfg: ButtonCfg = get(view, ['interactions', 'filter-action', 'cfg', 'buttonConfig']);\n\n    return deepAssign(this.buttonCfg, buttonCfg, this.cfg);\n  }\n\n  /**\n   * 绘制 Button 和 文本\n   */\n  private drawButton() {\n    const config = this.getButtonCfg();\n    const group = this.context.view.foregroundGroup.addGroup({\n      name: config.name,\n    });\n    const textShape = this.drawText(group);\n    this.drawBackground(group, textShape.getBBox());\n\n    this.buttonGroup = group;\n  }\n\n  /**\n   * 绘制文本\n   */\n  private drawText(group: IGroup) {\n    const config = this.getButtonCfg();\n    // 添加文本\n    return group.addShape({\n      type: 'text',\n      name: 'button-text',\n      attrs: {\n        text: config.text,\n        ...config.textStyle?.default,\n      },\n    });\n  }\n\n  private drawBackground(group: IGroup, bbox: BBox) {\n    const config = this.getButtonCfg();\n    const padding = normalPadding(config.padding);\n    // 添加背景按钮\n    const buttonShape = group.addShape({\n      type: 'rect',\n      name: 'button-rect',\n      attrs: {\n        x: bbox.x - padding[3],\n        y: bbox.y - padding[0],\n        width: bbox.width + padding[1] + padding[3],\n        height: bbox.height + padding[0] + padding[2],\n        ...config.buttonStyle?.default,\n      },\n    });\n    buttonShape.toBack(); // 在后面\n\n    // active 效果内置\n    group.on('mouseenter', () => {\n      buttonShape.attr(config.buttonStyle?.active);\n    });\n    group.on('mouseleave', () => {\n      buttonShape.attr(config.buttonStyle?.default);\n    });\n\n    return buttonShape;\n  }\n\n  // 重置位置\n  private resetPosition() {\n    const view = this.context.view;\n    const coord = view.getCoordinate();\n    const point = coord.convert({ x: 1, y: 1 }); // 后面直接改成左上角\n    const buttonGroup = this.buttonGroup;\n    const bbox = buttonGroup.getBBox();\n    const matrix = Util.transform(null, [\n      ['t', point.x - bbox.width - PADDING_RIGHT, point.y + bbox.height + PADDING_TOP],\n    ]);\n    buttonGroup.setMatrix(matrix);\n  }\n\n  /**\n   * 显示\n   */\n  public show() {\n    if (!this.buttonGroup) {\n      this.drawButton();\n    }\n    this.resetPosition();\n    this.buttonGroup.show();\n  }\n\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.buttonGroup) {\n      this.buttonGroup.hide();\n    }\n  }\n\n  /**\n   * 销毁\n   */\n  public destroy() {\n    const buttonGroup = this.buttonGroup;\n    if (buttonGroup) {\n      buttonGroup.remove();\n    }\n    super.destroy();\n  }\n}\n\nexport { ButtonAction };\n"]},"metadata":{},"sourceType":"module"}