{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { each, isArray } from '@antv/util';\nimport { tooltip, slider, interaction, animation, theme, scale, annotation, limitInPlot, scrollbar } from '../../adaptor/common';\nimport { findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { point, line, area } from '../../adaptor/geometries';\nimport { flow } from '../../utils';\nimport { adjustYMetaByZero } from '../../utils/data';\n/**\n * geometry 配置处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      color = options.color,\n      lineStyle = options.lineStyle,\n      lineShape = options.lineShape,\n      pointMapping = options.point,\n      areaMapping = options.area,\n      seriesField = options.seriesField;\n  var pointState = pointMapping === null || pointMapping === void 0 ? void 0 : pointMapping.state;\n  var areaState = areaMapping === null || areaMapping === void 0 ? void 0 : areaMapping.state;\n  chart.data(data); // line geometry 处理\n\n  var primary = deepAssign({}, params, {\n    options: {\n      shapeField: seriesField,\n      line: {\n        color: color,\n        style: lineStyle,\n        shape: lineShape\n      },\n      // 颜色保持一致，因为如果颜色不一致，会导致 tooltip 中元素重复。\n      // 如果存在，才设置，否则为空\n      point: pointMapping && __assign({\n        color: color,\n        shape: 'circle'\n      }, pointMapping),\n      // 面积配置\n      area: areaMapping && __assign({\n        color: color\n      }, areaMapping),\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined\n    }\n  });\n  var second = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n      state: pointState\n    }\n  });\n  var areaParams = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n      state: areaState\n    }\n  });\n  line(primary);\n  point(second);\n  area(areaParams);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nexport function meta(params) {\n  var _a, _b;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      data = options.data;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a), (_b = {}, _b[xField] = {\n    type: 'cat'\n  }, _b[yField] = adjustYMetaByZero(data, yField), _b)))(params);\n}\n/**\n * 坐标系配置. 支持 reflect 镜像处理\n * @param params\n */\n\nfunction coordinate(params) {\n  var chart = params.chart,\n      options = params.options;\n  var reflect = options.reflect;\n\n  if (reflect) {\n    var p = reflect;\n\n    if (!isArray(p)) {\n      p = [p];\n    }\n\n    var actions = p.map(function (d) {\n      return ['reflect', d];\n    });\n    chart.coordinate({\n      type: 'rect',\n      actions: actions\n    });\n  }\n\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nexport function axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      seriesField = options.seriesField;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField;\n  var lineGeometry = findGeometry(chart, 'line'); // label 为 false, 空 则不显示 label\n\n  if (!label) {\n    lineGeometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    lineGeometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: __assign({\n        layout: [{\n          type: 'limit-in-plot'\n        }, {\n          type: 'path-adjust-position'\n        }, {\n          type: 'point-adjust-position'\n        }, {\n          type: 'limit-in-plot',\n          cfg: {\n            action: 'hide'\n          }\n        }]\n      }, transformLabel(cfg))\n    });\n  }\n\n  return params;\n}\n/**\n * 统一处理 adjust\n * @param params\n */\n\n\nexport function adjust(params) {\n  var chart = params.chart,\n      options = params.options;\n  var isStack = options.isStack;\n\n  if (isStack) {\n    each(chart.geometries, function (g) {\n      g.adjust('stack');\n    });\n  }\n\n  return params;\n}\n/**\n * 折线图适配器\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, adjust, theme, coordinate, axis, legend, tooltip, label, slider, scrollbar, interaction, animation, annotation(), limitInPlot)(params);\n}","map":{"version":3,"mappings":"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","names":["each","isArray","tooltip","slider","interaction","animation","theme","scale","annotation","limitInPlot","scrollbar","findGeometry","transformLabel","deepAssign","point","line","area","flow","adjustYMetaByZero","geometry","params","options","color","lineStyle","lineShape","pointMapping","areaMapping","seriesField","pointState","state","areaState","chart","data","primary","shapeField","style","shape","label","undefined","second","areaParams","meta","yAxis","xField","yField","_a","xAxis","_b","type","coordinate","reflect","p","actions","map","d","axis","legend","lineGeometry","cfg","fields","callback","layout","action","adjust","isStack","geometries","g","adaptor"],"sourceRoot":"","sources":["../../../src/plots/line/adaptor.ts"],"sourcesContent":["import { Geometry } from '@antv/g2';\nimport { each, isArray } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport {\n  tooltip,\n  slider,\n  interaction,\n  animation,\n  theme,\n  scale,\n  annotation,\n  limitInPlot,\n  scrollbar,\n} from '../../adaptor/common';\nimport { findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { point, line, area } from '../../adaptor/geometries';\nimport { flow } from '../../utils';\nimport { adjustYMetaByZero } from '../../utils/data';\nimport { LineOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { data, color, lineStyle, lineShape, point: pointMapping, area: areaMapping, seriesField } = options;\n  const pointState = pointMapping?.state;\n  const areaState = areaMapping?.state;\n\n  chart.data(data);\n\n  // line geometry 处理\n  const primary = deepAssign({}, params, {\n    options: {\n      shapeField: seriesField,\n      line: {\n        color,\n        style: lineStyle,\n        shape: lineShape,\n      },\n      // 颜色保持一致，因为如果颜色不一致，会导致 tooltip 中元素重复。\n      // 如果存在，才设置，否则为空\n      point: pointMapping && {\n        color,\n        shape: 'circle',\n        ...pointMapping,\n      },\n      // 面积配置\n      area: areaMapping && {\n        color,\n        ...areaMapping,\n      },\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined,\n    },\n  });\n  const second = deepAssign({}, primary, { options: { tooltip: false, state: pointState } });\n  const areaParams = deepAssign({}, primary, { options: { tooltip: false, state: areaState } });\n\n  line(primary);\n  point(second);\n  area(areaParams);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<LineOptions>): Params<LineOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField, data } = options;\n\n  return flow(\n    scale(\n      {\n        [xField]: xAxis,\n        [yField]: yAxis,\n      },\n      {\n        [xField]: {\n          type: 'cat',\n        },\n        [yField]: adjustYMetaByZero(data, yField),\n      }\n    )\n  )(params);\n}\n\n/**\n * 坐标系配置. 支持 reflect 镜像处理\n * @param params\n */\nfunction coordinate(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { reflect } = options;\n  if (reflect) {\n    let p = reflect as any;\n    if (!isArray(p)) {\n      p = [p];\n    }\n    const actions = p.map((d) => ['reflect', d]);\n\n    chart.coordinate({ type: 'rect', actions });\n  }\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { legend, seriesField } = options;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const lineGeometry = findGeometry(chart, 'line');\n\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    lineGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    lineGeometry.label({\n      fields: [yField],\n      callback,\n      cfg: {\n        layout: [\n          { type: 'limit-in-plot' },\n          { type: 'path-adjust-position' },\n          { type: 'point-adjust-position' },\n          { type: 'limit-in-plot', cfg: { action: 'hide' } },\n        ],\n        ...transformLabel(cfg),\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * 统一处理 adjust\n * @param params\n */\nexport function adjust(params: Params<Pick<LineOptions, 'isStack'>>): Params<any> {\n  const { chart, options } = params;\n  const { isStack } = options;\n\n  if (isStack) {\n    each(chart.geometries, (g: Geometry) => {\n      g.adjust('stack');\n    });\n  }\n\n  return params;\n}\n\n/**\n * 折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<LineOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    geometry,\n    meta,\n    adjust,\n    theme,\n    coordinate,\n    axis,\n    legend,\n    tooltip,\n    label,\n    slider,\n    scrollbar,\n    interaction,\n    animation,\n    annotation(),\n    limitInPlot\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}