{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isUndefined, isNumber, get, reduce, isObject } from '@antv/util';\nimport { LEVEL, log } from '../../utils';\nimport { ABSOLUTE_FIELD, DIFF_FIELD, IS_TOTAL, Y_FIELD } from './constant';\n/**\n * @desc 数据处理函数，统一将数据处理成[start, end]\n * @param data\n * @param xField\n * @param yField\n * @param totalLabel\n */\n\nexport function processData(data, xField, yField, newYField, total) {\n  var _a;\n\n  var newData = [];\n  reduce(data, function (r, d) {\n    var _a; // 校验数据合法性\n\n\n    log(LEVEL.WARN, isNumber(d[yField]), d[yField] + \" is not a valid number\");\n    var value = isUndefined(d[yField]) ? null : d[yField];\n    newData.push(__assign(__assign({}, d), (_a = {}, _a[newYField] = [r, r + value], _a)));\n    return r + value;\n  }, 0); // 如果需要展示总和\n\n  if (newData.length && total) {\n    var sum = get(newData, [[data.length - 1], newYField, [1]]);\n    newData.push((_a = {}, _a[xField] = total.label, _a[yField] = sum, _a[newYField] = [0, sum], _a));\n  }\n\n  return newData;\n}\n/**\n * 处理为 瀑布图 数据\n */\n\nexport function transformData(data, xField, yField, total) {\n  var processed = processData(data, xField, yField, Y_FIELD, total);\n  return processed.map(function (d, dIdx) {\n    var _a;\n\n    if (!isObject(d)) {\n      return d;\n    }\n\n    return __assign(__assign({}, d), (_a = {}, _a[ABSOLUTE_FIELD] = d[Y_FIELD][1], _a[DIFF_FIELD] = d[Y_FIELD][1] - d[Y_FIELD][0], _a[IS_TOTAL] = dIdx === data.length, _a));\n  });\n}","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,YAA7D;AAEA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,aAA3B;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,OAA/C,QAA8D,YAA9D;AAEA;;;;;;;;AAOA,OAAM,SAAUC,WAAV,CACJC,IADI,EAEJC,MAFI,EAGJC,MAHI,EAIJC,SAJI,EAKJC,KALI,EAK8B;;;EAElC,IAAMC,OAAO,GAAG,EAAhB;EACAd,MAAM,CACJS,IADI,EAEJ,UAACM,CAAD,EAAIC,CAAJ,EAAK;WAAA,CACH;;;IACAb,GAAG,CAACD,KAAK,CAACe,IAAP,EAAanB,QAAQ,CAACkB,CAAC,CAACL,MAAD,CAAF,CAArB,EAAqCK,CAAC,CAACL,MAAD,CAAD,GAAS,wBAA9C,CAAH;IACA,IAAMO,KAAK,GAAGrB,WAAW,CAACmB,CAAC,CAACL,MAAD,CAAF,CAAX,GAAyB,IAAzB,GAAgCK,CAAC,CAACL,MAAD,CAA/C;IACAG,OAAO,CAACK,IAAR,CAAYC,sBAAMJ,CAAN,IAAOK,YAAGT,SAAH,IAAe,CAACG,CAAD,EAAIA,CAAC,GAAGG,KAAR,CAAf,EAA6BG,EAApC,EAAZ;IAEA,OAAON,CAAC,GAAGG,KAAX;EACD,CATG,EAUJ,CAVI,CAAN,CAHkC,CAelC;;EACA,IAAIJ,OAAO,CAACQ,MAAR,IAAkBT,KAAtB,EAA6B;IAC3B,IAAMU,GAAG,GAAGxB,GAAG,CAACe,OAAD,EAAU,CAAC,CAACL,IAAI,CAACa,MAAL,GAAc,CAAf,CAAD,EAAoBV,SAApB,EAA+B,CAAC,CAAD,CAA/B,CAAV,CAAf;IACAE,OAAO,CAACK,IAAR,EAAYE,SACVA,GAACX,MAAD,IAAUG,KAAK,CAACW,KADN,EAEVH,GAACV,MAAD,IAAUY,GAFA,EAGVF,GAACT,SAAD,IAAa,CAAC,CAAD,EAAIW,GAAJ,CAHH,IAAZ;EAKD;;EACD,OAAOT,OAAP;AACD;AAED;;;;AAGA,OAAM,SAAUW,aAAV,CACJhB,IADI,EAEJC,MAFI,EAGJC,MAHI,EAIJE,KAJI,EAI8B;EAElC,IAAMa,SAAS,GAAGlB,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,MAAf,EAAuBJ,OAAvB,EAAgCM,KAAhC,CAA7B;EACA,OAAOa,SAAS,CAACC,GAAV,CAAc,UAACX,CAAD,EAAIY,IAAJ,EAAQ;;;IAC3B,IAAI,CAAC3B,QAAQ,CAACe,CAAD,CAAb,EAAkB;MAChB,OAAOA,CAAP;IACD;;IACD,6BACKA,CADL,IACMK,YACHjB,cADG,IACcY,CAAC,CAACT,OAAD,CAAD,CAAW,CAAX,CADd,EAC2Bc,GAC9BhB,UAD8B,IACjBW,CAAC,CAACT,OAAD,CAAD,CAAW,CAAX,IAAgBS,CAAC,CAACT,OAAD,CAAD,CAAW,CAAX,CAF1B,EAEuCc,GAC1Cf,QAD0C,IAC/BsB,IAAI,KAAKnB,IAAI,CAACa,MAHtB,EAG4BD,EAJlC;EAMD,CAVM,CAAP;AAWD","names":["isUndefined","isNumber","get","reduce","isObject","LEVEL","log","ABSOLUTE_FIELD","DIFF_FIELD","IS_TOTAL","Y_FIELD","processData","data","xField","yField","newYField","total","newData","r","d","WARN","value","push","__assign","_a","length","sum","label","transformData","processed","map","dIdx"],"sourceRoot":"","sources":["../../../src/plots/waterfall/utils.ts"],"sourcesContent":["import { isUndefined, isNumber, get, reduce, isObject } from '@antv/util';\nimport { Options } from '../../types';\nimport { LEVEL, log } from '../../utils';\nimport { ABSOLUTE_FIELD, DIFF_FIELD, IS_TOTAL, Y_FIELD } from './constant';\n\n/**\n * @desc 数据处理函数，统一将数据处理成[start, end]\n * @param data\n * @param xField\n * @param yField\n * @param totalLabel\n */\nexport function processData(\n  data: Options['data'],\n  xField: string,\n  yField: string,\n  newYField: string,\n  total?: false | { label?: string }\n) {\n  const newData = [];\n  reduce(\n    data,\n    (r, d) => {\n      // 校验数据合法性\n      log(LEVEL.WARN, isNumber(d[yField]), `${d[yField]} is not a valid number`);\n      const value = isUndefined(d[yField]) ? null : d[yField];\n      newData.push({ ...d, [newYField]: [r, r + value] });\n\n      return r + value;\n    },\n    0\n  );\n  // 如果需要展示总和\n  if (newData.length && total) {\n    const sum = get(newData, [[data.length - 1], newYField, [1]]);\n    newData.push({\n      [xField]: total.label,\n      [yField]: sum,\n      [newYField]: [0, sum],\n    });\n  }\n  return newData;\n}\n\n/**\n * 处理为 瀑布图 数据\n */\nexport function transformData(\n  data: Options['data'],\n  xField: string,\n  yField: string,\n  total?: false | { label?: string }\n) {\n  const processed = processData(data, xField, yField, Y_FIELD, total);\n  return processed.map((d, dIdx) => {\n    if (!isObject(d)) {\n      return d;\n    }\n    return {\n      ...d,\n      [ABSOLUTE_FIELD]: d[Y_FIELD][1],\n      [DIFF_FIELD]: d[Y_FIELD][1] - d[Y_FIELD][0],\n      [IS_TOTAL]: dIdx === data.length,\n    };\n  });\n}\n"]},"metadata":{},"sourceType":"module"}