{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { interaction, animation, theme, tooltip } from '../../adaptor/common';\nimport { point, schema } from '../../adaptor/geometries';\nimport { flow, pick, deepAssign } from '../../utils';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { BOX_RANGE, BOX_SYNC_NAME, OUTLIERS_VIEW_ID } from './constant';\nimport { transformData } from './utils';\n/**\n * 字段\n * @param params\n */\n\nfunction field(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      groupField = options.groupField,\n      color = options.color,\n      tooltip = options.tooltip,\n      boxStyle = options.boxStyle;\n  chart.data(transformData(options.data, yField));\n  var yFieldName = isArray(yField) ? BOX_RANGE : yField;\n  var rawFields = yField ? isArray(yField) ? yField : [yField] : [];\n  var tooltipOptions = tooltip;\n\n  if (tooltipOptions !== false) {\n    tooltipOptions = deepAssign({}, {\n      fields: isArray(yField) ? yField : []\n    }, tooltipOptions);\n  }\n\n  var ext = schema(deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: yFieldName,\n      seriesField: groupField,\n      tooltip: tooltipOptions,\n      rawFields: rawFields,\n      // 只有异常点视图展示 label\n      label: false,\n      schema: {\n        shape: 'box',\n        color: color,\n        style: boxStyle\n      }\n    }\n  })).ext;\n\n  if (groupField) {\n    ext.geometry.adjust('dodge');\n  }\n\n  return params;\n}\n/**\n * 创建异常点 view\n */\n\n\nfunction outliersPoint(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      data = options.data,\n      outliersField = options.outliersField,\n      outliersStyle = options.outliersStyle,\n      padding = options.padding,\n      label = options.label;\n  if (!outliersField) return params;\n  var outliersView = chart.createView({\n    padding: padding,\n    id: OUTLIERS_VIEW_ID\n  });\n  var outliersViewData = data.reduce(function (ret, datum) {\n    var outliersData = datum[outliersField];\n    outliersData.forEach(function (d) {\n      var _a;\n\n      return ret.push(__assign(__assign({}, datum), (_a = {}, _a[outliersField] = d, _a)));\n    });\n    return ret;\n  }, []);\n  outliersView.data(outliersViewData);\n  point({\n    chart: outliersView,\n    options: {\n      xField: xField,\n      yField: outliersField,\n      point: {\n        shape: 'circle',\n        style: outliersStyle\n      },\n      label: label\n    }\n  });\n  outliersView.axis(false);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var meta = options.meta,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      outliersField = options.outliersField;\n  var yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n  var baseMeta = {}; // make yField and outliersField share y mate\n\n  if (outliersField) {\n    var syncName = BOX_SYNC_NAME;\n    baseMeta = (_a = {}, _a[outliersField] = {\n      sync: syncName,\n      nice: true\n    }, _a[yFieldName] = {\n      sync: syncName,\n      nice: true\n    }, _a);\n  }\n\n  var scales = deepAssign(baseMeta, meta, (_b = {}, _b[xField] = pick(xAxis, AXIS_META_CONFIG_KEYS), _b[yFieldName] = pick(yAxis, AXIS_META_CONFIG_KEYS), _b));\n  chart.scale(scales);\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  var yFieldName = Array.isArray(yField) ? BOX_RANGE : yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(BOX_RANGE, false);\n  } else {\n    chart.axis(yFieldName, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      groupField = options.groupField;\n\n  if (groupField) {\n    if (legend) {\n      chart.legend(groupField, legend);\n    } else {\n      // Grouped Box Chart default has legend, and it's position is `bottom`\n      chart.legend(groupField, {\n        position: 'bottom'\n      });\n    }\n  } else {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * 箱型图适配器\n * @param params\n */\n\nexport function adaptor(params) {\n  return flow(field, outliersPoint, meta, axis, legend, tooltip, interaction, animation, theme)(params);\n}","map":{"version":3,"mappings":"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","names":["isArray","interaction","animation","theme","tooltip","point","schema","flow","pick","deepAssign","AXIS_META_CONFIG_KEYS","BOX_RANGE","BOX_SYNC_NAME","OUTLIERS_VIEW_ID","transformData","field","params","options","yField","groupField","color","boxStyle","chart","data","yFieldName","rawFields","tooltipOptions","fields","xField","seriesField","label","shape","style","ext","geometry","adjust","outliersPoint","outliersField","outliersStyle","padding","outliersView","createView","id","outliersViewData","reduce","ret","datum","outliersData","forEach","d","push","__assign","_a","axis","meta","xAxis","yAxis","Array","baseMeta","syncName","sync","nice","scales","_b","scale","legend","position","adaptor"],"sourceRoot":"","sources":["../../../src/plots/box/adaptor.ts"],"sourcesContent":["import { isArray } from '@antv/util';\nimport { Types } from '@antv/g2';\nimport { Params } from '../../core/adaptor';\nimport { interaction, animation, theme, tooltip } from '../../adaptor/common';\nimport { point, schema } from '../../adaptor/geometries';\nimport { flow, pick, deepAssign } from '../../utils';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { BoxOptions } from './types';\nimport { BOX_RANGE, BOX_SYNC_NAME, OUTLIERS_VIEW_ID } from './constant';\nimport { transformData } from './utils';\n\n/**\n * 字段\n * @param params\n */\nfunction field(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xField, yField, groupField, color, tooltip, boxStyle } = options;\n\n  chart.data(transformData(options.data, yField));\n\n  const yFieldName = isArray(yField) ? BOX_RANGE : yField;\n  const rawFields = yField ? (isArray(yField) ? yField : [yField]) : [];\n\n  let tooltipOptions = tooltip;\n  if (tooltipOptions !== false) {\n    tooltipOptions = deepAssign({}, { fields: isArray(yField) ? yField : [] }, tooltipOptions);\n  }\n\n  const { ext } = schema(\n    deepAssign({}, params, {\n      options: {\n        xField,\n        yField: yFieldName,\n        seriesField: groupField,\n        tooltip: tooltipOptions,\n        rawFields,\n        // 只有异常点视图展示 label\n        label: false,\n        schema: {\n          shape: 'box',\n          color,\n          style: boxStyle,\n        },\n      },\n    })\n  );\n\n  if (groupField) {\n    ext.geometry.adjust('dodge');\n  }\n\n  return params;\n}\n\n/**\n * 创建异常点 view\n */\nfunction outliersPoint(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xField, data, outliersField, outliersStyle, padding, label } = options;\n\n  if (!outliersField) return params;\n\n  const outliersView = chart.createView({ padding, id: OUTLIERS_VIEW_ID });\n  const outliersViewData = data.reduce((ret, datum) => {\n    const outliersData = datum[outliersField];\n    outliersData.forEach((d) => ret.push({ ...datum, [outliersField]: d }));\n    return ret;\n  }, []) as Types.Datum[];\n\n  outliersView.data(outliersViewData);\n  point({\n    chart: outliersView,\n    options: {\n      xField,\n      yField: outliersField,\n      point: { shape: 'circle', style: outliersStyle },\n      label,\n    },\n  });\n\n  outliersView.axis(false);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { meta, xAxis, yAxis, xField, yField, outliersField } = options;\n  const yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n\n  let baseMeta = {};\n\n  // make yField and outliersField share y mate\n  if (outliersField) {\n    const syncName = BOX_SYNC_NAME;\n    baseMeta = {\n      [outliersField]: { sync: syncName, nice: true },\n      [yFieldName]: { sync: syncName, nice: true },\n    };\n  }\n\n  const scales = deepAssign(baseMeta, meta, {\n    [xField]: pick(xAxis, AXIS_META_CONFIG_KEYS),\n    [yFieldName]: pick(yAxis, AXIS_META_CONFIG_KEYS),\n  });\n\n  chart.scale(scales);\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n  const yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(BOX_RANGE, false);\n  } else {\n    chart.axis(yFieldName, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { legend, groupField } = options;\n\n  if (groupField) {\n    if (legend) {\n      chart.legend(groupField, legend);\n    } else {\n      // Grouped Box Chart default has legend, and it's position is `bottom`\n      chart.legend(groupField, { position: 'bottom' });\n    }\n  } else {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 箱型图适配器\n * @param params\n */\nexport function adaptor(params: Params<BoxOptions>) {\n  return flow(field, outliersPoint, meta, axis, legend, tooltip, interaction, animation, theme)(params);\n}\n"]},"metadata":{},"sourceType":"module"}