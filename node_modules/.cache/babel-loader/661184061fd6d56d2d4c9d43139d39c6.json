{"ast":null,"code":"import { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\n\nvar Mirror =\n/** @class */\nfunction (_super) {\n  __extends(Mirror, _super);\n\n  function Mirror() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Mirror.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'mirror',\n      showTitle: true,\n      title: _super.prototype.getDefaultTitleCfg.call(this),\n      transpose: false\n    });\n  };\n\n  Mirror.prototype.render = function () {\n    _super.prototype.render.call(this);\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n\n  Mirror.prototype.beforeEachView = function (view, facet) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  };\n\n  Mirror.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n\n  Mirror.prototype.generateFacets = function (data) {\n    var _this = this;\n\n    var _a = __read(this.cfg.fields, 1),\n        f = _a[0];\n\n    var rst = [];\n    var columnValuesLength = 1;\n    var rowValuesLength = 1;\n    var columnValues = [''];\n    var rowValues = [''];\n    var columnField;\n    var rowField;\n\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n\n      rowValuesLength = rowValues.length;\n    } // 获取每个维度对应的数据配置片段\n\n\n    columnValues.forEach(function (xVal, xIndex) {\n      rowValues.forEach(function (yVal, yIndex) {\n        var conditions = [{\n          field: columnField,\n          value: xVal,\n          values: columnValues\n        }, {\n          field: rowField,\n          value: yVal,\n          values: rowValues\n        }];\n        var facetData = filter(data, _this.getFacetDataFilter(conditions));\n        var facet = {\n          type: _this.cfg.type,\n          data: facetData,\n          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      });\n    });\n    return rst;\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n\n\n  Mirror.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return __assign(__assign({}, option), {\n        label: null,\n        title: null\n      });\n    }\n\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n\n\n  Mirror.prototype.getYAxisOption = function (y, axes, option, facet) {\n    // do nothing\n    return option;\n  };\n\n  Mirror.prototype.renderTitle = function () {\n    var _this = this;\n\n    each(this.facets, function (facet, facetIndex) {\n      var columnValue = facet.columnValue,\n          rowValue = facet.rowValue,\n          view = facet.view;\n      var formatter = get(_this.cfg.title, 'formatter');\n\n      if (_this.cfg.transpose) {\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n        view.annotation().text(config);\n      } else {\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.title);\n        view.annotation().text(config);\n      }\n    });\n  };\n\n  return Mirror;\n}(Facet);\n\nexport default Mirror;","map":{"version":3,"mappings":"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","names":["deepMix","each","filter","get","DIRECTION","getFactTitleConfig","Facet","__extends","Mirror","_super","getDefaultCfg","call","type","showTitle","title","getDefaultTitleCfg","transpose","render","cfg","renderTitle","view","facet","columnIndex","coordinate","reflect","rowIndex","processAxis","data","fields","f","rst","columnValuesLength","rowValuesLength","columnValues","rowValues","columnField","rowField","getFieldValues","slice","length","forEach","xVal","xIndex","yVal","yIndex","conditions","field","value","values","facetData","_this","getFacetDataFilter","region","getRegion","columnValue","rowValue","push","x","axes","option","label","y","facets","facetIndex","formatter","config","position","content","TOP","annotation","text","RIGHT"],"sourceRoot":"","sources":["../../src/facet/mirror.ts"],"sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, MirrorCfg, MirrorData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Mirror extends Facet<MirrorCfg, MirrorData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'mirror',\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n      transpose: false,\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected beforeEachView(view: View, facet: MirrorData) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  }\n\n  protected afterEachView(view: View, facet: MirrorData) {\n    this.processAxis(view, facet);\n  }\n\n  protected generateFacets(data: Datum[]): MirrorData[] {\n    const [f] = this.cfg.fields;\n\n    const rst = [];\n    let columnValuesLength = 1;\n    let rowValuesLength = 1;\n\n    let columnValues: string[] = [''];\n    let rowValues: string[] = [''];\n\n    let columnField;\n    let rowField;\n\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n      rowValuesLength = rowValues.length;\n    }\n\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach((xVal, xIndex) => {\n      rowValues.forEach((yVal, yIndex) => {\n        const conditions = [\n          { field: columnField, value: xVal, values: columnValues },\n          { field: rowField, value: yVal, values: rowValues },\n        ];\n\n        const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n        const facet: MirrorData = {\n          type: this.cfg.type,\n          data: facetData,\n          region: this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField,\n          rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      });\n    });\n\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // do nothing\n    return option;\n  }\n\n  private renderTitle() {\n    each(this.facets, (facet: MirrorData, facetIndex: number) => {\n      const { columnValue, rowValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      if (this.cfg.transpose) {\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      } else {\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}