{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { binHistogram } from '../../utils/transform/histogram';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\n\nvar Histogram =\n/** @class */\nfunction (_super) {\n  __extends(Histogram, _super);\n\n  function Histogram() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'histogram';\n    return _this;\n  }\n  /**\n   * 获取 默认配置项\n   * 供外部使用\n   */\n\n\n  Histogram.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n\n  Histogram.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var _a = this.options,\n        binField = _a.binField,\n        binNumber = _a.binNumber,\n        binWidth = _a.binWidth,\n        stackField = _a.stackField;\n    this.chart.changeData(binHistogram(data, binField, binWidth, binNumber, stackField));\n  };\n  /**\n   * 获取直方图的适配器\n   */\n\n\n  Histogram.prototype.getDefaultOptions = function () {\n    return Histogram.getDefaultOptions();\n  };\n  /**\n   * 获取直方图的适配器\n   */\n\n\n  Histogram.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Histogram;\n}(Plot);\n\nexport { Histogram };","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;AAEA,SAASC,YAAT,QAA6B,iCAA7B;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAIA;AAAA;AAAA;EAA+BC;;EAA/B;IAAA;IASE;;;IACOC,aAAe,WAAf;;EAsBR;EA/BC;;;;;;EAIOC,8BAAP;IACE,OAAOH,eAAP;EACD,CAFM;;EAOAG,iCAAP,UAAkBC,IAAlB,EAAgD;IAC9C,KAAKC,YAAL,CAAkB;MAAED,IAAI;IAAN,CAAlB;IAEM,SAAgD,KAAKE,OAArD;IAAA,IAAEC,QAAQ,cAAV;IAAA,IAAYC,SAAS,eAArB;IAAA,IAAuBC,QAAQ,cAA/B;IAAA,IAAiCC,UAAU,gBAA3C;IACN,KAAKC,KAAL,CAAWC,UAAX,CAAsBd,YAAY,CAACM,IAAD,EAAOG,QAAP,EAAiBE,QAAjB,EAA2BD,SAA3B,EAAsCE,UAAtC,CAAlC;EACD,CALM;EAOP;;;;;EAGUP,wCAAV;IACE,OAAOA,SAAS,CAACU,iBAAV,EAAP;EACD,CAFS;EAIV;;;;;EAGUV,uCAAV;IACE,OAAOJ,OAAP;EACD,CAFS;;EAGZ;AAAC,CAhCD,CAA+BF,IAA/B","names":["Plot","binHistogram","adaptor","DEFAULT_OPTIONS","__extends","_this","Histogram","data","updateOption","options","binField","binNumber","binWidth","stackField","chart","changeData","getDefaultOptions"],"sourceRoot":"","sources":["../../../src/plots/histogram/index.ts"],"sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { binHistogram } from '../../utils/transform/histogram';\nimport { HistogramOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\n\nexport type { HistogramOptions };\n\nexport class Histogram extends Plot<HistogramOptions> {\n  /**\n   * 获取 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<HistogramOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'histogram';\n\n  public changeData(data: HistogramOptions['data']) {\n    this.updateOption({ data });\n\n    const { binField, binNumber, binWidth, stackField } = this.options;\n    this.chart.changeData(binHistogram(data, binField, binWidth, binNumber, stackField));\n  }\n\n  /**\n   * 获取直方图的适配器\n   */\n  protected getDefaultOptions() {\n    return Histogram.getDefaultOptions();\n  }\n\n  /**\n   * 获取直方图的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<HistogramOptions> {\n    return adaptor;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}