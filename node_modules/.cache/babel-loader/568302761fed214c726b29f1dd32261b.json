{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each, get, map, isArray } from '@antv/util';\nimport { registerAction, registerInteraction, Action } from '@antv/g2';\nimport { getAllElements, getViews, getSiblingViews } from '../../../utils';\nimport { clearHighlight, getElementValue } from './utils';\n/**\n * 存在多个 view 时，view 之间的联动交互\n *\n * 提供四个反馈 action，均接受参数：linkField 关联字段，dim 维度\n * 1. showTooltip\n * 2. active\n * 3. highlight\n * 4. selected\n *\n * 附加，两个结束反馈 action：\n * 1. hidetooltip\n * 2. reset 清除激活和高亮状态\n */\n\nvar Association =\n/** @class */\nfunction (_super) {\n  __extends(Association, _super);\n\n  function Association() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 获取关联的 elements\n   *\n   * - 如果 dim 参数存在，根据 dim 获取相应的 field。与 linkField 不匹配则 return\n   * - 否则 dim 参数不存在，且 linkField 存在，则作为关联字段\n   * - 否则若 linkField 不存在，则获取第一个分类字段\n   * @returns EventItem[]\n   */\n\n\n  Association.prototype.getAssociationItems = function (views, params) {\n    var _a;\n\n    var event = this.context.event;\n\n    var _b = params || {},\n        linkField = _b.linkField,\n        dim = _b.dim;\n\n    var items = [];\n\n    if ((_a = event.data) === null || _a === void 0 ? void 0 : _a.data) {\n      var data_1 = event.data.data;\n      each(views, function (v) {\n        var _a, _b;\n\n        var field = linkField;\n\n        if (dim === 'x') {\n          field = v.getXScale().field;\n        } else if (dim === 'y') {\n          field = (_a = v.getYScales().find(function (s) {\n            return s.field === field;\n          })) === null || _a === void 0 ? void 0 : _a.field;\n        } else if (!field) {\n          field = (_b = v.getGroupScales()[0]) === null || _b === void 0 ? void 0 : _b.field;\n        }\n\n        if (!field) {\n          return;\n        }\n\n        var elements = map(getAllElements(v), function (ele) {\n          var active = false;\n          var inactive = false;\n          var dataValue = isArray(data_1) ? get(data_1[0], field) : get(data_1, field);\n\n          if (getElementValue(ele, field) === dataValue) {\n            active = true;\n          } else {\n            inactive = true;\n          }\n\n          return {\n            element: ele,\n            view: v,\n            active: active,\n            inactive: inactive\n          };\n        });\n        items.push.apply(items, elements);\n      });\n    }\n\n    return items;\n  };\n  /**\n   * 所有同一层级的 tooltip 显示\n   */\n\n\n  Association.prototype.showTooltip = function (params) {\n    var siblings = getSiblingViews(this.context.view);\n    var elements = this.getAssociationItems(siblings, params);\n    each(elements, function (ele) {\n      if (ele.active) {\n        var box = ele.element.shape.getCanvasBBox();\n        ele.view.showTooltip({\n          x: box.minX + box.width / 2,\n          y: box.minY + box.height / 2\n        });\n      }\n    });\n  };\n  /**\n   * 隐藏同一层级的 tooltip\n   */\n\n\n  Association.prototype.hideTooltip = function () {\n    var siblings = getSiblingViews(this.context.view);\n    each(siblings, function (sibling) {\n      sibling.hideTooltip();\n    });\n  };\n  /**\n   * 设置 active 状态\n   */\n\n\n  Association.prototype.active = function (params) {\n    var views = getViews(this.context.view);\n    var items = this.getAssociationItems(views, params);\n    each(items, function (item) {\n      var active = item.active,\n          element = item.element;\n\n      if (active) {\n        element.setState('active', true);\n      }\n    });\n  };\n  /**\n   * 设置 selected 状态\n   */\n\n\n  Association.prototype.selected = function (params) {\n    var views = getViews(this.context.view);\n    var items = this.getAssociationItems(views, params);\n    each(items, function (item) {\n      var active = item.active,\n          element = item.element;\n\n      if (active) {\n        element.setState('selected', true);\n      }\n    });\n  };\n  /**\n   * 进行高亮 => 设置 inactive 状态\n   */\n\n\n  Association.prototype.highlight = function (params) {\n    var views = getViews(this.context.view);\n    var items = this.getAssociationItems(views, params);\n    each(items, function (item) {\n      var inactive = item.inactive,\n          element = item.element;\n\n      if (inactive) {\n        element.setState('inactive', true);\n      }\n    });\n  };\n\n  Association.prototype.reset = function () {\n    var views = getViews(this.context.view);\n    each(views, function (v) {\n      clearHighlight(v);\n    });\n  };\n\n  return Association;\n}(Action);\n\nregisterAction('association', Association);\n/**\n * 相邻 view 的 active 联动（相同维值的 tooltip 联动）\n */\n\nregisterInteraction('association-active', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'association:active'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'association:reset'\n  }]\n});\n/**\n * 相邻 view 的 active 联动（相同维值的 tooltip 联动）\n */\n\nregisterInteraction('association-selected', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'association:selected'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'association:reset'\n  }]\n});\n/**\n * 相邻 view 的 highlight 联动, 突出当前 element\n */\n\nregisterInteraction('association-highlight', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'association:highlight'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'association:reset'\n  }]\n});\n/**\n * 相邻 view 的 tooltip 联动，根据 groupField 进行关联（相同维值的 tooltip 联动）\n */\n\nregisterInteraction('association-tooltip', {\n  start: [{\n    trigger: 'element:mousemove',\n    action: 'association:showTooltip'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'association:hideTooltip'\n  }]\n});","map":{"version":3,"mappings":"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","names":["each","get","map","isArray","registerAction","registerInteraction","Action","getAllElements","getViews","getSiblingViews","clearHighlight","getElementValue","__extends","Association","views","params","context","event","linkField","dim","items","data","_a","v","field","getXScale","getYScales","find","s","getGroupScales","_b","elements","ele","active","inactive","dataValue","data_1","element","view","push","apply","siblings","getAssociationItems","box","shape","getCanvasBBox","showTooltip","x","minX","width","y","minY","height","sibling","hideTooltip","item","setState","start","trigger","action","end"],"sourceRoot":"","sources":["../../../../src/plots/mix/interactions/association.ts"],"sourcesContent":["import { each, get, map, isArray } from '@antv/util';\nimport { registerAction, registerInteraction, View, Element, Action } from '@antv/g2';\nimport { getAllElements, getViews, getSiblingViews } from '../../../utils';\nimport { clearHighlight, getElementValue } from './utils';\n\ntype EventItem = { element: Element; view: View; active: boolean; inactive: boolean };\ntype ActionParams = { linkField?: string; dim?: 'x' | 'y' };\n/**\n * 存在多个 view 时，view 之间的联动交互\n *\n * 提供四个反馈 action，均接受参数：linkField 关联字段，dim 维度\n * 1. showTooltip\n * 2. active\n * 3. highlight\n * 4. selected\n *\n * 附加，两个结束反馈 action：\n * 1. hidetooltip\n * 2. reset 清除激活和高亮状态\n */\nclass Association extends Action {\n  /**\n   * 获取关联的 elements\n   *\n   * - 如果 dim 参数存在，根据 dim 获取相应的 field。与 linkField 不匹配则 return\n   * - 否则 dim 参数不存在，且 linkField 存在，则作为关联字段\n   * - 否则若 linkField 不存在，则获取第一个分类字段\n   * @returns EventItem[]\n   */\n  private getAssociationItems(views: View[], params?: ActionParams): EventItem[] {\n    const { event } = this.context;\n    const { linkField, dim } = params || {};\n\n    const items = [];\n\n    if (event.data?.data) {\n      const { data } = event.data;\n      each(views, (v: View) => {\n        let field = linkField;\n        if (dim === 'x') {\n          field = v.getXScale().field;\n        } else if (dim === 'y') {\n          field = v.getYScales().find((s) => s.field === field)?.field;\n        } else if (!field) {\n          field = v.getGroupScales()[0]?.field;\n        }\n        if (!field) {\n          return;\n        }\n        const elements = map(getAllElements(v), (ele) => {\n          let active = false;\n          let inactive = false;\n          const dataValue = isArray(data) ? get(data[0], field) : get(data, field);\n          if (getElementValue(ele, field) === dataValue) {\n            active = true;\n          } else {\n            inactive = true;\n          }\n          return { element: ele, view: v, active, inactive };\n        });\n        items.push(...elements);\n      });\n    }\n\n    return items;\n  }\n\n  /**\n   * 所有同一层级的 tooltip 显示\n   */\n  public showTooltip(params?: ActionParams) {\n    const siblings = getSiblingViews(this.context.view);\n    const elements = this.getAssociationItems(siblings, params);\n\n    each(elements, (ele) => {\n      if (ele.active) {\n        const box = ele.element.shape.getCanvasBBox();\n        ele.view.showTooltip({ x: box.minX + box.width / 2, y: box.minY + box.height / 2 });\n      }\n    });\n  }\n\n  /**\n   * 隐藏同一层级的 tooltip\n   */\n  public hideTooltip() {\n    const siblings = getSiblingViews(this.context.view);\n    each(siblings, (sibling) => {\n      sibling.hideTooltip();\n    });\n  }\n\n  /**\n   * 设置 active 状态\n   */\n  public active(params?: ActionParams) {\n    const views = getViews(this.context.view);\n    const items = this.getAssociationItems(views, params);\n\n    each(items, (item: EventItem) => {\n      const { active, element } = item;\n      if (active) {\n        element.setState('active', true);\n      }\n    });\n  }\n\n  /**\n   * 设置 selected 状态\n   */\n  public selected(params?: ActionParams) {\n    const views = getViews(this.context.view);\n    const items = this.getAssociationItems(views, params);\n\n    each(items, (item: EventItem) => {\n      const { active, element } = item;\n      if (active) {\n        element.setState('selected', true);\n      }\n    });\n  }\n\n  /**\n   * 进行高亮 => 设置 inactive 状态\n   */\n  public highlight(params?: ActionParams) {\n    const views = getViews(this.context.view);\n    const items = this.getAssociationItems(views, params);\n\n    each(items, (item: EventItem) => {\n      const { inactive, element } = item;\n      if (inactive) {\n        element.setState('inactive', true);\n      }\n    });\n  }\n\n  public reset() {\n    const views = getViews(this.context.view);\n    each(views, (v) => {\n      clearHighlight(v);\n    });\n  }\n}\n\nregisterAction('association', Association);\n\n/**\n * 相邻 view 的 active 联动（相同维值的 tooltip 联动）\n */\nregisterInteraction('association-active', {\n  start: [{ trigger: 'element:mouseenter', action: 'association:active' }],\n  end: [{ trigger: 'element:mouseleave', action: 'association:reset' }],\n});\n\n/**\n * 相邻 view 的 active 联动（相同维值的 tooltip 联动）\n */\nregisterInteraction('association-selected', {\n  start: [{ trigger: 'element:mouseenter', action: 'association:selected' }],\n  end: [{ trigger: 'element:mouseleave', action: 'association:reset' }],\n});\n\n/**\n * 相邻 view 的 highlight 联动, 突出当前 element\n */\nregisterInteraction('association-highlight', {\n  start: [{ trigger: 'element:mouseenter', action: 'association:highlight' }],\n  end: [{ trigger: 'element:mouseleave', action: 'association:reset' }],\n});\n\n/**\n * 相邻 view 的 tooltip 联动，根据 groupField 进行关联（相同维值的 tooltip 联动）\n */\nregisterInteraction('association-tooltip', {\n  start: [{ trigger: 'element:mousemove', action: 'association:showTooltip' }],\n  end: [{ trigger: 'element:mouseleave', action: 'association:hideTooltip' }],\n});\n"]},"metadata":{},"sourceType":"module"}