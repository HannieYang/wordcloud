{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { deepAssign } from '../../utils';\nimport { geometry } from './base';\n/**\n * point 辅助点的配置处理\n * @param params\n */\n\nexport function point(params) {\n  var options = params.options;\n  var point = options.point,\n      xField = options.xField,\n      yField = options.yField,\n      seriesField = options.seriesField,\n      sizeField = options.sizeField,\n      shapeField = options.shapeField,\n      tooltip = options.tooltip,\n      useDeferredLabel = options.useDeferredLabel;\n\n  var _a = getTooltipMapping(tooltip, [xField, yField, seriesField, sizeField, shapeField]),\n      fields = _a.fields,\n      formatter = _a.formatter;\n\n  return point ? geometry(deepAssign({}, params, {\n    options: {\n      type: 'point',\n      colorField: seriesField,\n      shapeField: shapeField,\n      tooltipFields: fields,\n      mapping: __assign({\n        tooltip: formatter\n      }, point),\n      args: {\n        useDeferredLabel: useDeferredLabel\n      }\n    }\n  })) : params;\n}","map":{"version":3,"mappings":";AACA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAA0D,QAA1D;AAiBA;;;;;AAIA,OAAM,SAAUC,KAAV,CAAgDC,MAAhD,EAAiE;EAC7D,WAAO,GAAKA,MAAM,QAAlB;EACA,SAAK,GAAoFC,OAAO,MAAhG;EAAA,IAAOC,MAAM,GAA4ED,OAAO,OAAhG;EAAA,IAAeE,MAAM,GAAoEF,OAAO,OAAhG;EAAA,IAAuBG,WAAW,GAAuDH,OAAO,YAAhG;EAAA,IAAoCI,SAAS,GAA4CJ,OAAO,UAAhG;EAAA,IAA+CK,UAAU,GAAgCL,OAAO,WAAhG;EAAA,IAA2DM,OAAO,GAAuBN,OAAO,QAAhG;EAAA,IAAoEO,gBAAgB,GAAKP,OAAO,iBAAhG;;EAEF,SAAwBL,iBAAiB,CAACW,OAAD,EAAU,CAACL,MAAD,EAASC,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,EAAyCC,UAAzC,CAAV,CAAzC;EAAA,IAAEG,MAAM,YAAR;EAAA,IAAUC,SAAS,eAAnB;;EAEN,OAAOX,KAAK,GACRD,QAAQ,CACND,UAAU,CAAC,EAAD,EAAKG,MAAL,EAAa;IACrBC,OAAO,EAAE;MACPU,IAAI,EAAE,OADC;MAEPC,UAAU,EAAER,WAFL;MAGPE,UAAU,EAAEA,UAHL;MAIPO,aAAa,EAAEJ,MAJR;MAKPK,OAAO;QACLP,OAAO,EAAEG;MADJ,GAEFX,KAFE,CALA;MASPgB,IAAI,EAAE;QAAEP,gBAAgB;MAAlB;IATC;EADY,CAAb,CADJ,CADA,GAgBRR,MAhBJ;AAiBD","names":["getTooltipMapping","deepAssign","geometry","point","params","options","xField","yField","seriesField","sizeField","shapeField","tooltip","useDeferredLabel","fields","formatter","type","colorField","tooltipFields","mapping","args"],"sourceRoot":"","sources":["../../../src/adaptor/geometries/point.ts"],"sourcesContent":["import { Params } from '../../core/adaptor';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { deepAssign } from '../../utils';\nimport { geometry, MappingOptions, GeometryOptions } from './base';\n\nexport interface PointGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField?: string;\n  /** y 轴字段 */\n  readonly yField?: string;\n  /** 分组字段 */\n  readonly seriesField?: string;\n  /** size 映射字段 */\n  readonly sizeField?: string;\n  /** shape 的映射字段 */\n  readonly shapeField?: string;\n  /** point 图形映射规则 */\n  readonly point?: MappingOptions;\n}\n\n/**\n * point 辅助点的配置处理\n * @param params\n */\nexport function point<O extends PointGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const { point, xField, yField, seriesField, sizeField, shapeField, tooltip, useDeferredLabel } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, seriesField, sizeField, shapeField]);\n\n  return point\n    ? geometry(\n        deepAssign({}, params, {\n          options: {\n            type: 'point',\n            colorField: seriesField,\n            shapeField: shapeField,\n            tooltipFields: fields,\n            mapping: {\n              tooltip: formatter,\n              ...point,\n            },\n            args: { useDeferredLabel },\n          },\n        })\n      )\n    : params;\n}\n"]},"metadata":{},"sourceType":"module"}