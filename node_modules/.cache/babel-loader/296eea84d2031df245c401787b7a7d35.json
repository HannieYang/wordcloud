{"ast":null,"code":"import { each, isNil, getEllipsisText, pick } from '@antv/util';\nimport { ellipsisString, strLen } from './text';\nvar ELLIPSIS_CODE = '\\u2026';\nvar ELLIPSIS_CODE_LENGTH = 2; // 省略号的长度\n\n/** 大数据量阈值 */\n\nvar OPTIMIZE_THRESHOLD = 400;\n/**\n * 针对大数据量做优化的 getMaxLabelWidth，做法不是直接去比较每一个 label 的最大宽度\n * 而是先通过比较每个 label 每个的字符串的长度，这里区分了下中英文字符\n * 最终是去字符串最“长”的那个 label 的宽度。\n * @param labels\n */\n\nfunction getMaxLabelWidthOptimized(labels) {\n  var texts = labels.map(function (label) {\n    var text = label.attr('text');\n    return isNil(text) ? '' : \"\" + text;\n  });\n  var maxLen = 0;\n  var maxIdx = 0;\n\n  for (var i = 0; i < texts.length; i += 1) {\n    var len = 0;\n\n    for (var j = 0; j <= texts[i].length; j += 1) {\n      var code = texts[i].charCodeAt(j);\n\n      if (code >= 19968 && code <= 40869) {\n        len += 2;\n      } else {\n        len += 1;\n      }\n    }\n\n    if (len > maxLen) {\n      maxLen = len;\n      maxIdx = i;\n    }\n  }\n\n  return labels[maxIdx].getBBox().width;\n}\n/** 获取最长的 label */\n\n\nexport function getMaxLabelWidth(labels) {\n  if (labels.length > OPTIMIZE_THRESHOLD) {\n    return getMaxLabelWidthOptimized(labels);\n  }\n\n  var max = 0;\n  each(labels, function (label) {\n    var bbox = label.getBBox();\n    var width = bbox.width;\n\n    if (max < width) {\n      max = width;\n    }\n  });\n  return max;\n}\n/** 获取label长度 */\n\nexport function getLabelLength(isVertical, label) {\n  var bbox = label.getCanvasBBox();\n  return isVertical ? bbox.width : bbox.height;\n}\n/* label长度是否超过约束值 */\n\nexport function testLabel(label, limitLength) {\n  return label.getBBox().width < limitLength;\n}\n/** 处理 text shape 的自动省略 */\n\nexport function ellipsisLabel(isVertical, label, limitLength, position) {\n  var _a;\n\n  if (position === void 0) {\n    position = 'tail';\n  }\n\n  var text = (_a = label.attr('text')) !== null && _a !== void 0 ? _a : ''; // 避免出现null、undefined\n\n  if (position === 'tail') {\n    // component 里的缩略处理做得很糟糕，文字长度测算完全不准确\n    // 这里暂时只对 tail 做处理\n    var font = pick(label.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n    var ellipsisText = getEllipsisText(text, limitLength, font, '…');\n\n    if (text !== ellipsisText) {\n      label.attr('text', ellipsisText);\n      label.set('tip', text);\n      return true;\n    }\n\n    label.set('tip', null);\n    return false;\n  }\n\n  var labelLength = getLabelLength(isVertical, label);\n  var codeLength = strLen(text);\n  var ellipsisFlag = false;\n\n  if (limitLength < labelLength) {\n    var reserveLength = Math.floor(limitLength / labelLength * codeLength) - ELLIPSIS_CODE_LENGTH; // 计算出来的应该保存的长度\n\n    var newText = void 0;\n\n    if (reserveLength >= 0) {\n      newText = ellipsisString(text, reserveLength, position);\n    } else {\n      newText = ELLIPSIS_CODE;\n    }\n\n    if (newText) {\n      label.attr('text', newText);\n      ellipsisFlag = true;\n    }\n  }\n\n  if (ellipsisFlag) {\n    label.set('tip', text);\n  } else {\n    label.set('tip', null);\n  }\n\n  return ellipsisFlag;\n}","map":{"version":3,"mappings":"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","names":["each","isNil","getEllipsisText","pick","ellipsisString","strLen","ELLIPSIS_CODE","ELLIPSIS_CODE_LENGTH","OPTIMIZE_THRESHOLD","getMaxLabelWidthOptimized","labels","texts","map","label","text","attr","maxLen","maxIdx","i","length","len","j","code","charCodeAt","getBBox","width","getMaxLabelWidth","max","bbox","getLabelLength","isVertical","getCanvasBBox","height","testLabel","limitLength","ellipsisLabel","position","_a","font","ellipsisText","set","labelLength","codeLength","ellipsisFlag","reserveLength","Math","floor","newText"],"sourceRoot":"","sources":["../../src/util/label.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}