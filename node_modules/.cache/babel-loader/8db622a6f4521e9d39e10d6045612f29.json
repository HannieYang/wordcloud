{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { each, isString, mix, isFunction } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport Theme from '../util/theme';\n\nvar GridBase =\n/** @class */\nfunction (_super) {\n  __extends(GridBase, _super);\n\n  function GridBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GridBase.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      name: 'grid',\n      line: {},\n      alternateColor: null,\n      capture: false,\n      items: [],\n      closed: false,\n      defaultCfg: {\n        line: {\n          type: 'line',\n          style: {\n            lineWidth: 1,\n            stroke: Theme.lineColor\n          }\n        }\n      }\n    });\n  };\n  /**\n   * 获取栅格线的类型\n   * @return {string} 栅格线类型\n   */\n\n\n  GridBase.prototype.getLineType = function () {\n    var line = this.get('line') || this.get('defaultCfg').line;\n    return line.type;\n  };\n\n  GridBase.prototype.renderInner = function (group) {\n    this.drawGrid(group);\n  };\n\n  GridBase.prototype.getAlternatePath = function (prePoints, points) {\n    var regionPath = this.getGridPath(prePoints);\n    var reversePoints = points.slice(0).reverse();\n    var nextPath = this.getGridPath(reversePoints, true);\n    var closed = this.get('closed');\n\n    if (closed) {\n      regionPath = regionPath.concat(nextPath);\n    } else {\n      nextPath[0][0] = 'L'; // 更新第一个节点\n\n      regionPath = regionPath.concat(nextPath);\n      regionPath.push(['Z']);\n    }\n\n    return regionPath;\n  }; // 获取路径的配置项\n\n\n  GridBase.prototype.getPathStyle = function () {\n    return this.get('line').style;\n  }; // 绘制栅格\n\n\n  GridBase.prototype.drawGrid = function (group) {\n    var _this = this;\n\n    var line = this.get('line');\n    var items = this.get('items');\n    var alternateColor = this.get('alternateColor');\n    var preItem = null;\n    each(items, function (item, index) {\n      var id = item.id || index; // 绘制栅格线\n\n      if (line) {\n        var style = _this.getPathStyle();\n\n        style = isFunction(style) ? style(item, index, items) : style;\n\n        var lineId = _this.getElementId(\"line-\" + id);\n\n        var gridPath = _this.getGridPath(item.points);\n\n        _this.addShape(group, {\n          type: 'path',\n          name: 'grid-line',\n          id: lineId,\n          attrs: mix({\n            path: gridPath\n          }, style)\n        });\n      } // 如果存在 alternateColor 则绘制矩形\n      // 从第二个栅格线开始绘制\n\n\n      if (alternateColor && index > 0) {\n        var regionId = _this.getElementId(\"region-\" + id);\n\n        var isEven = index % 2 === 0;\n\n        if (isString(alternateColor)) {\n          // 如果颜色是单值，则是仅绘制偶数时的区域\n          if (isEven) {\n            _this.drawAlternateRegion(regionId, group, preItem.points, item.points, alternateColor);\n          }\n        } else {\n          var color = isEven ? alternateColor[1] : alternateColor[0];\n\n          _this.drawAlternateRegion(regionId, group, preItem.points, item.points, color);\n        }\n      }\n\n      preItem = item;\n    });\n  }; // 绘制栅格线间的间隔\n\n\n  GridBase.prototype.drawAlternateRegion = function (id, group, prePoints, points, color) {\n    var regionPath = this.getAlternatePath(prePoints, points);\n    this.addShape(group, {\n      type: 'path',\n      id: id,\n      name: 'grid-region',\n      attrs: {\n        path: regionPath,\n        fill: color\n      }\n    });\n  };\n\n  return GridBase;\n}(GroupComponent);\n\nexport default GridBase;","map":{"version":3,"mappings":"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","names":["each","isString","mix","isFunction","GroupComponent","Theme","__extends","GridBase","cfg","_super","getDefaultCfg","call","name","line","alternateColor","capture","items","closed","defaultCfg","type","style","lineWidth","stroke","lineColor","get","group","drawGrid","prePoints","points","regionPath","getGridPath","reversePoints","slice","reverse","nextPath","concat","push","preItem","item","index","id","_this","getPathStyle","lineId","getElementId","gridPath","addShape","attrs","path","regionId","isEven","drawAlternateRegion","color","getAlternatePath","fill"],"sourceRoot":"","sources":["../../src/grid/base.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}