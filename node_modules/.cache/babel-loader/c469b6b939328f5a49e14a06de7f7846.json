{"ast":null,"code":"import * as _ from '@antv/util';\nimport { DEFAULT_Y } from '../constant';\n\nvar Adjust =\n/** @class */\nfunction () {\n  function Adjust(cfg) {\n    var xField = cfg.xField,\n        yField = cfg.yField,\n        _a = cfg.adjustNames,\n        adjustNames = _a === void 0 ? ['x', 'y'] : _a,\n        dimValuesMap = cfg.dimValuesMap;\n    this.adjustNames = adjustNames;\n    this.xField = xField;\n    this.yField = yField;\n    this.dimValuesMap = dimValuesMap;\n  }\n  /**\n   * 查看维度是否是 adjust 字段\n   * @param dim\n   */\n\n\n  Adjust.prototype.isAdjust = function (dim) {\n    return this.adjustNames.indexOf(dim) >= 0;\n  };\n\n  Adjust.prototype.getAdjustRange = function (dim, dimValue, values) {\n    var yField = this.yField;\n    var index = values.indexOf(dimValue);\n    var length = values.length;\n    var pre;\n    var next; // 没有 y 字段，但是需要根据 y 调整\n\n    if (!yField && this.isAdjust('y')) {\n      pre = 0;\n      next = 1;\n    } else if (length > 1) {\n      // 如果以其开头，则取之，否则取他前面一个\n      pre = values[index === 0 ? 0 : index - 1]; // 如果以其结尾，则取之，否则取他后面一个\n\n      next = values[index === length - 1 ? length - 1 : index + 1];\n\n      if (index !== 0) {\n        pre += (dimValue - pre) / 2;\n      } else {\n        pre -= (next - dimValue) / 2;\n      }\n\n      if (index !== length - 1) {\n        next -= (next - dimValue) / 2;\n      } else {\n        next += (dimValue - values[length - 2]) / 2;\n      }\n    } else {\n      pre = dimValue === 0 ? 0 : dimValue - 0.5;\n      next = dimValue === 0 ? 1 : dimValue + 0.5;\n    }\n\n    return {\n      pre: pre,\n      next: next\n    };\n  };\n\n  Adjust.prototype.adjustData = function (groupedDataArray, mergedData) {\n    var _this = this; // 所有调整维度的值数组\n\n\n    var dimValuesMap = this.getDimValues(mergedData); // 按照每一个分组来进行调整\n\n    _.each(groupedDataArray, function (dataArray, index) {\n      // 遍历所有数据集合\n      // 每个分组中，分别按照不同的 dim 进行调整\n      _.each(dimValuesMap, function (values, dim) {\n        // 根据不同的度量分别调整位置\n        _this.adjustDim(dim, values, dataArray, index);\n      });\n    });\n  };\n  /**\n   * 对数据进行分组adjustData\n   * @param data 数据\n   * @param dim 分组的字段\n   * @return 分组结果\n   */\n\n\n  Adjust.prototype.groupData = function (data, dim) {\n    // 补齐数据空数据为默认值\n    _.each(data, function (record) {\n      if (record[dim] === undefined) {\n        record[dim] = DEFAULT_Y;\n      }\n    }); // 按照 dim 维度分组\n\n\n    return _.groupBy(data, dim);\n  };\n  /** @override */\n\n\n  Adjust.prototype.adjustDim = function (dim, values, data, index) {};\n  /**\n   * 获取可调整度量对应的值\n   * @param mergedData 数据\n   * @return 值的映射\n   */\n\n\n  Adjust.prototype.getDimValues = function (mergedData) {\n    var _a = this,\n        xField = _a.xField,\n        yField = _a.yField;\n\n    var dimValuesMap = _.assign({}, this.dimValuesMap); // 所有的维度\n\n\n    var dims = [];\n\n    if (xField && this.isAdjust('x')) {\n      dims.push(xField);\n    }\n\n    if (yField && this.isAdjust('y')) {\n      dims.push(yField);\n    }\n\n    dims.forEach(function (dim) {\n      if (dimValuesMap && dimValuesMap[dim]) {\n        return;\n      } // 在每个维度上，所有的值\n\n\n      dimValuesMap[dim] = _.valuesOfKey(mergedData, dim).sort(function (v1, v2) {\n        return v1 - v2;\n      });\n    }); // 只有一维的情况下，同时调整 y，赋予默认值\n\n    if (!yField && this.isAdjust('y')) {\n      var dim = 'y';\n      dimValuesMap[dim] = [DEFAULT_Y, 1]; // 默认分布在 y 轴的 0 与 1 之间\n    }\n\n    return dimValuesMap;\n  };\n\n  return Adjust;\n}();\n\nexport default Adjust;","map":{"version":3,"mappings":"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","names":["_","DEFAULT_Y","cfg","yField","_a","adjustNames","dimValuesMap","xField","Adjust","dim","indexOf","dimValue","values","index","length","pre","next","isAdjust","groupedDataArray","mergedData","getDimValues","each","dataArray","_this","adjustDim","data","record","undefined","groupBy","assign","dims","push","forEach","valuesOfKey","sort","v1","v2"],"sourceRoot":"","sources":["../../src/adjusts/adjust.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}