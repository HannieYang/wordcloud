{"ast":null,"code":"import { createDotPattern } from './dot';\nimport { createLinePattern } from './line';\nimport { createSquarePattern } from './square';\n/**\n * 获取内置的 CanvasPattern 方法\n * @param options\n * @returns\n */\n\nexport function getCanvasPattern(options) {\n  var type = options.type,\n      cfg = options.cfg;\n  var pattern;\n\n  switch (type) {\n    case 'dot':\n      pattern = createDotPattern(cfg);\n      break;\n\n    case 'line':\n      pattern = createLinePattern(cfg);\n      break;\n\n    case 'square':\n      pattern = createSquarePattern(cfg);\n      break;\n\n    default:\n      break;\n  }\n\n  return pattern;\n}","map":{"version":3,"mappings":"AACA,SAASA,gBAAT,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,mBAAT,QAAoC,UAApC;AAgBA;;;;;;AAKA,OAAM,SAAUC,gBAAV,CAA2BC,OAA3B,EAAiD;EAC7C,QAAI,GAAUA,OAAO,KAArB;EAAA,IAAMC,GAAG,GAAKD,OAAO,IAArB;EAER,IAAIE,OAAJ;;EAEA,QAAQC,IAAR;IACE,KAAK,KAAL;MACED,OAAO,GAAGN,gBAAgB,CAACK,GAAD,CAA1B;MACA;;IACF,KAAK,MAAL;MACEC,OAAO,GAAGL,iBAAiB,CAACI,GAAD,CAA3B;MACA;;IACF,KAAK,QAAL;MACEC,OAAO,GAAGJ,mBAAmB,CAACG,GAAD,CAA7B;MACA;;IACF;MACE;EAXJ;;EAcA,OAAOC,OAAP;AACD","names":["createDotPattern","createLinePattern","createSquarePattern","getCanvasPattern","options","cfg","pattern","type"],"sourceRoot":"","sources":["../../../src/utils/pattern/index.ts"],"sourcesContent":["import { DotPatternCfg, LinePatternCfg, SquarePatternCfg } from '../../types/pattern';\nimport { createDotPattern } from './dot';\nimport { createLinePattern } from './line';\nimport { createSquarePattern } from './square';\n\nexport type PatternOption =\n  | {\n      type: 'dot';\n      cfg?: DotPatternCfg;\n    }\n  | {\n      type: 'line';\n      cfg?: LinePatternCfg;\n    }\n  | {\n      type: 'square';\n      cfg?: SquarePatternCfg;\n    };\n\n/**\n * 获取内置的 CanvasPattern 方法\n * @param options\n * @returns\n */\nexport function getCanvasPattern(options: PatternOption): CanvasPattern | undefined {\n  const { type, cfg } = options;\n\n  let pattern;\n\n  switch (type) {\n    case 'dot':\n      pattern = createDotPattern(cfg);\n      break;\n    case 'line':\n      pattern = createLinePattern(cfg);\n      break;\n    case 'square':\n      pattern = createSquarePattern(cfg);\n      break;\n    default:\n      break;\n  }\n\n  return pattern;\n}\n"]},"metadata":{},"sourceType":"module"}