{"ast":null,"code":"import { __values } from \"tslib\";\nimport { groupToMap } from '@antv/util';\n/** @ignore */\n\nexport function group(data, fields, appendConditions) {\n  var e_1, _a;\n\n  if (appendConditions === void 0) {\n    appendConditions = {};\n  }\n\n  if (!fields) {\n    return [data];\n  }\n\n  var groups = groupToMap(data, fields);\n  var array = [];\n\n  if (fields.length === 1 && appendConditions[fields[0]]) {\n    var values = appendConditions[fields[0]];\n\n    try {\n      for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\n        var value = values_1_1.value;\n        var arr = groups[\"_\".concat(value)];\n\n        if (arr) {\n          // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null\n          array.push(arr);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  } else {\n    for (var k in groups) {\n      if (groups.hasOwnProperty(k)) {\n        var eachGroup = groups[k];\n        array.push(eachGroup);\n      }\n    }\n  }\n\n  return array;\n}","map":{"version":3,"mappings":";AAAA,SAASA,UAAT,QAA2B,YAA3B;AAGA;;AACA,OAAM,SAAUC,KAAV,CAAgBC,IAAhB,EAA4BC,MAA5B,EAA8CC,gBAA9C,EAA0F;;;EAA5C;IAAAA;EAA4C;;EAC9F,IAAI,CAACD,MAAL,EAAa;IACX,OAAO,CAACD,IAAD,CAAP;EACD;;EACD,IAAMG,MAAM,GAAGL,UAAU,CAACE,IAAD,EAAOC,MAAP,CAAzB;EACA,IAAMG,KAAK,GAAG,EAAd;;EACA,IAAIH,MAAM,CAACI,MAAP,KAAkB,CAAlB,IAAuBH,gBAAgB,CAACD,MAAM,CAAC,CAAD,CAAP,CAA3C,EAAwD;IACtD,IAAMK,MAAM,GAAGJ,gBAAgB,CAACD,MAAM,CAAC,CAAD,CAAP,CAA/B;;;MACA,KAAoB,iCAAMM,4BAA1B,EAA0B,gBAA1B,EAA0BA,4BAA1B,EAA4B;QAAvB,IAAMC,KAAK,mBAAX;QACH,IAAMC,GAAG,GAAGN,MAAM,CAAC,WAAIK,KAAJ,CAAD,CAAlB;;QACA,IAAIC,GAAJ,EAAS;UACP;UACAL,KAAK,CAACM,IAAN,CAAWD,GAAX;QACD;MACF;;;;;;;;;;;;EACF,CATD,MASO;IACL,KAAK,IAAME,CAAX,IAAgBR,MAAhB,EAAwB;MACtB,IAAIA,MAAM,CAACS,cAAP,CAAsBD,CAAtB,CAAJ,EAA8B;QAC5B,IAAME,SAAS,GAAGV,MAAM,CAACQ,CAAD,CAAxB;QACAP,KAAK,CAACM,IAAN,CAAWG,SAAX;MACD;IACF;EACF;;EAED,OAAOT,KAAP;AACD","names":["groupToMap","group","data","fields","appendConditions","groups","array","length","values","values_1_1","value","arr","push","k","hasOwnProperty","eachGroup"],"sourceRoot":"","sources":["../../../src/geometry/util/group-data.ts"],"sourcesContent":["import { groupToMap } from '@antv/util';\nimport { Data } from '../../interface';\n\n/** @ignore */\nexport function group(data: Data, fields: string[], appendConditions: Record<string, any[]> = {}) {\n  if (!fields) {\n    return [data];\n  }\n  const groups = groupToMap(data, fields);\n  const array = [];\n  if (fields.length === 1 && appendConditions[fields[0]]) {\n    const values = appendConditions[fields[0]];\n    for (const value of values) {\n      const arr = groups[`_${value}`];\n      if (arr) {\n        // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null\n        array.push(arr);\n      }\n    }\n  } else {\n    for (const k in groups) {\n      if (groups.hasOwnProperty(k)) {\n        const eachGroup = groups[k];\n        array.push(eachGroup);\n      }\n    }\n  }\n\n  return array;\n}\n"]},"metadata":{},"sourceType":"module"}