{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, Util } from '@antv/g2';\nregisterShape('point', 'word-cloud', {\n  draw: function (cfg, group) {\n    var cx = cfg.x;\n    var cy = cfg.y;\n    var shape = group.addShape('text', {\n      attrs: __assign(__assign({}, getTextAttrs(cfg)), {\n        x: cx,\n        y: cy\n      })\n    });\n    var rotate = cfg.data.rotate;\n\n    if (typeof rotate === 'number') {\n      Util.rotate(shape, rotate * Math.PI / 180);\n    }\n\n    return shape;\n  }\n});\n\nfunction getTextAttrs(cfg) {\n  return {\n    fontSize: cfg.data.size,\n    text: cfg.data.text,\n    textAlign: 'center',\n    fontFamily: cfg.data.font,\n    fontWeight: cfg.data.weight,\n    fill: cfg.color || cfg.defaultStyle.stroke,\n    textBaseline: 'alphabetic'\n  };\n}","map":{"version":3,"mappings":";AAAA,SAASA,aAAT,EAAwBC,IAAxB,QAA+D,UAA/D;AAKAD,aAAa,CAAC,OAAD,EAAU,YAAV,EAAwB;EACnCE,IAAI,EAAJ,UAAKC,GAAL,EAAkBC,KAAlB,EAA+B;IAC7B,IAAMC,EAAE,GAAGF,GAAG,CAACG,CAAf;IACA,IAAMC,EAAE,GAAGJ,GAAG,CAACK,CAAf;IAEA,IAAMC,KAAK,GAAGL,KAAK,CAACM,QAAN,CAAe,MAAf,EAAuB;MACnCC,KAAK,wBACAC,YAAY,CAACT,GAAD,CADZ,GACiB;QACpBG,CAAC,EAAED,EADiB;QAEpBG,CAAC,EAAED;MAFiB,CADjB;IAD8B,CAAvB,CAAd;IAOA,IAAMM,MAAM,GAAGV,GAAG,CAACW,IAAJ,CAASD,MAAxB;;IACA,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;MAC9BZ,IAAI,CAACY,MAAL,CAAYJ,KAAZ,EAAoBI,MAAM,GAAGE,IAAI,CAACC,EAAf,GAAqB,GAAxC;IACD;;IAED,OAAOP,KAAP;EACD;AAlBkC,CAAxB,CAAb;;AAqBA,SAASG,YAAT,CAAsBT,GAAtB,EAAiC;EAC/B,OAAO;IACLc,QAAQ,EAAEd,GAAG,CAACW,IAAJ,CAASI,IADd;IAELC,IAAI,EAAEhB,GAAG,CAACW,IAAJ,CAASK,IAFV;IAGLC,SAAS,EAAE,QAHN;IAILC,UAAU,EAAElB,GAAG,CAACW,IAAJ,CAASQ,IAJhB;IAKLC,UAAU,EAAEpB,GAAG,CAACW,IAAJ,CAASU,MALhB;IAMLC,IAAI,EAAEtB,GAAG,CAACuB,KAAJ,IAAavB,GAAG,CAACwB,YAAJ,CAAiBC,MAN/B;IAOLC,YAAY,EAAE;EAPT,CAAP;AASD","names":["registerShape","Util","draw","cfg","group","cx","x","cy","y","shape","addShape","attrs","getTextAttrs","rotate","data","Math","PI","fontSize","size","text","textAlign","fontFamily","font","fontWeight","weight","fill","color","defaultStyle","stroke","textBaseline"],"sourceRoot":"","sources":["../../../../src/plots/word-cloud/shapes/word-cloud.ts"],"sourcesContent":["import { registerShape, Util, Types, IGroup, ShapeAttrs } from '@antv/g2';\nimport { Tag } from '../types';\n\ntype Config = Types.ShapeInfo & { data: Tag };\n\nregisterShape('point', 'word-cloud', {\n  draw(cfg: Config, group: IGroup) {\n    const cx = cfg.x as number;\n    const cy = cfg.y as number;\n\n    const shape = group.addShape('text', {\n      attrs: {\n        ...getTextAttrs(cfg),\n        x: cx,\n        y: cy,\n      },\n    });\n    const rotate = cfg.data.rotate;\n    if (typeof rotate === 'number') {\n      Util.rotate(shape, (rotate * Math.PI) / 180);\n    }\n\n    return shape;\n  },\n});\n\nfunction getTextAttrs(cfg: Config): ShapeAttrs {\n  return {\n    fontSize: cfg.data.size,\n    text: cfg.data.text,\n    textAlign: 'center',\n    fontFamily: cfg.data.font,\n    fontWeight: cfg.data.weight,\n    fill: cfg.color || cfg.defaultStyle.stroke,\n    textBaseline: 'alphabetic',\n  };\n}\n"]},"metadata":{},"sourceType":"module"}