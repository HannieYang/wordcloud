{"ast":null,"code":"import { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 矩阵分面\n */\n\nvar Rect =\n/** @class */\nfunction (_super) {\n  __extends(Rect, _super);\n\n  function Rect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Rect.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n\n  Rect.prototype.beforeEachView = function (view, facet) {// do nothing\n  };\n\n  Rect.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'rect',\n      columnTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this)),\n      rowTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this))\n    });\n  };\n\n  Rect.prototype.render = function () {\n    _super.prototype.render.call(this);\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  /**\n   * 生成矩阵分面的分面数据\n   * @param data\n   */\n\n\n  Rect.prototype.generateFacets = function (data) {\n    var _this = this;\n\n    var _a = __read(this.cfg.fields, 2),\n        columnField = _a[0],\n        rowField = _a[1];\n\n    var rst = [];\n    var columnValuesLength = 1;\n    var rowValuesLength = 1;\n    var columnValues = [''];\n    var rowValues = [''];\n\n    if (columnField) {\n      columnValues = this.getFieldValues(data, columnField);\n      columnValuesLength = columnValues.length;\n    }\n\n    if (rowField) {\n      rowValues = this.getFieldValues(data, rowField);\n      rowValuesLength = rowValues.length;\n    } // 获取每个维度对应的数据配置片段\n\n\n    columnValues.forEach(function (xVal, xIndex) {\n      rowValues.forEach(function (yVal, yIndex) {\n        var conditions = [{\n          field: columnField,\n          value: xVal,\n          values: columnValues\n        }, {\n          field: rowField,\n          value: yVal,\n          values: rowValues\n        }];\n        var facetData = filter(data, _this.getFacetDataFilter(conditions));\n        var facet = {\n          type: _this.cfg.type,\n          data: facetData,\n          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      });\n    });\n    return rst;\n  };\n\n  Rect.prototype.renderTitle = function () {\n    var _this = this;\n\n    each(this.facets, function (facet, facetIndex) {\n      var columnIndex = facet.columnIndex,\n          rowIndex = facet.rowIndex,\n          columnValuesLength = facet.columnValuesLength,\n          columnValue = facet.columnValue,\n          rowValue = facet.rowValue,\n          view = facet.view; // top\n\n      if (rowIndex === 0) {\n        var formatter = get(_this.cfg.columnTitle, 'formatter');\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.columnTitle);\n        view.annotation().text(config);\n      } // right\n\n\n      if (columnIndex === columnValuesLength - 1) {\n        var formatter = get(_this.cfg.rowTitle, 'formatter');\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.rowTitle);\n        view.annotation().text(config);\n      }\n    });\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n\n\n  Rect.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 非最后一行\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    } else if (facet.columnIndex !== Math.floor((facet.columnValuesLength - 1) / 2)) {\n      // 不是中间列\n      return __assign(__assign({}, option), {\n        title: null\n      });\n    }\n\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n\n\n  Rect.prototype.getYAxisOption = function (y, axes, option, facet) {\n    if (facet.columnIndex !== 0) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    } else if (facet.rowIndex !== Math.floor((facet.rowValuesLength - 1) / 2)) {\n      return __assign(__assign({}, option), {\n        title: null\n      });\n    }\n\n    return option;\n  };\n\n  return Rect;\n}(Facet);\n\nexport default Rect;","map":{"version":3,"mappings":"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","names":["deepMix","each","filter","get","DIRECTION","getFactTitleConfig","Facet","__extends","Rect","view","facet","processAxis","_super","getDefaultCfg","call","type","columnTitle","getDefaultTitleCfg","rowTitle","render","cfg","showTitle","renderTitle","data","fields","columnField","rowField","rst","columnValuesLength","rowValuesLength","columnValues","rowValues","getFieldValues","length","forEach","xVal","xIndex","yVal","yIndex","conditions","field","value","values","facetData","_this","getFacetDataFilter","region","getRegion","columnValue","rowValue","columnIndex","rowIndex","push","facets","facetIndex","formatter","config","position","content","TOP","annotation","text","RIGHT","x","axes","option","title","label","Math","floor","y"],"sourceRoot":"","sources":["../../src/facet/rect.ts"],"sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, RectCfg, RectData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 矩阵分面\n */\nexport default class Rect extends Facet<RectCfg, RectData> {\n  protected afterEachView(view: View, facet: RectData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: RectData) {\n    // do nothing\n  }\n\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'rect',\n      columnTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n      rowTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  /**\n   * 生成矩阵分面的分面数据\n   * @param data\n   */\n  protected generateFacets(data: Datum[]): RectData[] {\n    const [columnField, rowField] = this.cfg.fields;\n\n    const rst = [];\n    let columnValuesLength = 1;\n    let rowValuesLength = 1;\n\n    let columnValues: string[] = [''];\n    let rowValues: string[] = [''];\n\n    if (columnField) {\n      columnValues = this.getFieldValues(data, columnField);\n      columnValuesLength = columnValues.length;\n    }\n    if (rowField) {\n      rowValues = this.getFieldValues(data, rowField);\n      rowValuesLength = rowValues.length;\n    }\n\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach((xVal, xIndex) => {\n      rowValues.forEach((yVal, yIndex) => {\n        const conditions = [\n          { field: columnField, value: xVal, values: columnValues },\n          { field: rowField, value: yVal, values: rowValues },\n        ];\n        const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n        const facet: RectData = {\n          type: this.cfg.type,\n          data: facetData,\n          region: this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField,\n          rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      });\n    });\n\n    return rst;\n  }\n\n  private renderTitle(): void {\n    each(this.facets, (facet: RectData, facetIndex: number) => {\n      const { columnIndex, rowIndex, columnValuesLength, columnValue, rowValue, view } = facet;\n\n      // top\n      if (rowIndex === 0) {\n        const formatter = get(this.cfg.columnTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.columnTitle\n        );\n\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        const formatter = get(this.cfg.rowTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.rowTitle\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: RectData): object {\n    // 非最后一行\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    } else if (facet.columnIndex !== Math.floor((facet.columnValuesLength - 1) / 2)) {\n      // 不是中间列\n      return {\n        ...option,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: RectData): object {\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    } else if (facet.rowIndex !== Math.floor((facet.rowValuesLength - 1) / 2)) {\n      return {\n        ...option,\n        title: null,\n      };\n    }\n    return option;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}