{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get, each } from '@antv/util';\nimport { intersect } from '../../../util/collision-detect';\nimport { getLabelBackgroundInfo } from '../util';\nimport { createWorker } from '../util/createWorker';\nimport { code as layoutCode } from './worker/hide-overlap';\n\nvar layout = function (items) {\n  var boxes = items.slice();\n\n  for (var i = 0; i < boxes.length; i++) {\n    var box1 = boxes[i];\n\n    if (box1.visible) {\n      for (var j = i + 1; j < boxes.length; j++) {\n        var box2 = boxes[j];\n\n        if (box1 !== box2 && box2.visible) {\n          if (intersect(box1, box2)) {\n            box2.visible = false;\n          }\n        }\n      }\n    }\n  }\n\n  return boxes;\n};\n\nvar cache = new Map();\nvar worker = createWorker(layoutCode);\n/**\n * label 防遮挡布局：在不改变 label 位置的情况下对相互重叠的 label 进行隐藏（非移除）\n * 不同于 'overlap' 类型的布局，该布局不会对 label 的位置进行偏移调整。\n * @param labels 参与布局调整的 label 数组集合\n */\n\nexport function hideOverlap(labelItems, labels, shapes, region) {\n  // todo 添加 label rank\n  return new Promise(function (resolve) {\n    var boxes = labels.map(function (d, idx) {\n      return __assign(__assign({}, getLabelBackgroundInfo(d, labelItems[idx], get(labelItems[idx], 'background.padding'))), {\n        visible: true\n      });\n    });\n    var memoKey = JSON.stringify(boxes);\n\n    var cb = function (items) {\n      cache.set(memoKey, items);\n      each(items, function (_a, idx) {\n        var visible = _a.visible;\n        var labelShape = labels[idx];\n\n        if (visible) {\n          labelShape === null || labelShape === void 0 ? void 0 : labelShape.show();\n        } else {\n          labelShape === null || labelShape === void 0 ? void 0 : labelShape.hide();\n        }\n      });\n      return resolve(items);\n    };\n\n    if (cache.get(memoKey)) {\n      cb(cache.get(memoKey));\n    } else if (worker) {\n      // Do layout in worker.\n      try {\n        worker.postMessage(JSON.stringify({\n          type: 'hide-overlap',\n          items: boxes\n        }));\n\n        worker.onmessage = function (e) {\n          return cb(Array.isArray(e.data) ? e.data : []);\n        };\n\n        worker.onmessageerror = function (e) {\n          console.warn('[AntV G2] Web worker is not available'); // Normal layout in main thread.\n\n          cb(layout(boxes));\n        };\n      } catch (e) {\n        console.error(e);\n        cb(layout(boxes));\n      }\n    } else {\n      // Normal layout in main thread.\n      cb(layout(boxes));\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["get","each","intersect","getLabelBackgroundInfo","createWorker","code","layoutCode","layout","items","boxes","slice","i","length","box1","visible","j","box2","cache","Map","worker","hideOverlap","labelItems","labels","shapes","region","Promise","resolve","map","d","idx","memoKey","JSON","stringify","cb","set","_a","labelShape","show","hide","postMessage","type","onmessage","e","Array","isArray","data","onmessageerror","console","warn","error"],"sourceRoot":"","sources":["../../../../src/geometry/label/layout/hide-overlap.ts"],"sourcesContent":["import { get, each } from '@antv/util';\nimport { BBox, IGroup, IShape } from '../../../dependents';\nimport { intersect } from '../../../util/collision-detect';\nimport { LabelItem } from '../interface';\nimport { getLabelBackgroundInfo } from '../util';\nimport { createWorker } from '../util/createWorker';\nimport { code as layoutCode } from './worker/hide-overlap';\n\ntype Item = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  rotation?: number;\n  visible?: boolean;\n};\n\nconst layout = (items: Item[]): Item[] => {\n  const boxes = items.slice();\n  for (let i = 0; i < boxes.length; i++) {\n    const box1 = boxes[i];\n    if (box1.visible) {\n      for (let j = i + 1; j < boxes.length; j++) {\n        const box2 = boxes[j];\n        if (box1 !== box2 && box2.visible) {\n          if (intersect(box1, box2)) {\n            box2.visible = false;\n          }\n        }\n      }\n    }\n  }\n  return boxes;\n}\n\nconst cache: Map<string, any> = new Map();\nconst worker = createWorker(layoutCode);\n\n/**\n * label 防遮挡布局：在不改变 label 位置的情况下对相互重叠的 label 进行隐藏（非移除）\n * 不同于 'overlap' 类型的布局，该布局不会对 label 的位置进行偏移调整。\n * @param labels 参与布局调整的 label 数组集合\n */\nexport function hideOverlap(labelItems: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[], region: BBox) {\n  // todo 添加 label rank\n  return new Promise((resolve) => {\n    const boxes = labels.map((d, idx) => ({\n      ...getLabelBackgroundInfo(d, labelItems[idx], get(labelItems[idx], 'background.padding')),\n      visible: true,\n    }));\n    const memoKey = JSON.stringify(boxes);\n    const cb = (items: Item[]) => {\n      cache.set(memoKey, items);\n      each(items, ({ visible }, idx) => {\n        const labelShape = labels[idx];\n        if (visible) {\n          labelShape?.show()\n        } else {\n          labelShape?.hide();\n        }\n      });\n      return resolve(items);\n    }\n    if (cache.get(memoKey)) {\n      cb(cache.get(memoKey))\n    } else if (worker) {\n      // Do layout in worker.\n      try {\n        worker.postMessage(JSON.stringify({ type: 'hide-overlap', items: boxes }));\n        worker.onmessage = (e) => cb(Array.isArray(e.data) ? e.data : []);\n        worker.onmessageerror = (e) => {\n          console.warn('[AntV G2] Web worker is not available');\n          // Normal layout in main thread.\n          cb(layout(boxes));\n        };\n      } catch (e) {\n        console.error(e);\n        cb(layout(boxes));\n      }\n    } else {\n      // Normal layout in main thread.\n      cb(layout(boxes));\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}