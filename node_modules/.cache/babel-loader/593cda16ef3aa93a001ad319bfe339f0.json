{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { getXDimensionLength } from '../util/coordinate';\nimport { getDefaultSize } from './util/shape-size';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\n\nimport './shape/violin';\n/**\n * Violin 几何标记。\n * 用于绘制小提琴图。\n */\n\nvar Violin =\n/** @class */\nfunction (_super) {\n  __extends(Violin, _super);\n\n  function Violin() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'violin';\n    _this.shapeType = 'violin';\n    _this.generatePoints = true;\n    return _this;\n  }\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param record\n   * @returns\n   */\n\n\n  Violin.prototype.createShapePointsCfg = function (record) {\n    var cfg = _super.prototype.createShapePointsCfg.call(this, record); // 计算每个 shape 的 size\n\n\n    var size;\n    var sizeAttr = this.getAttribute('size');\n\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, record)[0]; // 归一化\n\n      var coordinate = this.coordinate;\n      var coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n\n      size = this.defaultSize;\n    }\n\n    cfg.size = size;\n    cfg._size = get(record[FIELD_ORIGIN], [this._sizeField]);\n    return cfg;\n  };\n  /**\n   * @override\n   */\n\n\n  Violin.prototype.initAttributes = function () {\n    var attributeOption = this.attributeOption;\n    var sizeField = attributeOption.size ? attributeOption.size.fields[0] : this._sizeField ? this._sizeField : 'size';\n    this._sizeField = sizeField; // fixme 干啥要删掉\n\n    delete attributeOption.size;\n\n    _super.prototype.initAttributes.call(this);\n  };\n\n  return Violin;\n}(Geometry);\n\nexport default Violin;","map":{"version":3,"mappings":";AAAA,SAASA,GAAT,QAAoB,YAApB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA;;AACA,OAAO,gBAAP;AAEA;;;;;AAIA;AAAA;AAAA;EAAoCC;;EAApC;IAAA;;IACkBC,aAAe,QAAf;IACAA,kBAAoB,QAApB;IACNA,uBAA0B,IAA1B;;EA+CX;EA3CC;;;;;;;EAKUC,wCAAV,UAA+BC,MAA/B,EAA4C;IAC1C,IAAMC,GAAG,GAAGC,iBAAMC,oBAAN,CAA0BC,IAA1B,CAA0B,IAA1B,EAA2BJ,MAA3B,CAAZ,CAD0C,CAG1C;;;IACA,IAAIK,IAAJ;IACA,IAAMC,QAAQ,GAAG,KAAKC,YAAL,CAAkB,MAAlB,CAAjB;;IACA,IAAID,QAAJ,EAAc;MACZD,IAAI,GAAG,KAAKG,kBAAL,CAAwBF,QAAxB,EAAkCN,MAAlC,EAA0C,CAA1C,CAAP,CADY,CAEZ;;MACA,IAAMS,UAAU,GAAG,KAAKA,UAAxB;MACA,IAAMC,eAAe,GAAGhB,mBAAmB,CAACe,UAAD,CAA3C;MACAJ,IAAI,GAAGA,IAAI,GAAGK,eAAd;IACD,CAND,MAMO;MACL,IAAI,CAAC,KAAKC,WAAV,EAAuB;QACrB,KAAKA,WAAL,GAAmBhB,cAAc,CAAC,IAAD,CAAjC;MACD;;MACDU,IAAI,GAAG,KAAKM,WAAZ;IACD;;IACDV,GAAG,CAACI,IAAJ,GAAWA,IAAX;IACAJ,GAAG,CAACW,KAAJ,GAAYpB,GAAG,CAACQ,MAAM,CAACP,YAAD,CAAP,EAAuB,CAAC,KAAKoB,UAAN,CAAvB,CAAf;IACA,OAAOZ,GAAP;EACD,CArBS;EAuBV;;;;;EAGUF,kCAAV;IACU,mBAAe,GAAK,KAAIe,eAAxB;IACR,IAAMC,SAAS,GAAGD,eAAe,CAACT,IAAhB,GACdS,eAAe,CAACT,IAAhB,CAAqBW,MAArB,CAA4B,CAA5B,CADc,GAEd,KAAKH,UAAL,GACA,KAAKA,UADL,GAEA,MAJJ;IAKA,KAAKA,UAAL,GAAkBE,SAAlB,CAPF,CAQE;;IACA,OAAOD,eAAe,CAACT,IAAvB;;IACAH,iBAAMe,cAAN,CAAoBb,IAApB,CAAoB,IAApB;EACD,CAXS;;EAYZ;AAAC,CAlDD,CAAoCR,QAApC","names":["get","FIELD_ORIGIN","getXDimensionLength","getDefaultSize","Geometry","__extends","_this","Violin","record","cfg","_super","createShapePointsCfg","call","size","sizeAttr","getAttribute","getAttributeValues","coordinate","coordinateWidth","defaultSize","_size","_sizeField","attributeOption","sizeField","fields","initAttributes"],"sourceRoot":"","sources":["../../src/geometry/violin.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Datum, ViolinShapePoint } from '../interface';\nimport { getXDimensionLength } from '../util/coordinate';\nimport { getDefaultSize } from './util/shape-size';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/violin';\n\n/**\n * Violin 几何标记。\n * 用于绘制小提琴图。\n */\nexport default class Violin extends Geometry<ViolinShapePoint> {\n  public readonly type: string = 'violin';\n  public readonly shapeType: string = 'violin';\n  protected generatePoints: boolean = true;\n  /** size 私有映射字段 */\n  private _sizeField: string;\n\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param record\n   * @returns\n   */\n  protected createShapePointsCfg(record: Datum) {\n    const cfg = super.createShapePointsCfg(record);\n\n    // 计算每个 shape 的 size\n    let size;\n    const sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, record)[0];\n      // 归一化\n      const coordinate = this.coordinate;\n      const coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n    cfg._size = get(record[FIELD_ORIGIN], [this._sizeField]);\n    return cfg;\n  }\n\n  /**\n   * @override\n   */\n  protected initAttributes() {\n    const { attributeOption } = this;\n    const sizeField = attributeOption.size\n      ? attributeOption.size.fields[0]\n      : this._sizeField\n      ? this._sizeField\n      : 'size';\n    this._sizeField = sizeField;\n    // fixme 干啥要删掉\n    delete attributeOption.size;\n    super.initAttributes();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}