{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { map, reduce, maxBy, isArray, get } from '@antv/util';\nimport { flow } from '../../../utils';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_TOTAL_PERCENT, PLOYGON_X, PLOYGON_Y } from '../constant';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { conversionTagComponent } from './common';\n/**\n * 动态高度漏斗图\n * @param params\n * 需求: 每个漏斗项的高度根据 yfield 等比生成。漏斗上下宽度比为2，即斜率为 2。\n * 实现方式: 使用 g2 多边形，data -> 点坐标 -> 绘制\n * 以漏斗底部中心点为坐标轴原点，漏斗在 -0.5 <= x <= 0.5, 0 <= y <= 1 的正方形中绘制\n * 先计算第一象限的点, 第二象限的点即为镜像 x 轴取反。\n * 第一象限共需计算 data.length + 1 个点，在 y = 4x - 1 上。首尾分别是[0.5, 1], [0.25, 0]。根据 data 计算出 y 值，从而得到 y 值\n */\n\n/**\n * 处理数据\n * @param params\n */\n\nfunction field(params) {\n  var chart = params.chart,\n      options = params.options;\n  var _a = options.data,\n      data = _a === void 0 ? [] : _a,\n      yField = options.yField; // 计算各数据项所占高度\n\n  var sum = reduce(data, function (total, item) {\n    return total + (item[yField] || 0);\n  }, 0);\n  var max = maxBy(data, yField)[yField];\n  var formatData = map(data, function (row, index) {\n    // 储存四个点 x，y 坐标，方向为顺时针，即 [左上, 右上，右下，左下]\n    var x = [];\n    var y = [];\n    row[FUNNEL_TOTAL_PERCENT] = (row[yField] || 0) / sum; // 获取左上角，右上角坐标\n\n    if (index) {\n      var preItemX = data[index - 1][PLOYGON_X];\n      var preItemY = data[index - 1][PLOYGON_Y];\n      x[0] = preItemX[3];\n      y[0] = preItemY[3];\n      x[1] = preItemX[2];\n      y[1] = preItemY[2];\n    } else {\n      x[0] = -0.5;\n      y[0] = 1;\n      x[1] = 0.5;\n      y[1] = 1;\n    } // 获取右下角坐标\n\n\n    y[2] = y[1] - row[FUNNEL_TOTAL_PERCENT];\n    x[2] = (y[2] + 1) / 4;\n    y[3] = y[2];\n    x[3] = -x[2]; // 赋值\n\n    row[PLOYGON_X] = x;\n    row[PLOYGON_Y] = y;\n    row[FUNNEL_PERCENT] = (row[yField] || 0) / max;\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n  chart.data(formatData);\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      color = options.color,\n      tooltip = options.tooltip,\n      label = options.label,\n      funnelStyle = options.funnelStyle,\n      state = options.state;\n\n  var _a = getTooltipMapping(tooltip, [xField, yField]),\n      fields = _a.fields,\n      formatter = _a.formatter; // 绘制漏斗图\n\n\n  baseGeometry({\n    chart: chart,\n    options: {\n      type: 'polygon',\n      xField: PLOYGON_X,\n      yField: PLOYGON_Y,\n      colorField: xField,\n      tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n      label: label,\n      state: state,\n      mapping: {\n        tooltip: formatter,\n        color: color,\n        style: funnelStyle\n      }\n    }\n  });\n  return params;\n}\n/**\n * 转置处理\n * @param params\n */\n\n\nfunction transpose(params) {\n  var chart = params.chart,\n      options = params.options;\n  var isTransposed = options.isTransposed;\n  chart.coordinate({\n    type: 'rect',\n    actions: isTransposed ? [['transpose'], ['reflect', 'x']] : []\n  });\n  return params;\n}\n/**\n * 转化率组件\n * @param params\n */\n\n\nfunction conversionTag(params) {\n  var getLineCoordinate = function (datum, datumIndex, data, initLineOption) {\n    return __assign(__assign({}, initLineOption), {\n      start: [datum[PLOYGON_X][1], datum[PLOYGON_Y][1]],\n      end: [datum[PLOYGON_X][1] + 0.05, datum[PLOYGON_Y][1]]\n    });\n  };\n\n  conversionTagComponent(getLineCoordinate)(params);\n  return params;\n}\n/**\n * 动态高度漏斗\n * @param chart\n * @param options\n */\n\n\nexport function dynamicHeightFunnel(params) {\n  return flow(field, geometry, transpose, conversionTag)(params);\n}","map":{"version":3,"mappings":"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","names":["map","reduce","maxBy","isArray","get","flow","FUNNEL_PERCENT","FUNNEL_CONVERSATION","FUNNEL_TOTAL_PERCENT","PLOYGON_X","PLOYGON_Y","geometry","baseGeometry","getTooltipMapping","conversionTagComponent","field","params","options","_a","yField","sum","data","total","item","max","formatData","row","index","x","y","preItemX","preItemY","chart","color","tooltip","label","funnelStyle","state","xField","fields","formatter","type","colorField","tooltipFields","concat","mapping","style","transpose","coordinate","actions","isTransposed","conversionTag","getLineCoordinate","datum","datumIndex","initLineOption","start","end","dynamicHeightFunnel"],"sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/dynamic-height.ts"],"sourcesContent":["import { map, reduce, maxBy, isArray, get } from '@antv/util';\nimport { Types } from '@antv/g2';\nimport { flow } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_TOTAL_PERCENT, PLOYGON_X, PLOYGON_Y } from '../constant';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { Datum, Data } from '../../../types/common';\nimport { FunnelOptions } from '../types';\nimport { conversionTagComponent } from './common';\n\n/**\n * 动态高度漏斗图\n * @param params\n * 需求: 每个漏斗项的高度根据 yfield 等比生成。漏斗上下宽度比为2，即斜率为 2。\n * 实现方式: 使用 g2 多边形，data -> 点坐标 -> 绘制\n * 以漏斗底部中心点为坐标轴原点，漏斗在 -0.5 <= x <= 0.5, 0 <= y <= 1 的正方形中绘制\n * 先计算第一象限的点, 第二象限的点即为镜像 x 轴取反。\n * 第一象限共需计算 data.length + 1 个点，在 y = 4x - 1 上。首尾分别是[0.5, 1], [0.25, 0]。根据 data 计算出 y 值，从而得到 y 值\n */\n\n/**\n * 处理数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n\n  // 计算各数据项所占高度\n  const sum = reduce(\n    data,\n    (total, item) => {\n      return total + (item[yField] || 0);\n    },\n    0\n  );\n\n  const max = maxBy(data, yField)[yField];\n\n  const formatData = map(data, (row, index) => {\n    // 储存四个点 x，y 坐标，方向为顺时针，即 [左上, 右上，右下，左下]\n    const x = [];\n    const y = [];\n\n    row[FUNNEL_TOTAL_PERCENT] = (row[yField] || 0) / sum;\n\n    // 获取左上角，右上角坐标\n    if (index) {\n      const preItemX = data[index - 1][PLOYGON_X];\n      const preItemY = data[index - 1][PLOYGON_Y];\n      x[0] = preItemX[3];\n      y[0] = preItemY[3];\n      x[1] = preItemX[2];\n      y[1] = preItemY[2];\n    } else {\n      x[0] = -0.5;\n      y[0] = 1;\n      x[1] = 0.5;\n      y[1] = 1;\n    }\n\n    // 获取右下角坐标\n    y[2] = y[1] - row[FUNNEL_TOTAL_PERCENT];\n    x[2] = (y[2] + 1) / 4;\n    y[3] = y[2];\n    x[3] = -x[2];\n\n    // 赋值\n    row[PLOYGON_X] = x;\n    row[PLOYGON_Y] = y;\n    row[FUNNEL_PERCENT] = (row[yField] || 0) / max;\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n\n  chart.data(formatData);\n\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { xField, yField, color, tooltip, label, funnelStyle, state } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField]);\n  // 绘制漏斗图\n  baseGeometry({\n    chart,\n    options: {\n      type: 'polygon',\n      xField: PLOYGON_X,\n      yField: PLOYGON_Y,\n      colorField: xField,\n      tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n      label,\n      state,\n      mapping: {\n        tooltip: formatter,\n        color,\n        style: funnelStyle,\n      },\n    },\n  });\n  return params;\n}\n\n/**\n * 转置处理\n * @param params\n */\nfunction transpose(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { isTransposed } = options;\n  chart.coordinate({\n    type: 'rect',\n    actions: isTransposed ? [['transpose'], ['reflect', 'x']] : [],\n  });\n  return params;\n}\n\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const getLineCoordinate = (\n    datum: Datum,\n    datumIndex: number,\n    data: Data,\n    initLineOption: Record<string, any>\n  ): Types.LineOption => {\n    return {\n      ...initLineOption,\n      start: [datum[PLOYGON_X][1], datum[PLOYGON_Y][1]],\n      end: [datum[PLOYGON_X][1] + 0.05, datum[PLOYGON_Y][1]],\n    };\n  };\n\n  conversionTagComponent(getLineCoordinate)(params);\n\n  return params;\n}\n\n/**\n * 动态高度漏斗\n * @param chart\n * @param options\n */\nexport function dynamicHeightFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, transpose, conversionTag)(params);\n}\n"]},"metadata":{},"sourceType":"module"}