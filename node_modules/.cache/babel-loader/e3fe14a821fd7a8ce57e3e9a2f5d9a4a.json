{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { isNumber, isString } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { renderTag } from '../util/graphic';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\n\nvar LineAnnotation =\n/** @class */\nfunction (_super) {\n  __extends(LineAnnotation, _super);\n\n  function LineAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @protected\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n\n\n  LineAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'line',\n      locationType: 'region',\n      start: null,\n      end: null,\n      style: {},\n      text: null,\n      defaultCfg: {\n        style: {\n          fill: Theme.textColor,\n          fontSize: 12,\n          textAlign: 'center',\n          textBaseline: 'bottom',\n          fontFamily: Theme.fontFamily\n        },\n        text: {\n          position: 'center',\n          autoRotate: true,\n          content: null,\n          offsetX: 0,\n          offsetY: 0,\n          style: {\n            stroke: Theme.lineColor,\n            lineWidth: 1\n          }\n        }\n      }\n    });\n  };\n\n  LineAnnotation.prototype.renderInner = function (group) {\n    this.renderLine(group);\n\n    if (this.get('text')) {\n      this.renderLabel(group);\n    }\n  }; // 绘制线\n\n\n  LineAnnotation.prototype.renderLine = function (group) {\n    var start = this.get('start');\n    var end = this.get('end');\n    var style = this.get('style');\n    this.addShape(group, {\n      type: 'line',\n      id: this.getElementId('line'),\n      name: 'annotation-line',\n      attrs: __assign({\n        x1: start.x,\n        y1: start.y,\n        x2: end.x,\n        y2: end.y\n      }, style)\n    });\n  }; // 获取 label 的位置\n\n\n  LineAnnotation.prototype.getLabelPoint = function (start, end, position) {\n    var percent;\n\n    if (position === 'start') {\n      percent = 0;\n    } else if (position === 'center') {\n      percent = 0.5;\n    } else if (isString(position) && position.indexOf('%') !== -1) {\n      percent = parseInt(position, 10) / 100;\n    } else if (isNumber(position)) {\n      percent = position;\n    } else {\n      percent = 1;\n    }\n\n    if (percent > 1 || percent < 0) {\n      percent = 1;\n    }\n\n    return {\n      x: getValueByPercent(start.x, end.x, percent),\n      y: getValueByPercent(start.y, end.y, percent)\n    };\n  }; // 绘制 label\n\n\n  LineAnnotation.prototype.renderLabel = function (group) {\n    var text = this.get('text');\n    var start = this.get('start');\n    var end = this.get('end');\n    var position = text.position,\n        content = text.content,\n        style = text.style,\n        offsetX = text.offsetX,\n        offsetY = text.offsetY,\n        autoRotate = text.autoRotate,\n        maxLength = text.maxLength,\n        autoEllipsis = text.autoEllipsis,\n        ellipsisPosition = text.ellipsisPosition,\n        background = text.background,\n        _a = text.isVertical,\n        isVertical = _a === void 0 ? false : _a;\n    var point = this.getLabelPoint(start, end, position);\n    var x = point.x + offsetX;\n    var y = point.y + offsetY;\n    var cfg = {\n      id: this.getElementId('line-text'),\n      name: 'annotation-line-text',\n      x: x,\n      y: y,\n      content: content,\n      style: style,\n      maxLength: maxLength,\n      autoEllipsis: autoEllipsis,\n      ellipsisPosition: ellipsisPosition,\n      background: background,\n      isVertical: isVertical\n    }; // 如果自动旋转\n\n    if (autoRotate) {\n      var vector = [end.x - start.x, end.y - start.y];\n      cfg.rotate = Math.atan2(vector[1], vector[0]);\n    }\n\n    renderTag(group, cfg);\n  };\n\n  return LineAnnotation;\n}(GroupComponent);\n\nexport default LineAnnotation;","map":{"version":3,"mappings":";AACA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,YAAnC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAGA,SAASC,SAAT,QAAkC,iBAAlC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA;AAAA;AAAA;EAA6BC;;EAA7B;;EA4HC;EA3HC;;;;;;;EAKOC,yCAAP;IACE,IAAMC,GAAG,GAAGC,iBAAMC,aAAN,CAAmBC,IAAnB,CAAmB,IAAnB,CAAZ;;IACA,6BACKH,GADL,GACQ;MACNI,IAAI,EAAE,YADA;MAENC,IAAI,EAAE,MAFA;MAGNC,YAAY,EAAE,QAHR;MAINC,KAAK,EAAE,IAJD;MAKNC,GAAG,EAAE,IALC;MAMNC,KAAK,EAAE,EAND;MAONC,IAAI,EAAE,IAPA;MAQNC,UAAU,EAAE;QACVF,KAAK,EAAE;UACLG,IAAI,EAAEhB,KAAK,CAACiB,SADP;UAELC,QAAQ,EAAE,EAFL;UAGLC,SAAS,EAAE,QAHN;UAILC,YAAY,EAAE,QAJT;UAKLC,UAAU,EAAErB,KAAK,CAACqB;QALb,CADG;QAQVP,IAAI,EAAE;UACJQ,QAAQ,EAAE,QADN;UAEJC,UAAU,EAAE,IAFR;UAGJC,OAAO,EAAE,IAHL;UAIJC,OAAO,EAAE,CAJL;UAKJC,OAAO,EAAE,CALL;UAMJb,KAAK,EAAE;YACLc,MAAM,EAAE3B,KAAK,CAAC4B,SADT;YAELC,SAAS,EAAE;UAFN;QANH;MARI;IARN,CADR;EA8BD,CAhCM;;EAkCG1B,uCAAV,UAAsB2B,KAAtB,EAAmC;IACjC,KAAKC,UAAL,CAAgBD,KAAhB;;IACA,IAAI,KAAKE,GAAL,CAAS,MAAT,CAAJ,EAAsB;MACpB,KAAKC,WAAL,CAAiBH,KAAjB;IACD;EACF,CALS,CAxCZ,CA+CE;;;EACQ3B,sCAAR,UAAmB2B,KAAnB,EAAgC;IAC9B,IAAMnB,KAAK,GAAG,KAAKqB,GAAL,CAAS,OAAT,CAAd;IACA,IAAMpB,GAAG,GAAG,KAAKoB,GAAL,CAAS,KAAT,CAAZ;IACA,IAAMnB,KAAK,GAAG,KAAKmB,GAAL,CAAS,OAAT,CAAd;IACA,KAAKE,QAAL,CAAcJ,KAAd,EAAqB;MACnBrB,IAAI,EAAE,MADa;MAEnB0B,EAAE,EAAE,KAAKC,YAAL,CAAkB,MAAlB,CAFe;MAGnB5B,IAAI,EAAE,iBAHa;MAInB6B,KAAK;QACHC,EAAE,EAAE3B,KAAK,CAAC4B,CADP;QAEHC,EAAE,EAAE7B,KAAK,CAAC8B,CAFP;QAGHC,EAAE,EAAE9B,GAAG,CAAC2B,CAHL;QAIHI,EAAE,EAAE/B,GAAG,CAAC6B;MAJL,GAKA5B,KALA;IAJc,CAArB;EAYD,CAhBO,CAhDV,CAkEE;;;EACQV,yCAAR,UAAsBQ,KAAtB,EAAoCC,GAApC,EAAgDU,QAAhD,EAAgE;IAC9D,IAAIsB,OAAJ;;IACA,IAAItB,QAAQ,KAAK,OAAjB,EAA0B;MACxBsB,OAAO,GAAG,CAAV;IACD,CAFD,MAEO,IAAItB,QAAQ,KAAK,QAAjB,EAA2B;MAChCsB,OAAO,GAAG,GAAV;IACD,CAFM,MAEA,IAAI/C,QAAQ,CAACyB,QAAD,CAAR,IAAsBA,QAAQ,CAACuB,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAArD,EAAwD;MAC7DD,OAAO,GAAGE,QAAQ,CAACxB,QAAD,EAAW,EAAX,CAAR,GAAyB,GAAnC;IACD,CAFM,MAEA,IAAI1B,QAAQ,CAAC0B,QAAD,CAAZ,EAAwB;MAC7BsB,OAAO,GAAGtB,QAAV;IACD,CAFM,MAEA;MACLsB,OAAO,GAAG,CAAV;IACD;;IAED,IAAIA,OAAO,GAAG,CAAV,IAAeA,OAAO,GAAG,CAA7B,EAAgC;MAC9BA,OAAO,GAAG,CAAV;IACD;;IAED,OAAO;MACLL,CAAC,EAAEtC,iBAAiB,CAACU,KAAK,CAAC4B,CAAP,EAAU3B,GAAG,CAAC2B,CAAd,EAAiBK,OAAjB,CADf;MAELH,CAAC,EAAExC,iBAAiB,CAACU,KAAK,CAAC8B,CAAP,EAAU7B,GAAG,CAAC6B,CAAd,EAAiBG,OAAjB;IAFf,CAAP;EAID,CAtBO,CAnEV,CA2FE;;;EACQzC,uCAAR,UAAoB2B,KAApB,EAAiC;IAC/B,IAAMhB,IAAI,GAAG,KAAKkB,GAAL,CAAS,MAAT,CAAb;IACA,IAAMrB,KAAK,GAAG,KAAKqB,GAAL,CAAS,OAAT,CAAd;IACA,IAAMpB,GAAG,GAAG,KAAKoB,GAAL,CAAS,KAAT,CAAZ;IACQ,YAAQ,GACgElB,IAAI,SAD5E;IAAA,IAAUU,OAAO,GACuDV,IAAI,QAD5E;IAAA,IAAmBD,KAAK,GACgDC,IAAI,MAD5E;IAAA,IAA0BW,OAAO,GACuCX,IAAI,QAD5E;IAAA,IAAmCY,OAAO,GAC8BZ,IAAI,QAD5E;IAAA,IAA4CS,UAAU,GACkBT,IAAI,WAD5E;IAAA,IACNiC,SAAS,GAAqEjC,IAAI,UAD5E;IAAA,IACKkC,YAAY,GAAuDlC,IAAI,aAD5E;IAAA,IACmBmC,gBAAgB,GAAqCnC,IAAI,iBAD5E;IAAA,IACqCoC,UAAU,GAAyBpC,IAAI,WAD5E;IAAA,IACiDqC,KAAuBrC,IAAI,WAD5E;IAAA,IACiDsC,UAAU,mBAAG,KAAH,GAAQD,EADnE;IAER,IAAME,KAAK,GAAG,KAAKC,aAAL,CAAmB3C,KAAnB,EAA0BC,GAA1B,EAA+BU,QAA/B,CAAd;IACA,IAAMiB,CAAC,GAAGc,KAAK,CAACd,CAAN,GAAUd,OAApB;IACA,IAAMgB,CAAC,GAAGY,KAAK,CAACZ,CAAN,GAAUf,OAApB;IAEA,IAAMtB,GAAG,GAAW;MAClB+B,EAAE,EAAE,KAAKC,YAAL,CAAkB,WAAlB,CADc;MAElB5B,IAAI,EAAE,sBAFY;MAGlB+B,CAAC,GAHiB;MAIlBE,CAAC,GAJiB;MAKlBjB,OAAO,SALW;MAMlBX,KAAK,OANa;MAOlBkC,SAAS,WAPS;MAQlBC,YAAY,cARM;MASlBC,gBAAgB,kBATE;MAUlBC,UAAU,YAVQ;MAWlBE,UAAU;IAXQ,CAApB,CAV+B,CAwB/B;;IACA,IAAI7B,UAAJ,EAAgB;MACd,IAAMgC,MAAM,GAAG,CAAC3C,GAAG,CAAC2B,CAAJ,GAAQ5B,KAAK,CAAC4B,CAAf,EAAkB3B,GAAG,CAAC6B,CAAJ,GAAQ9B,KAAK,CAAC8B,CAAhC,CAAf;MACArC,GAAG,CAACoD,MAAJ,GAAaC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,CAAD,CAAjB,EAAsBA,MAAM,CAAC,CAAD,CAA5B,CAAb;IACD;;IAEDxD,SAAS,CAAC+B,KAAD,EAAQ1B,GAAR,CAAT;EACD,CA/BO;;EAgCV;AAAC,CA5HD,CAA6BN,cAA7B;;AA8HA,eAAeK,cAAf","names":["isNumber","isString","GroupComponent","renderTag","Theme","getValueByPercent","__extends","LineAnnotation","cfg","_super","getDefaultCfg","call","name","type","locationType","start","end","style","text","defaultCfg","fill","textColor","fontSize","textAlign","textBaseline","fontFamily","position","autoRotate","content","offsetX","offsetY","stroke","lineColor","lineWidth","group","renderLine","get","renderLabel","addShape","id","getElementId","attrs","x1","x","y1","y","x2","y2","percent","indexOf","parseInt","maxLength","autoEllipsis","ellipsisPosition","background","_a","isVertical","point","getLabelPoint","vector","rotate","Math","atan2"],"sourceRoot":"","sources":["../../src/annotation/line.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}