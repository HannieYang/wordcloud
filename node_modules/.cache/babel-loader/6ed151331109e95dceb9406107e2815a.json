{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getCoordinateClipCfg } from '../../util/coordinate';\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\n\nexport function waveIn(element, animateCfg, cfg) {\n  var _a = getCoordinateClipCfg(cfg.coordinate, 20),\n      type = _a.type,\n      startState = _a.startState,\n      endState = _a.endState; // 根据坐标系类型获取整体的剪切区域配置信息\n\n\n  var clipShape = element.setClip({\n    type: type,\n    attrs: startState\n  }); // 为 shape 设置剪切区域\n  // 更新 动画 获取了 toAttrs 需要重新更新上去\n\n  if (cfg.toAttrs) {\n    element.attr(cfg.toAttrs);\n  } // 对剪切图形做动画\n\n\n  clipShape.animate(endState, __assign(__assign({}, animateCfg), {\n    callback: function () {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n    }\n  }));\n}","map":{"version":3,"mappings":";AAEA,SAASA,oBAAT,QAAqC,uBAArC;AAGA;;;;;;;;;;AASA,OAAM,SAAUC,MAAV,CAAiBC,OAAjB,EAA2CC,UAA3C,EAAoEC,GAApE,EAAwF;EACtF,SAAiCJ,oBAAoB,CAACI,GAAG,CAACC,UAAL,EAAiB,EAAjB,CAArD;EAAA,IAAEC,IAAI,UAAN;EAAA,IAAQC,UAAU,gBAAlB;EAAA,IAAoBC,QAAQ,cAA5B,CADsF,CACX;;;EACjF,IAAMC,SAAS,GAAGP,OAAO,CAACQ,OAAR,CAAgB;IAChCJ,IAAI,MAD4B;IAEhCK,KAAK,EAAEJ;EAFyB,CAAhB,CAAlB,CAF4F,CAK9E;EAEd;;EACA,IAAIH,GAAG,CAACQ,OAAR,EAAiB;IACfV,OAAO,CAACW,IAAR,CAAaT,GAAG,CAACQ,OAAjB;EACD,CAV2F,CAY5F;;;EACAH,SAAS,CAACK,OAAV,CAAkBN,QAAlB,EAA0BO,sBACrBZ,UADqB,GACX;IACba,QAAQ,EAAE;MACR,IAAId,OAAO,IAAI,CAACA,OAAO,CAACe,GAAR,CAAY,WAAZ,CAAhB,EAA0C;QACxCf,OAAO,CAACgB,GAAR,CAAY,WAAZ,EAAyB,IAAzB;MACD;;MACDT,SAAS,CAACU,MAAV,CAAiB,IAAjB,EAJQ,CAIgB;IACzB;EANY,CADW,CAA1B;AASD","names":["getCoordinateClipCfg","waveIn","element","animateCfg","cfg","coordinate","type","startState","endState","clipShape","setClip","attrs","toAttrs","attr","animate","__assign","callback","get","set","remove"],"sourceRoot":"","sources":["../../../src/animate/animation/wave-in.ts"],"sourcesContent":["import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { getCoordinateClipCfg } from '../../util/coordinate';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { type, startState, endState } = getCoordinateClipCfg(cfg.coordinate, 20); // 根据坐标系类型获取整体的剪切区域配置信息\n  const clipShape = element.setClip({\n    type,\n    attrs: startState,\n  }) as IShape; // 为 shape 设置剪切区域\n\n  // 更新 动画 获取了 toAttrs 需要重新更新上去\n  if (cfg.toAttrs) {\n    element.attr(cfg.toAttrs);\n  }\n\n  // 对剪切图形做动画\n  clipShape.animate(endState, {\n    ...animateCfg,\n    callback: () => {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}