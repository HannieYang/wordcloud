{"ast":null,"code":"import { filter } from '@antv/util';\nimport { getInteractionCfg } from '../interactions/brush';\nimport { deepAssign } from '../utils';\n/** 先引入brush 交互 */\n\nimport '../interactions/brush';\nvar BRUSH_TYPES = ['brush', 'brush-x', 'brush-y', 'brush-highlight', 'brush-x-highlight', 'brush-y-highlight'];\n/**\n * brush 交互\n */\n\nexport function brushInteraction(params) {\n  var options = params.options;\n  var brush = options.brush; // 先过滤掉 brush 等交互\n\n  var interactions = filter(options.interactions || [], function (i) {\n    return BRUSH_TYPES.indexOf(i.type) === -1;\n  }); // 设置 brush 交互\n\n  if (brush === null || brush === void 0 ? void 0 : brush.enabled) {\n    BRUSH_TYPES.forEach(function (type) {\n      var enable = false;\n\n      switch (brush.type) {\n        case 'x-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-x-highlight' : 'brush-x');\n          break;\n\n        case 'y-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-y-highlight' : 'brush-y');\n          break;\n\n        default:\n          enable = type === (brush.action === 'highlight' ? 'brush-highlight' : 'brush');\n          break;\n      }\n\n      var obj = {\n        type: type,\n        enable: enable\n      };\n\n      if (brush) {\n        obj.cfg = getInteractionCfg(type, brush.type, brush);\n      }\n\n      interactions.push(obj);\n    }); // 塞入 button 配置 (G2Plot 的封装)\n\n    if ((brush === null || brush === void 0 ? void 0 : brush.action) !== 'highlight') {\n      interactions.push({\n        type: 'filter-action',\n        cfg: {\n          buttonConfig: brush.button\n        }\n      });\n    }\n  }\n\n  return deepAssign({}, params, {\n    options: {\n      interactions: interactions\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB;AAEA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,UAA3B;AAGA;;AACA,OAAO,uBAAP;AAIA,IAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,SAArB,EAAgC,iBAAhC,EAAmD,mBAAnD,EAAwE,mBAAxE,CAApB;AAEA;;;;AAGA,OAAM,SAAUC,gBAAV,CAAwDC,MAAxD,EAAyE;EACrE,WAAO,GAAKA,MAAM,QAAlB;EAEA,SAAK,GAAKC,OAAO,MAAjB,CAHqE,CAK7E;;EACA,IAAMC,YAAY,GAAGP,MAAM,CAACM,OAAO,CAACC,YAAR,IAAwB,EAAzB,EAA6B,UAACC,CAAD,EAAE;IAAK,kBAAW,CAACC,OAAZ,CAAoBD,CAAC,CAACE,IAAtB,MAAgC,CAAC,CAAjC;EAAkC,CAAtE,CAA3B,CAN6E,CAQ7E;;EACA,IAAIC,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEC,OAAX,EAAoB;IAClBT,WAAW,CAACU,OAAZ,CAAoB,UAACH,IAAD,EAAK;MACvB,IAAII,MAAM,GAAG,KAAb;;MACA,QAAQH,KAAK,CAACD,IAAd;QACE,KAAK,QAAL;UACEI,MAAM,GAAGJ,IAAI,MAAMC,KAAK,CAACI,MAAN,KAAiB,WAAjB,GAA+B,mBAA/B,GAAqD,SAA3D,CAAb;UACA;;QACF,KAAK,QAAL;UACED,MAAM,GAAGJ,IAAI,MAAMC,KAAK,CAACI,MAAN,KAAiB,WAAjB,GAA+B,mBAA/B,GAAqD,SAA3D,CAAb;UACA;;QACF;UACED,MAAM,GAAGJ,IAAI,MAAMC,KAAK,CAACI,MAAN,KAAiB,WAAjB,GAA+B,iBAA/B,GAAmD,OAAzD,CAAb;UACA;MATJ;;MAWA,IAAMC,GAAG,GAA0B;QAAEN,IAAI,MAAN;QAAQI,MAAM;MAAd,CAAnC;;MAEA,IAAIH,KAAJ,EAAW;QACTK,GAAG,CAACC,GAAJ,GAAUhB,iBAAiB,CAACS,IAAD,EAAOC,KAAK,CAACD,IAAb,EAAmBC,KAAnB,CAA3B;MACD;;MACDJ,YAAY,CAACW,IAAb,CAAkBF,GAAlB;IACD,CAnBD,EADkB,CAsBlB;;IACA,IAAI,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAED,MAAP,MAAkB,WAAtB,EAAmC;MACjCR,YAAY,CAACW,IAAb,CAAkB;QAChBR,IAAI,EAAE,eADU;QAEhBO,GAAG,EAAE;UACHE,YAAY,EAAER,KAAK,CAACS;QADjB;MAFW,CAAlB;IAMD;EACF;;EACD,OAAOlB,UAAU,CAAC,EAAD,EAAKG,MAAL,EAAa;IAAEC,OAAO,EAAE;MAAEC,YAAY;IAAd;EAAX,CAAb,CAAjB;AACD","names":["filter","getInteractionCfg","deepAssign","BRUSH_TYPES","brushInteraction","params","options","interactions","i","indexOf","type","brush","enabled","forEach","enable","action","obj","cfg","push","buttonConfig","button"],"sourceRoot":"","sources":["../../src/adaptor/brush.ts"],"sourcesContent":["import { filter } from '@antv/util';\nimport { Params } from '../core/adaptor';\nimport { getInteractionCfg } from '../interactions/brush';\nimport { deepAssign } from '../utils';\nimport { Options as BaseOptions, BrushCfg, Interaction, Writable } from '../types';\n\n/** 先引入brush 交互 */\nimport '../interactions/brush';\n\ntype Options = Pick<BaseOptions, 'interactions'> & { brush?: BrushCfg };\n\nconst BRUSH_TYPES = ['brush', 'brush-x', 'brush-y', 'brush-highlight', 'brush-x-highlight', 'brush-y-highlight'];\n\n/**\n * brush 交互\n */\nexport function brushInteraction<O extends Options = Options>(params: Params<O>): Params<O> {\n  const { options } = params;\n\n  const { brush } = options;\n\n  // 先过滤掉 brush 等交互\n  const interactions = filter(options.interactions || [], (i) => BRUSH_TYPES.indexOf(i.type) === -1);\n\n  // 设置 brush 交互\n  if (brush?.enabled) {\n    BRUSH_TYPES.forEach((type) => {\n      let enable = false;\n      switch (brush.type) {\n        case 'x-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-x-highlight' : 'brush-x');\n          break;\n        case 'y-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-y-highlight' : 'brush-y');\n          break;\n        default:\n          enable = type === (brush.action === 'highlight' ? 'brush-highlight' : 'brush');\n          break;\n      }\n      const obj: Writable<Interaction> = { type, enable };\n\n      if (brush) {\n        obj.cfg = getInteractionCfg(type, brush.type, brush);\n      }\n      interactions.push(obj);\n    });\n\n    // 塞入 button 配置 (G2Plot 的封装)\n    if (brush?.action !== 'highlight') {\n      interactions.push({\n        type: 'filter-action',\n        cfg: {\n          buttonConfig: brush.button,\n        },\n      });\n    }\n  }\n  return deepAssign({}, params, { options: { interactions } });\n}\n"]},"metadata":{},"sourceType":"module"}