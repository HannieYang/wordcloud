{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport TransformAction from './scale-transform';\n/**\n * 缩放 Scale 的 Action\n * @ignore\n */\n\nvar ScaleTranslate =\n/** @class */\nfunction (_super) {\n  __extends(ScaleTranslate, _super);\n\n  function ScaleTranslate() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.zoomRatio = 0.05;\n    return _this; // 平移分类的度量\n    // private translateCategory(dim, scale, normalPoint) {\n    // }\n  }\n  /**\n   * 缩小\n   */\n\n\n  ScaleTranslate.prototype.zoomIn = function () {\n    this.zoom(this.zoomRatio);\n  };\n\n  ScaleTranslate.prototype.zoom = function (scale) {\n    var _this = this;\n\n    var dims = this.dims;\n    each(dims, function (dim) {\n      _this.zoomDim(dim, scale);\n    });\n    this.context.view.render(true);\n  };\n  /**\n   * 放大\n   */\n\n\n  ScaleTranslate.prototype.zoomOut = function () {\n    this.zoom(-1 * this.zoomRatio);\n  }; // 缩放度量\n\n\n  ScaleTranslate.prototype.zoomDim = function (dim, dRatio) {\n    if (this.hasDim(dim)) {\n      var scale = this.getScale(dim);\n\n      if (scale.isLinear) {\n        this.zoomLinear(dim, scale, dRatio);\n      } //  else { // 暂时仅处理连续字段\n      // this.zoomCategory(dim, scale, normalPoint);\n      // }\n\n    }\n  }; // linear 度量平移\n\n\n  ScaleTranslate.prototype.zoomLinear = function (dim, scale, dRatio) {\n    var view = this.context.view; // 只有第一次缓存，否则无法回滚\n\n    if (!this.cacheScaleDefs[dim]) {\n      this.cacheScaleDefs[dim] = {\n        // @ts-ignore\n        nice: scale.nice,\n        min: scale.min,\n        max: scale.max\n      };\n    } // 使用使用原始度量作为缩放标准\n\n\n    var scaleDef = this.cacheScaleDefs[dim];\n    var range = scaleDef.max - scaleDef.min;\n    var min = scale.min,\n        max = scale.max;\n    var d = dRatio * range;\n    var toMin = min - d;\n    var toMax = max + d;\n    var curRange = toMax - toMin;\n    var scaled = curRange / range;\n\n    if (toMax > toMin && scaled < 100 && scaled > 0.01) {\n      view.scale(scale.field, {\n        // @ts-ignore\n        nice: false,\n        min: min - d,\n        max: max + d\n      });\n    }\n  };\n\n  return ScaleTranslate;\n}(TransformAction);\n\nexport default ScaleTranslate;","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,QAA+B,YAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA;;;;;AAIA;AAAA;AAAA;EAA6BC;;EAA7B;IAAA;;IACUC,kBAAY,IAAZ;iBADV,CAmEE;IACA;IACA;EACD;EApEC;;;;;EAGOC,kCAAP;IACE,KAAKC,IAAL,CAAU,KAAKC,SAAf;EACD,CAFM;;EAICF,gCAAR,UAAaG,KAAb,EAAkB;IAAlB;;IACE,IAAMC,IAAI,GAAG,KAAKA,IAAlB;IACAR,IAAI,CAACQ,IAAD,EAAO,UAACC,GAAD,EAAI;MACbN,KAAI,CAACO,OAAL,CAAaD,GAAb,EAAkBF,KAAlB;IACD,CAFG,CAAJ;IAGA,KAAKI,OAAL,CAAaC,IAAb,CAAkBC,MAAlB,CAAyB,IAAzB;EACD,CANO;EAQR;;;;;EAGOT,mCAAP;IACE,KAAKC,IAAL,CAAU,CAAC,CAAD,GAAK,KAAKC,SAApB;EACD,CAFM,CApBT,CAwBE;;;EACQF,mCAAR,UAAgBK,GAAhB,EAAqBK,MAArB,EAA2B;IACzB,IAAI,KAAKC,MAAL,CAAYN,GAAZ,CAAJ,EAAsB;MACpB,IAAMF,KAAK,GAAG,KAAKS,QAAL,CAAcP,GAAd,CAAd;;MACA,IAAIF,KAAK,CAACU,QAAV,EAAoB;QAClB,KAAKC,UAAL,CAAgBT,GAAhB,EAAqBF,KAArB,EAA4BO,MAA5B;MACD,CAJmB,CAKpB;MACA;MACA;;IACD;EACF,CAVO,CAzBV,CAoCE;;;EACQV,sCAAR,UAAmBK,GAAnB,EAAwBF,KAAxB,EAA+BO,MAA/B,EAAqC;IACnC,IAAMF,IAAI,GAAG,KAAKD,OAAL,CAAaC,IAA1B,CADmC,CAEnC;;IACA,IAAI,CAAC,KAAKO,cAAL,CAAoBV,GAApB,CAAL,EAA+B;MAC7B,KAAKU,cAAL,CAAoBV,GAApB,IAA2B;QACzB;QACAW,IAAI,EAAEb,KAAK,CAACa,IAFa;QAGzBC,GAAG,EAAEd,KAAK,CAACc,GAHc;QAIzBC,GAAG,EAAEf,KAAK,CAACe;MAJc,CAA3B;IAMD,CAVkC,CAWnC;;;IACA,IAAMC,QAAQ,GAAG,KAAKJ,cAAL,CAAoBV,GAApB,CAAjB;IACA,IAAMe,KAAK,GAAGD,QAAQ,CAACD,GAAT,GAAeC,QAAQ,CAACF,GAAtC;IACQ,OAAG,GAAUd,KAAK,IAAlB;IAAA,IAAKe,GAAG,GAAKf,KAAK,IAAlB;IACR,IAAMkB,CAAC,GAAGX,MAAM,GAAGU,KAAnB;IACA,IAAME,KAAK,GAAGL,GAAG,GAAGI,CAApB;IACA,IAAME,KAAK,GAAGL,GAAG,GAAGG,CAApB;IACA,IAAMG,QAAQ,GAAGD,KAAK,GAAGD,KAAzB;IACA,IAAMG,MAAM,GAAGD,QAAQ,GAAGJ,KAA1B;;IACA,IAAIG,KAAK,GAAGD,KAAR,IAAiBG,MAAM,GAAG,GAA1B,IAAiCA,MAAM,GAAG,IAA9C,EAAoD;MAClDjB,IAAI,CAACL,KAAL,CAAWA,KAAK,CAACuB,KAAjB,EAAwB;QACtB;QACAV,IAAI,EAAE,KAFgB;QAGtBC,GAAG,EAAEA,GAAG,GAAGI,CAHW;QAItBH,GAAG,EAAEA,GAAG,GAAGG;MAJW,CAAxB;IAMD;EACF,CA5BO;;EAiCV;AAAC,CAtED,CAA6BxB,eAA7B;;AAwEA,eAAeG,cAAf","names":["each","TransformAction","__extends","_this","ScaleTranslate","zoom","zoomRatio","scale","dims","dim","zoomDim","context","view","render","dRatio","hasDim","getScale","isLinear","zoomLinear","cacheScaleDefs","nice","min","max","scaleDef","range","d","toMin","toMax","curRange","scaled","field"],"sourceRoot":"","sources":["../../../../src/interaction/action/view/scale-zoom.ts"],"sourcesContent":["import { each, throttle } from '@antv/util';\nimport TransformAction from './scale-transform';\n\n/**\n * 缩放 Scale 的 Action\n * @ignore\n */\nclass ScaleTranslate extends TransformAction {\n  private zoomRatio = 0.05;\n  /**\n   * 缩小\n   */\n  public zoomIn() {\n    this.zoom(this.zoomRatio);\n  }\n\n  private zoom(scale) {\n    const dims = this.dims;\n    each(dims, (dim) => {\n      this.zoomDim(dim, scale);\n    });\n    this.context.view.render(true);\n  }\n\n  /**\n   * 放大\n   */\n  public zoomOut() {\n    this.zoom(-1 * this.zoomRatio);\n  }\n\n  // 缩放度量\n  private zoomDim(dim, dRatio) {\n    if (this.hasDim(dim)) {\n      const scale = this.getScale(dim);\n      if (scale.isLinear) {\n        this.zoomLinear(dim, scale, dRatio);\n      }\n      //  else { // 暂时仅处理连续字段\n      // this.zoomCategory(dim, scale, normalPoint);\n      // }\n    }\n  }\n  // linear 度量平移\n  private zoomLinear(dim, scale, dRatio) {\n    const view = this.context.view;\n    // 只有第一次缓存，否则无法回滚\n    if (!this.cacheScaleDefs[dim]) {\n      this.cacheScaleDefs[dim] = {\n        // @ts-ignore\n        nice: scale.nice,\n        min: scale.min,\n        max: scale.max,\n      };\n    }\n    // 使用使用原始度量作为缩放标准\n    const scaleDef = this.cacheScaleDefs[dim];\n    const range = scaleDef.max - scaleDef.min;\n    const { min, max } = scale;\n    const d = dRatio * range;\n    const toMin = min - d;\n    const toMax = max + d;\n    const curRange = toMax - toMin;\n    const scaled = curRange / range;\n    if (toMax > toMin && scaled < 100 && scaled > 0.01) {\n      view.scale(scale.field, {\n        // @ts-ignore\n        nice: false,\n        min: min - d,\n        max: max + d,\n      });\n    }\n  }\n\n  // 平移分类的度量\n  // private translateCategory(dim, scale, normalPoint) {\n  // }\n}\n\nexport default ScaleTranslate;\n"]},"metadata":{},"sourceType":"module"}