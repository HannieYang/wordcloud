{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { deepAssign } from '../../utils';\n/**\n * 获取柱子 path\n * @param points\n */\n\nfunction getRectPath(points) {\n  var path = [];\n\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n\n    if (point) {\n      var action = i === 0 ? 'M' : 'L';\n      path.push([action, point.x, point.y]);\n    }\n  }\n\n  var first = points[0];\n  path.push(['L', first.x, first.y]);\n  path.push(['z']);\n  return path;\n}\n/**\n * 获取填充属性\n * @param cfg 图形绘制数据\n */\n\n\nfunction getFillAttrs(cfg) {\n  return deepAssign({}, cfg.defaultStyle, cfg.style, {\n    fill: cfg.color\n  });\n}\n\nregisterShape('interval', 'waterfall', {\n  draw: function (cfg, container) {\n    var customInfo = cfg.customInfo,\n        points = cfg.points,\n        nextPoints = cfg.nextPoints;\n    var group = container.addGroup(); // ① 绘制柱体\n\n    var rectPath = this.parsePath(getRectPath(points));\n    var fillAttrs = getFillAttrs(cfg);\n    group.addShape('path', {\n      attrs: __assign(__assign({}, fillAttrs), {\n        path: rectPath\n      })\n    }); // ② 绘制连接线\n\n    var leaderLineCfg = get(customInfo, 'leaderLine');\n\n    if (leaderLineCfg && nextPoints) {\n      var linkPath = [['M', points[2].x, points[2].y], ['L', nextPoints[0].x, nextPoints[0].y]];\n\n      if (points[2].y === nextPoints[1].y) {\n        linkPath[1] = ['L', nextPoints[1].x, nextPoints[1].y];\n      }\n\n      linkPath = this.parsePath(linkPath);\n      group.addShape('path', {\n        attrs: __assign({\n          path: linkPath\n        }, leaderLineCfg.style || {})\n      });\n    }\n\n    return group;\n  }\n});","map":{"version":3,"mappings":"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","names":["registerShape","get","deepAssign","getRectPath","points","path","i","length","point","action","push","x","y","first","getFillAttrs","cfg","defaultStyle","style","fill","color","draw","container","nextPoints","group","addGroup","rectPath","parsePath","fillAttrs","addShape","attrs","leaderLineCfg","customInfo","linkPath"],"sourceRoot":"","sources":["../../../src/plots/waterfall/shape.ts"],"sourcesContent":["import { IGroup } from '@antv/g-base';\nimport { registerShape } from '@antv/g2';\nimport { Types } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { deepAssign } from '../../utils';\nimport { Point } from '../../types';\n\n/**\n * 获取柱子 path\n * @param points\n */\nfunction getRectPath(points: Point[]) {\n  const path = [];\n  for (let i = 0; i < points.length; i++) {\n    const point = points[i];\n    if (point) {\n      const action = i === 0 ? 'M' : 'L';\n      path.push([action, point.x, point.y]);\n    }\n  }\n\n  const first = points[0];\n  path.push(['L', first.x, first.y]);\n  path.push(['z']);\n\n  return path;\n}\n\n/**\n * 获取填充属性\n * @param cfg 图形绘制数据\n */\nfunction getFillAttrs(cfg: Types.ShapeInfo) {\n  return deepAssign({}, cfg.defaultStyle, cfg.style, { fill: cfg.color });\n}\n\nregisterShape('interval', 'waterfall', {\n  draw(cfg: Types.ShapeInfo & { points: Point[]; nextPoints: Point[] }, container: IGroup) {\n    const { customInfo, points, nextPoints } = cfg;\n\n    const group = container.addGroup();\n\n    // ① 绘制柱体\n    const rectPath = this.parsePath(getRectPath(points));\n    const fillAttrs = getFillAttrs(cfg);\n\n    group.addShape('path', {\n      attrs: {\n        ...fillAttrs,\n        path: rectPath,\n      },\n    });\n\n    // ② 绘制连接线\n    const leaderLineCfg = get(customInfo, 'leaderLine');\n    if (leaderLineCfg && nextPoints) {\n      let linkPath = [\n        ['M', points[2].x, points[2].y],\n        ['L', nextPoints[0].x, nextPoints[0].y],\n      ];\n\n      if (points[2].y === nextPoints[1].y) {\n        linkPath[1] = ['L', nextPoints[1].x, nextPoints[1].y];\n      }\n\n      linkPath = this.parsePath(linkPath);\n      group.addShape('path', {\n        attrs: {\n          path: linkPath,\n          ...(leaderLineCfg.style || {}),\n        },\n      });\n    }\n\n    return group;\n  },\n});\n"]},"metadata":{},"sourceType":"module"}