{"ast":null,"code":"/**\n * 对比当前元素和之前的元素，返回 added, updated, removed\n * @param keyItem 之前的元素的，按照 key-item 的 object 的形式存储\n * @param keys 现在的元素，按照 array 的形式存储\n * @returns 由 added, updated, removed array 构成的 object\n */\nexport function diff(keyItem, keys) {\n  var added = [];\n  var updated = [];\n  var removed = [];\n  var keyIncluded = new Map();\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (keyItem[key]) updated.push(key);else added.push(key);\n    keyIncluded.set(key, true);\n  }\n\n  Object.keys(keyItem).forEach(function (key) {\n    if (!keyIncluded.has(key)) removed.push(key);\n  });\n  return {\n    added: added,\n    updated: updated,\n    removed: removed\n  };\n}","map":{"version":3,"mappings":"AAAA;;;;;;AAMA,OAAM,SAAUA,IAAV,CAAeC,OAAf,EAA6CC,IAA7C,EAA2D;EAC/D,IAAMC,KAAK,GAAG,EAAd;EACA,IAAMC,OAAO,GAAG,EAAhB;EACA,IAAMC,OAAO,GAAG,EAAhB;EACA,IAAMC,WAAW,GAAG,IAAIC,GAAJ,EAApB;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;IACpC,IAAME,GAAG,GAAGR,IAAI,CAACM,CAAD,CAAhB;IACA,IAAIP,OAAO,CAACS,GAAD,CAAX,EAAkBN,OAAO,CAACO,IAAR,CAAaD,GAAb,EAAlB,KACKP,KAAK,CAACQ,IAAN,CAAWD,GAAX;IACLJ,WAAW,CAACM,GAAZ,CAAgBF,GAAhB,EAAqB,IAArB;EACD;;EAEDG,MAAM,CAACX,IAAP,CAAYD,OAAZ,EAAqBa,OAArB,CAA6B,UAACJ,GAAD,EAAI;IAC/B,IAAI,CAACJ,WAAW,CAACS,GAAZ,CAAgBL,GAAhB,CAAL,EAA2BL,OAAO,CAACM,IAAR,CAAaD,GAAb;EAC5B,CAFD;EAIA,OAAO;IACLP,KAAK,OADA;IAELC,OAAO,SAFF;IAGLC,OAAO;EAHF,CAAP;AAKD","names":["diff","keyItem","keys","added","updated","removed","keyIncluded","Map","i","length","key","push","set","Object","forEach","has"],"sourceRoot":"","sources":["../../../src/geometry/util/diff.ts"],"sourcesContent":["/**\n * 对比当前元素和之前的元素，返回 added, updated, removed\n * @param keyItem 之前的元素的，按照 key-item 的 object 的形式存储\n * @param keys 现在的元素，按照 array 的形式存储\n * @returns 由 added, updated, removed array 构成的 object\n */\nexport function diff(keyItem: Record<string, any>, keys: string[]) {\n  const added = [];\n  const updated = [];\n  const removed = [];\n  const keyIncluded = new Map<string, boolean>();\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (keyItem[key]) updated.push(key);\n    else added.push(key);\n    keyIncluded.set(key, true);\n  }\n\n  Object.keys(keyItem).forEach((key) => {\n    if (!keyIncluded.has(key)) removed.push(key);\n  });\n\n  return {\n    added,\n    updated,\n    removed,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}