{"ast":null,"code":"import { each, isArray } from '@antv/util';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport { isPolygonsIntersect } from '@antv/path-util';\n\nfunction getMaskBBox(context, tolerance) {\n  var event = context.event;\n  var maskShape = event.target;\n  var maskBBox = maskShape.getCanvasBBox(); // 如果 bbox 过小则不返回\n\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n\n  return maskBBox;\n}\n\nfunction getMaskPath(context, tolerance) {\n  var event = context.event;\n  var maskShape = event.target;\n  var maskBBox = maskShape.getCanvasBBox(); // 如果 bbox 过小则不返回\n\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n\n  return maskShape.attr('path');\n}\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\n\n\nexport function getCurrentElement(context) {\n  var event = context.event;\n  var element;\n  var target = event.target;\n\n  if (target) {\n    element = target.get('element');\n  }\n\n  return element;\n}\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\n\nexport function getDelegationObject(context) {\n  var event = context.event;\n  var target = event.target;\n  var delegateObject;\n\n  if (target) {\n    delegateObject = target.get('delegateObject');\n  }\n\n  return delegateObject;\n}\nexport function isElementChange(context) {\n  var event = context.event.gEvent; // 在同一个 element 内部移动，label 和 shape 之间\n\n  if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\n\nexport function isList(delegateObject) {\n  return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\n\nexport function isSlider(delegateObject) {\n  return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\n\nexport function isMask(context) {\n  var event = context.event;\n  var target = event.target;\n  return target && target.get('name') === 'mask';\n}\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\n\nexport function getMaskedElements(context, tolerance) {\n  var target = context.event.target;\n\n  if (target.get('type') === 'path') {\n    var maskPath = getMaskPath(context, tolerance);\n\n    if (!maskPath) {\n      return;\n    }\n\n    return getElementsByPath(context.view, maskPath);\n  }\n\n  var maskBBox = getMaskBBox(context, tolerance); // 如果 bbox 过小则不返回\n\n  if (!maskBBox) {\n    return null;\n  }\n\n  return getIntersectElements(context.view, maskBBox);\n}\n/**\n * @ignore\n */\n\nexport function getSiblingMaskElements(context, sibling, tolerance) {\n  var maskBBox = getMaskBBox(context, tolerance); // 如果 bbox 过小则不返回\n\n  if (!maskBBox) {\n    return null;\n  }\n\n  var view = context.view;\n  var start = getSiblingPoint(view, sibling, {\n    x: maskBBox.x,\n    y: maskBBox.y\n  });\n  var end = getSiblingPoint(view, sibling, {\n    x: maskBBox.maxX,\n    y: maskBBox.maxY\n  });\n  var box = {\n    minX: start.x,\n    minY: start.y,\n    maxX: end.x,\n    maxY: end.y\n  };\n  return getIntersectElements(sibling, box);\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\n\nexport function getElements(view) {\n  var geometries = view.geometries;\n  var rst = [];\n  each(geometries, function (geom) {\n    var elements = geom.elements;\n    rst = rst.concat(elements);\n  });\n\n  if (view.views && view.views.length) {\n    each(view.views, function (subView) {\n      rst = rst.concat(getElements(subView));\n    });\n  }\n\n  return rst;\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\n\nexport function getElementsByField(view, field, value) {\n  var elements = getElements(view);\n  return elements.filter(function (el) {\n    return getElementValue(el, field) === value;\n  });\n}\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\n\nexport function getElementsByState(view, stateName) {\n  var geometries = view.geometries;\n  var rst = [];\n  each(geometries, function (geom) {\n    var elements = geom.getElementsBy(function (el) {\n      return el.hasState(stateName);\n    });\n    rst = rst.concat(elements);\n  });\n  return rst;\n}\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\n\nexport function getElementValue(element, field) {\n  var model = element.getModel();\n  var record = model.data;\n  var value;\n\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n\n  return value;\n}\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\n\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\n\nexport function getIntersectElements(view, box) {\n  var elements = getElements(view);\n  var rst = [];\n  each(elements, function (el) {\n    var shape = el.shape;\n    var shapeBBox = shape.getCanvasBBox();\n\n    if (intersectRect(box, shapeBBox)) {\n      rst.push(el);\n    }\n  });\n  return rst;\n}\n\nfunction pathToPoints(path) {\n  var points = [];\n  each(path, function (seg) {\n    var command = seg[0];\n\n    if (command !== 'A') {\n      for (var i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      var length_1 = seg.length;\n      points.push([seg[length_1 - 2], seg[length_1 - 1]]);\n    }\n  });\n  return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\n\n\nexport function getElementsByPath(view, path) {\n  var elements = getElements(view);\n  var points = pathToPoints(path);\n  var rst = elements.filter(function (el) {\n    var shape = el.shape;\n    var shapePoints;\n\n    if (shape.get('type') === 'path') {\n      shapePoints = pathToPoints(shape.attr('path'));\n    } else {\n      var shapeBBox = shape.getCanvasBBox();\n      shapePoints = toPoints(shapeBBox);\n    }\n\n    return isPolygonsIntersect(points, shapePoints);\n  });\n  return rst;\n}\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\n\nexport function getComponents(view) {\n  return view.getComponents().map(function (co) {\n    return co.component;\n  });\n}\n/** @ignore */\n\nexport function distance(p1, p2) {\n  var dx = p2.x - p1.x;\n  var dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n/** @ignore */\n\nexport function getSpline(points, z) {\n  if (points.length <= 2) {\n    return getLinePath(points, false);\n  }\n\n  var first = points[0];\n  var arr = [];\n  each(points, function (point) {\n    arr.push(point.x);\n    arr.push(point.y);\n  });\n  var path = catmullRom2bezier(arr, z, null);\n  path.unshift(['M', first.x, first.y]);\n  return path;\n}\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\n\nexport function isInBox(box, point) {\n  return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\n\nexport function getSilbings(view) {\n  var parent = view.parent;\n  var siblings = null;\n\n  if (parent) {\n    siblings = parent.views.filter(function (sub) {\n      return sub !== view;\n    });\n  }\n\n  return siblings;\n}\n\nfunction point2Normalize(view, point) {\n  var coord = view.getCoordinate();\n  return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\n\n\nexport function getSiblingPoint(view, sibling, point) {\n  var normalPoint = point2Normalize(view, point);\n  return sibling.getCoordinate().convert(normalPoint);\n}\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\n\nexport function isInRecords(records, record, xFiled, yField) {\n  var isIn = false;\n  each(records, function (r) {\n    if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n      isIn = true;\n      return false;\n    }\n  });\n  return isIn;\n} // 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\n\nexport function getScaleByField(view, field) {\n  var scale = view.getScaleByField(field);\n\n  if (!scale && view.views) {\n    each(view.views, function (subView) {\n      scale = getScaleByField(subView, field);\n\n      if (scale) {\n        return false; // 终止循环\n      }\n    });\n  }\n\n  return scale;\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,EAAeC,OAAf,QAA8B,YAA9B;AAKA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,gCAA/C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,mBAAT,QAAoC,iBAApC;;AAGA,SAASC,WAAT,CAAqBC,OAArB,EAAmDC,SAAnD,EAAoE;EAClE,IAAMC,KAAK,GAAGF,OAAO,CAACE,KAAtB;EACA,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAxB;EACA,IAAMC,QAAQ,GAAGF,SAAS,CAACG,aAAV,EAAjB,CAHkE,CAIlE;;EACA,IAAI,EAAED,QAAQ,CAACE,KAAT,IAAkBN,SAAlB,IAA+BI,QAAQ,CAACG,MAAT,IAAmBP,SAApD,CAAJ,EAAoE;IAClE,OAAO,IAAP;EACD;;EACD,OAAOI,QAAP;AACD;;AAED,SAASI,WAAT,CAAqBT,OAArB,EAAmDC,SAAnD,EAAoE;EAClE,IAAMC,KAAK,GAAGF,OAAO,CAACE,KAAtB;EACA,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAxB;EACA,IAAMC,QAAQ,GAAGF,SAAS,CAACG,aAAV,EAAjB,CAHkE,CAIlE;;EACA,IAAI,EAAED,QAAQ,CAACE,KAAT,IAAkBN,SAAlB,IAA+BI,QAAQ,CAACG,MAAT,IAAmBP,SAApD,CAAJ,EAAoE;IAClE,OAAO,IAAP;EACD;;EACD,OAAOE,SAAS,CAACO,IAAV,CAAe,MAAf,CAAP;AACD;AAED;;;;;;;AAKA,OAAM,SAAUC,iBAAV,CAA4BX,OAA5B,EAAwD;EAC5D,IAAME,KAAK,GAAGF,OAAO,CAACE,KAAtB;EACA,IAAIU,OAAJ;EACA,IAAMR,MAAM,GAAGF,KAAK,CAACE,MAArB;;EACA,IAAIA,MAAJ,EAAY;IACVQ,OAAO,GAAGR,MAAM,CAACS,GAAP,CAAW,SAAX,CAAV;EACD;;EACD,OAAOD,OAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAUE,mBAAV,CAA8Bd,OAA9B,EAA0D;EAC9D,IAAME,KAAK,GAAGF,OAAO,CAACE,KAAtB;EACA,IAAME,MAAM,GAAGF,KAAK,CAACE,MAArB;EACA,IAAIW,cAAJ;;EACA,IAAIX,MAAJ,EAAY;IACVW,cAAc,GAAGX,MAAM,CAACS,GAAP,CAAW,gBAAX,CAAjB;EACD;;EACD,OAAOE,cAAP;AACD;AAED,OAAM,SAAUC,eAAV,CAA0BhB,OAA1B,EAAsD;EAC1D,IAAME,KAAK,GAAGF,OAAO,CAACE,KAAR,CAAce,MAA5B,CAD0D,CAE1D;;EACA,IAAIf,KAAK,IAAIA,KAAK,CAACgB,SAAf,IAA4BhB,KAAK,CAACiB,OAAlC,IAA6CjB,KAAK,CAACgB,SAAN,CAAgBL,GAAhB,CAAoB,SAApB,MAAmCX,KAAK,CAACiB,OAAN,CAAcN,GAAd,CAAkB,SAAlB,CAApF,EAAkH;IAChH,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAUO,MAAV,CAAiBL,cAAjB,EAA4C;EAChD,OAAOA,cAAc,IAAIA,cAAc,CAACM,SAAjC,IAA8CN,cAAc,CAACM,SAAf,CAAyBD,MAAzB,EAArD;AACD;AAED;;;;;;AAKA,OAAM,SAAUE,QAAV,CAAmBP,cAAnB,EAA8C;EAClD,OAAOA,cAAc,IAAIA,cAAc,CAACM,SAAjC,IAA8CN,cAAc,CAACM,SAAf,CAAyBC,QAAzB,EAArD;AACD;AAED;;;;;;AAKA,OAAM,SAAUC,MAAV,CAAiBvB,OAAjB,EAA6C;EACjD,IAAME,KAAK,GAAGF,OAAO,CAACE,KAAtB;EACA,IAAME,MAAM,GAAGF,KAAK,CAACE,MAArB;EACA,OAAOA,MAAM,IAAIA,MAAM,CAACS,GAAP,CAAW,MAAX,MAAuB,MAAxC;AACD;AAED;;;;;;AAKA,OAAM,SAAUW,iBAAV,CAA4BxB,OAA5B,EAA0DC,SAA1D,EAA2E;EAC/E,IAAMG,MAAM,GAAGJ,OAAO,CAACE,KAAR,CAAcE,MAA7B;;EACA,IAAIA,MAAM,CAACS,GAAP,CAAW,MAAX,MAAuB,MAA3B,EAAmC;IACjC,IAAMY,QAAQ,GAAGhB,WAAW,CAACT,OAAD,EAAUC,SAAV,CAA5B;;IACA,IAAI,CAACwB,QAAL,EAAe;MACb;IACD;;IACD,OAAOC,iBAAiB,CAAC1B,OAAO,CAAC2B,IAAT,EAAeF,QAAf,CAAxB;EACD;;EACD,IAAMpB,QAAQ,GAAGN,WAAW,CAACC,OAAD,EAAUC,SAAV,CAA5B,CAT+E,CAU/E;;EACA,IAAI,CAACI,QAAL,EAAe;IACb,OAAO,IAAP;EACD;;EACD,OAAOuB,oBAAoB,CAAC5B,OAAO,CAAC2B,IAAT,EAAetB,QAAf,CAA3B;AACD;AAED;;;;AAGA,OAAM,SAAUwB,sBAAV,CAAiC7B,OAAjC,EAA+D8B,OAA/D,EAA8E7B,SAA9E,EAA+F;EACnG,IAAMI,QAAQ,GAAGN,WAAW,CAACC,OAAD,EAAUC,SAAV,CAA5B,CADmG,CAEnG;;EACA,IAAI,CAACI,QAAL,EAAe;IACb,OAAO,IAAP;EACD;;EACD,IAAMsB,IAAI,GAAG3B,OAAO,CAAC2B,IAArB;EACA,IAAMI,KAAK,GAAGC,eAAe,CAACL,IAAD,EAAOG,OAAP,EAAgB;IAAEG,CAAC,EAAE5B,QAAQ,CAAC4B,CAAd;IAAiBC,CAAC,EAAE7B,QAAQ,CAAC6B;EAA7B,CAAhB,CAA7B;EACA,IAAMC,GAAG,GAAGH,eAAe,CAACL,IAAD,EAAOG,OAAP,EAAgB;IAAEG,CAAC,EAAE5B,QAAQ,CAAC+B,IAAd;IAAoBF,CAAC,EAAE7B,QAAQ,CAACgC;EAAhC,CAAhB,CAA3B;EACA,IAAMC,GAAG,GAAG;IACVC,IAAI,EAAER,KAAK,CAACE,CADF;IAEVO,IAAI,EAAET,KAAK,CAACG,CAFF;IAGVE,IAAI,EAAED,GAAG,CAACF,CAHA;IAIVI,IAAI,EAAEF,GAAG,CAACD;EAJA,CAAZ;EAMA,OAAON,oBAAoB,CAACE,OAAD,EAAUQ,GAAV,CAA3B;AACD;AAED;;;;;;AAKA,OAAM,SAAUG,WAAV,CAAsBd,IAAtB,EAAgC;EACpC,IAAMe,UAAU,GAAGf,IAAI,CAACe,UAAxB;EACA,IAAIC,GAAG,GAAc,EAArB;EACAlD,IAAI,CAACiD,UAAD,EAAa,UAACE,IAAD,EAAe;IAC9B,IAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAtB;IACAF,GAAG,GAAGA,GAAG,CAACG,MAAJ,CAAWD,QAAX,CAAN;EACD,CAHG,CAAJ;;EAIA,IAAIlB,IAAI,CAACoB,KAAL,IAAcpB,IAAI,CAACoB,KAAL,CAAWC,MAA7B,EAAqC;IACnCvD,IAAI,CAACkC,IAAI,CAACoB,KAAN,EAAa,UAACE,OAAD,EAAQ;MACvBN,GAAG,GAAGA,GAAG,CAACG,MAAJ,CAAWL,WAAW,CAACQ,OAAD,CAAtB,CAAN;IACD,CAFG,CAAJ;EAGD;;EACD,OAAON,GAAP;AACD;AAED;;;;;;;;AAOA,OAAM,SAAUO,kBAAV,CAA6BvB,IAA7B,EAAyCwB,KAAzC,EAAwDC,KAAxD,EAAkE;EACtE,IAAMP,QAAQ,GAAGJ,WAAW,CAACd,IAAD,CAA5B;EACA,OAAOkB,QAAQ,CAACQ,MAAT,CAAgB,UAACC,EAAD,EAAG;IACxB,OAAOC,eAAe,CAACD,EAAD,EAAKH,KAAL,CAAf,KAA+BC,KAAtC;EACD,CAFM,CAAP;AAGD;AAED;;;;;;;AAMA,OAAM,SAAUI,kBAAV,CAA6B7B,IAA7B,EAAyC8B,SAAzC,EAA0D;EAC9D,IAAMf,UAAU,GAAGf,IAAI,CAACe,UAAxB;EACA,IAAIC,GAAG,GAAc,EAArB;EACAlD,IAAI,CAACiD,UAAD,EAAa,UAACE,IAAD,EAAe;IAC9B,IAAMC,QAAQ,GAAGD,IAAI,CAACc,aAAL,CAAmB,UAACJ,EAAD,EAAG;MAAK,SAAE,CAACK,QAAH,CAAYF,SAAZ;IAAsB,CAAjD,CAAjB;IACAd,GAAG,GAAGA,GAAG,CAACG,MAAJ,CAAWD,QAAX,CAAN;EACD,CAHG,CAAJ;EAIA,OAAOF,GAAP;AACD;AAED;;;;;;;AAMA,OAAM,SAAUY,eAAV,CAA0B3C,OAA1B,EAA4CuC,KAA5C,EAAiD;EACrD,IAAMS,KAAK,GAAGhD,OAAO,CAACiD,QAAR,EAAd;EACA,IAAMC,MAAM,GAAGF,KAAK,CAACG,IAArB;EACA,IAAIX,KAAJ;;EACA,IAAI1D,OAAO,CAACoE,MAAD,CAAX,EAAqB;IACnBV,KAAK,GAAGU,MAAM,CAAC,CAAD,CAAN,CAAUX,KAAV,CAAR;EACD,CAFD,MAEO;IACLC,KAAK,GAAGU,MAAM,CAACX,KAAD,CAAd;EACD;;EACD,OAAOC,KAAP;AACD;AAED;;;;;;;AAMA,OAAM,SAAUY,aAAV,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAkC;EACtC,OAAO,EAAEA,IAAI,CAAC3B,IAAL,GAAY0B,IAAI,CAAC7B,IAAjB,IAAyB8B,IAAI,CAAC9B,IAAL,GAAY6B,IAAI,CAAC1B,IAA1C,IAAkD2B,IAAI,CAAC1B,IAAL,GAAYyB,IAAI,CAAC5B,IAAnE,IAA2E6B,IAAI,CAAC7B,IAAL,GAAY4B,IAAI,CAACzB,IAA9F,CAAP;AACD;AAED;;;;;;;AAMA,OAAM,SAAUZ,oBAAV,CAA+BD,IAA/B,EAA2CW,GAA3C,EAA8C;EAClD,IAAMO,QAAQ,GAAGJ,WAAW,CAACd,IAAD,CAA5B;EACA,IAAMgB,GAAG,GAAG,EAAZ;EACAlD,IAAI,CAACoD,QAAD,EAAW,UAACS,EAAD,EAAG;IAChB,IAAMa,KAAK,GAAGb,EAAE,CAACa,KAAjB;IACA,IAAMC,SAAS,GAAGD,KAAK,CAAC7D,aAAN,EAAlB;;IACA,IAAI0D,aAAa,CAAC1B,GAAD,EAAM8B,SAAN,CAAjB,EAAmC;MACjCzB,GAAG,CAAC0B,IAAJ,CAASf,EAAT;IACD;EACF,CANG,CAAJ;EAOA,OAAOX,GAAP;AACD;;AACD,SAAS2B,YAAT,CAAsBC,IAAtB,EAAiC;EAC/B,IAAMC,MAAM,GAAG,EAAf;EACA/E,IAAI,CAAC8E,IAAD,EAAO,UAACE,GAAD,EAAI;IACb,IAAMC,OAAO,GAAGD,GAAG,CAAC,CAAD,CAAnB;;IACA,IAAIC,OAAO,KAAK,GAAhB,EAAqB;MACnB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACzB,MAAxB,EAAgC2B,CAAC,GAAGA,CAAC,GAAG,CAAxC,EAA2C;QACzCH,MAAM,CAACH,IAAP,CAAY,CAACI,GAAG,CAACE,CAAD,CAAJ,EAASF,GAAG,CAACE,CAAC,GAAG,CAAL,CAAZ,CAAZ;MACD;IACF,CAJD,MAIO;MACL,IAAMC,QAAM,GAAGH,GAAG,CAACzB,MAAnB;MACAwB,MAAM,CAACH,IAAP,CAAY,CAACI,GAAG,CAACG,QAAM,GAAG,CAAV,CAAJ,EAAkBH,GAAG,CAACG,QAAM,GAAG,CAAV,CAArB,CAAZ;IACD;EACF,CAVG,CAAJ;EAWA,OAAOJ,MAAP;AACD;AACD;;;;;;;;AAMA,OAAM,SAAU9C,iBAAV,CAA4BC,IAA5B,EAAwC4C,IAAxC,EAAmD;EACvD,IAAM1B,QAAQ,GAAGJ,WAAW,CAACd,IAAD,CAA5B;EACA,IAAM6C,MAAM,GAAGF,YAAY,CAACC,IAAD,CAA3B;EACA,IAAM5B,GAAG,GAAGE,QAAQ,CAACQ,MAAT,CAAgB,UAACC,EAAD,EAAY;IACtC,IAAMa,KAAK,GAAGb,EAAE,CAACa,KAAjB;IACA,IAAIU,WAAJ;;IACA,IAAIV,KAAK,CAACtD,GAAN,CAAU,MAAV,MAAsB,MAA1B,EAAkC;MAChCgE,WAAW,GAAGP,YAAY,CAACH,KAAK,CAACzD,IAAN,CAAW,MAAX,CAAD,CAA1B;IACD,CAFD,MAEO;MACL,IAAM0D,SAAS,GAAGD,KAAK,CAAC7D,aAAN,EAAlB;MACAuE,WAAW,GAAGhF,QAAQ,CAACuE,SAAD,CAAtB;IACD;;IACD,OAAOtE,mBAAmB,CAAC0E,MAAD,EAASK,WAAT,CAA1B;EACD,CAVW,CAAZ;EAWA,OAAOlC,GAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAUmC,aAAV,CAAwBnD,IAAxB,EAA4B;EAChC,OAAOA,IAAI,CAACmD,aAAL,GAAqBC,GAArB,CAAyB,UAACC,EAAD,EAAoB;IAAK,SAAE,CAAC3D,SAAH;EAAY,CAA9D,CAAP;AACD;AAED;;AACA,OAAM,SAAU4D,QAAV,CAAmBC,EAAnB,EAA8BC,EAA9B,EAAuC;EAC3C,IAAMC,EAAE,GAAGD,EAAE,CAAClD,CAAH,GAAOiD,EAAE,CAACjD,CAArB;EACA,IAAMoD,EAAE,GAAGF,EAAE,CAACjD,CAAH,GAAOgD,EAAE,CAAChD,CAArB;EACA,OAAOoD,IAAI,CAACC,IAAL,CAAUH,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAAP;AACD;AAED;;AACA,OAAM,SAAUG,SAAV,CAAoBhB,MAApB,EAAqCiB,CAArC,EAA+C;EACnD,IAAIjB,MAAM,CAACxB,MAAP,IAAiB,CAArB,EAAwB;IACtB,OAAOpD,WAAW,CAAC4E,MAAD,EAAS,KAAT,CAAlB;EACD;;EACD,IAAMkB,KAAK,GAAGlB,MAAM,CAAC,CAAD,CAApB;EACA,IAAMmB,GAAG,GAAG,EAAZ;EACAlG,IAAI,CAAC+E,MAAD,EAAS,UAACoB,KAAD,EAAM;IACjBD,GAAG,CAACtB,IAAJ,CAASuB,KAAK,CAAC3D,CAAf;IACA0D,GAAG,CAACtB,IAAJ,CAASuB,KAAK,CAAC1D,CAAf;EACD,CAHG,CAAJ;EAIA,IAAMqC,IAAI,GAAG5E,iBAAiB,CAACgG,GAAD,EAAMF,CAAN,EAAS,IAAT,CAA9B;EACAlB,IAAI,CAACsB,OAAL,CAAa,CAAC,GAAD,EAAMH,KAAK,CAACzD,CAAZ,EAAeyD,KAAK,CAACxD,CAArB,CAAb;EACA,OAAOqC,IAAP;AACD;AAED;;;;;;;AAMA,OAAM,SAAUuB,OAAV,CAAkBxD,GAAlB,EAA6BsD,KAA7B,EAAyC;EAC7C,OAAOtD,GAAG,CAACL,CAAJ,IAAS2D,KAAK,CAAC3D,CAAf,IAAoBK,GAAG,CAACF,IAAJ,IAAYwD,KAAK,CAAC3D,CAAtC,IAA2CK,GAAG,CAACJ,CAAJ,IAAS0D,KAAK,CAAC1D,CAA1D,IAA+DI,GAAG,CAACD,IAAJ,GAAWuD,KAAK,CAAC1D,CAAvF;AACD;AAED;;;;;;;AAMA,OAAM,SAAU6D,WAAV,CAAsBpE,IAAtB,EAAgC;EACpC,IAAMqE,MAAM,GAAGrE,IAAI,CAACqE,MAApB;EACA,IAAIC,QAAQ,GAAG,IAAf;;EACA,IAAID,MAAJ,EAAY;IACVC,QAAQ,GAAGD,MAAM,CAACjD,KAAP,CAAaM,MAAb,CAAoB,UAAC6C,GAAD,EAAI;MAAK,UAAG,KAAKvE,IAAR;IAAY,CAAzC,CAAX;EACD;;EACD,OAAOsE,QAAP;AACD;;AAED,SAASE,eAAT,CAAyBxE,IAAzB,EAAqCiE,KAArC,EAAiD;EAC/C,IAAMQ,KAAK,GAAGzE,IAAI,CAAC0E,aAAL,EAAd;EACA,OAAOD,KAAK,CAACE,MAAN,CAAaV,KAAb,CAAP;AACD;AACD;;;;;;;;;AAOA,OAAM,SAAU5D,eAAV,CAA0BL,IAA1B,EAAsCG,OAAtC,EAAqD8D,KAArD,EAAiE;EACrE,IAAMW,WAAW,GAAGJ,eAAe,CAACxE,IAAD,EAAOiE,KAAP,CAAnC;EACA,OAAO9D,OAAO,CAACuE,aAAR,GAAwBG,OAAxB,CAAgCD,WAAhC,CAAP;AACD;AAED;;;;;;;;;;;;;AAYA,OAAM,SAAUE,WAAV,CAAsBC,OAAtB,EAAyC5C,MAAzC,EAAyD6C,MAAzD,EAAyEC,MAAzE,EAAuF;EAC3F,IAAIC,IAAI,GAAG,KAAX;EACApH,IAAI,CAACiH,OAAD,EAAU,UAACI,CAAD,EAAE;IACd,IAAIA,CAAC,CAACH,MAAD,CAAD,KAAc7C,MAAM,CAAC6C,MAAD,CAApB,IAAgCG,CAAC,CAACF,MAAD,CAAD,KAAc9C,MAAM,CAAC8C,MAAD,CAAxD,EAAkE;MAChEC,IAAI,GAAG,IAAP;MACA,OAAO,KAAP;IACD;EACF,CALG,CAAJ;EAMA,OAAOA,IAAP;AACD,C,CAED;;AACA,OAAM,SAAUE,eAAV,CAA0BpF,IAA1B,EAAsCwB,KAAtC,EAAmD;EACvD,IAAI6D,KAAK,GAAGrF,IAAI,CAACoF,eAAL,CAAqB5D,KAArB,CAAZ;;EACA,IAAI,CAAC6D,KAAD,IAAUrF,IAAI,CAACoB,KAAnB,EAA0B;IACxBtD,IAAI,CAACkC,IAAI,CAACoB,KAAN,EAAa,UAACE,OAAD,EAAQ;MACvB+D,KAAK,GAAGD,eAAe,CAAC9D,OAAD,EAAUE,KAAV,CAAvB;;MACA,IAAI6D,KAAJ,EAAW;QACT,OAAO,KAAP,CADS,CACK;MACf;IACF,CALG,CAAJ;EAMD;;EACD,OAAOA,KAAP;AACD","names":["each","isArray","catmullRom2bezier","getLinePath","toPoints","isPolygonsIntersect","getMaskBBox","context","tolerance","event","maskShape","target","maskBBox","getCanvasBBox","width","height","getMaskPath","attr","getCurrentElement","element","get","getDelegationObject","delegateObject","isElementChange","gEvent","fromShape","toShape","isList","component","isSlider","isMask","getMaskedElements","maskPath","getElementsByPath","view","getIntersectElements","getSiblingMaskElements","sibling","start","getSiblingPoint","x","y","end","maxX","maxY","box","minX","minY","getElements","geometries","rst","geom","elements","concat","views","length","subView","getElementsByField","field","value","filter","el","getElementValue","getElementsByState","stateName","getElementsBy","hasState","model","getModel","record","data","intersectRect","box1","box2","shape","shapeBBox","push","pathToPoints","path","points","seg","command","i","length_1","shapePoints","getComponents","map","co","distance","p1","p2","dx","dy","Math","sqrt","getSpline","z","first","arr","point","unshift","isInBox","getSilbings","parent","siblings","sub","point2Normalize","coord","getCoordinate","invert","normalPoint","convert","isInRecords","records","xFiled","yField","isIn","r","getScaleByField","scale"],"sourceRoot":"","sources":["../../../src/interaction/action/util.ts"],"sourcesContent":["import { each, isArray } from '@antv/util';\nimport { View } from '../../chart';\nimport { BBox, PathCommand, Point } from '../../dependents';\nimport Geometry from '../../geometry/base';\nimport Element from '../../geometry/element/';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport { isPolygonsIntersect } from '@antv/path-util';\nimport { ComponentOption, IInteractionContext, LooseObject } from '../../interface';\n\nfunction getMaskBBox(context: IInteractionContext, tolerance: number) {\n  const event = context.event;\n  const maskShape = event.target;\n  const maskBBox = maskShape.getCanvasBBox();\n  // 如果 bbox 过小则不返回\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n  return maskBBox;\n}\n\nfunction getMaskPath(context: IInteractionContext, tolerance: number) {\n  const event = context.event;\n  const maskShape = event.target;\n  const maskBBox = maskShape.getCanvasBBox();\n  // 如果 bbox 过小则不返回\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n  return maskShape.attr('path');\n}\n\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\nexport function getCurrentElement(context: IInteractionContext): Element {\n  const event = context.event;\n  let element;\n  const target = event.target;\n  if (target) {\n    element = target.get('element');\n  }\n  return element;\n}\n\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\nexport function getDelegationObject(context: IInteractionContext): LooseObject {\n  const event = context.event;\n  const target = event.target;\n  let delegateObject;\n  if (target) {\n    delegateObject = target.get('delegateObject');\n  }\n  return delegateObject;\n}\n\nexport function isElementChange(context: IInteractionContext) {\n  const event = context.event.gEvent;\n  // 在同一个 element 内部移动，label 和 shape 之间\n  if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isList(delegateObject: LooseObject): boolean {\n  return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isSlider(delegateObject: LooseObject): boolean {\n  return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\nexport function isMask(context: IInteractionContext): boolean {\n  const event = context.event;\n  const target = event.target;\n  return target && target.get('name') === 'mask';\n}\n\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\nexport function getMaskedElements(context: IInteractionContext, tolerance: number): Element[] {\n  const target = context.event.target;\n  if (target.get('type') === 'path') {\n    const maskPath = getMaskPath(context, tolerance);\n    if (!maskPath) {\n      return;\n    }\n    return getElementsByPath(context.view, maskPath);\n  }\n  const maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getIntersectElements(context.view, maskBBox);\n}\n\n/**\n * @ignore\n */\nexport function getSiblingMaskElements(context: IInteractionContext, sibling: View, tolerance: number) {\n  const maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  const view = context.view;\n  const start = getSiblingPoint(view, sibling, { x: maskBBox.x, y: maskBBox.y });\n  const end = getSiblingPoint(view, sibling, { x: maskBBox.maxX, y: maskBBox.maxY });\n  const box = {\n    minX: start.x,\n    minY: start.y,\n    maxX: end.x,\n    maxY: end.y,\n  };\n  return getIntersectElements(sibling, box);\n}\n\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\nexport function getElements(view: View): Element[] {\n  const geometries = view.geometries;\n  let rst: Element[] = [];\n  each(geometries, (geom: Geometry) => {\n    const elements = geom.elements;\n    rst = rst.concat(elements);\n  });\n  if (view.views && view.views.length) {\n    each(view.views, (subView) => {\n      rst = rst.concat(getElements(subView));\n    });\n  }\n  return rst;\n}\n\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\nexport function getElementsByField(view: View, field: string, value: any) {\n  const elements = getElements(view);\n  return elements.filter((el) => {\n    return getElementValue(el, field) === value;\n  });\n}\n\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\nexport function getElementsByState(view: View, stateName: string): Element[] {\n  const geometries = view.geometries;\n  let rst: Element[] = [];\n  each(geometries, (geom: Geometry) => {\n    const elements = geom.getElementsBy((el) => el.hasState(stateName));\n    rst = rst.concat(elements);\n  });\n  return rst;\n}\n\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element: Element, field) {\n  const model = element.getModel();\n  const record = model.data;\n  let value;\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n  return value;\n}\n\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\nexport function getIntersectElements(view: View, box) {\n  const elements = getElements(view);\n  const rst = [];\n  each(elements, (el) => {\n    const shape = el.shape;\n    const shapeBBox = shape.getCanvasBBox();\n    if (intersectRect(box, shapeBBox)) {\n      rst.push(el);\n    }\n  });\n  return rst;\n}\nfunction pathToPoints(path: any[]) {\n  const points = [];\n  each(path, (seg) => {\n    const command = seg[0];\n    if (command !== 'A') {\n      for (let i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      const length = seg.length;\n      points.push([seg[length - 2], seg[length - 1]]);\n    }\n  });\n  return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\nexport function getElementsByPath(view: View, path: any[]) {\n  const elements = getElements(view);\n  const points = pathToPoints(path);\n  const rst = elements.filter((el: Element) => {\n    const shape = el.shape;\n    let shapePoints;\n    if (shape.get('type') === 'path') {\n      shapePoints = pathToPoints(shape.attr('path'));\n    } else {\n      const shapeBBox = shape.getCanvasBBox();\n      shapePoints = toPoints(shapeBBox);\n    }\n    return isPolygonsIntersect(points, shapePoints);\n  });\n  return rst;\n}\n\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\nexport function getComponents(view) {\n  return view.getComponents().map((co: ComponentOption) => co.component);\n}\n\n/** @ignore */\nexport function distance(p1: Point, p2: Point) {\n  const dx = p2.x - p1.x;\n  const dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/** @ignore */\nexport function getSpline(points: Point[], z: boolean): PathCommand[] {\n  if (points.length <= 2) {\n    return getLinePath(points, false);\n  }\n  const first = points[0];\n  const arr = [];\n  each(points, (point) => {\n    arr.push(point.x);\n    arr.push(point.y);\n  });\n  const path = catmullRom2bezier(arr, z, null);\n  path.unshift(['M', first.x, first.y]);\n  return path;\n}\n\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\nexport function isInBox(box: BBox, point: Point) {\n  return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSilbings(view: View): View[] {\n  const parent = view.parent;\n  let siblings = null;\n  if (parent) {\n    siblings = parent.views.filter((sub) => sub !== view);\n  }\n  return siblings;\n}\n\nfunction point2Normalize(view: View, point: Point): Point {\n  const coord = view.getCoordinate();\n  return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\nexport function getSiblingPoint(view: View, sibling: View, point: Point): Point {\n  const normalPoint = point2Normalize(view, point);\n  return sibling.getCoordinate().convert(normalPoint);\n}\n\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\nexport function isInRecords(records: object[], record: object, xFiled: string, yField: string) {\n  let isIn = false;\n  each(records, (r) => {\n    if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n      isIn = true;\n      return false;\n    }\n  });\n  return isIn;\n}\n\n// 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\nexport function getScaleByField(view: View, field: string) {\n  let scale = view.getScaleByField(field);\n  if (!scale && view.views) {\n    each(view.views, (subView) => {\n      scale = getScaleByField(subView, field);\n      if (scale) {\n        return false; // 终止循环\n      }\n    });\n  }\n  return scale;\n}\n"]},"metadata":{},"sourceType":"module"}