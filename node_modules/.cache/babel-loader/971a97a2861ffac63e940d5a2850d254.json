{"ast":null,"code":"import { deepMix, get, map } from '@antv/util';\n/**\n * @ignore\n * get the grid theme by type, will mix the common cfg of axis\n * @param theme\n * @param direction\n * @returns theme object\n */\n\nexport function getGridThemeCfg(theme, direction) {\n  var axisTheme = deepMix({}, get(theme, ['components', 'axis', 'common']), get(theme, ['components', 'axis', direction]));\n  return get(axisTheme, ['grid'], {});\n}\n/**\n * @ignore\n * get axis grid items\n * @param coordinate\n * @param scale\n * @param dim\n * @return items\n */\n\nexport function getLineGridItems(coordinate, scale, dim, alignTick) {\n  var items = [];\n  var ticks = scale.getTicks();\n\n  if (coordinate.isPolar) {\n    // 补全 ticks\n    ticks.push({\n      value: 1,\n      text: '',\n      tickValue: ''\n    });\n  }\n\n  ticks.reduce(function (preTick, currentTick, currentIndex) {\n    var currentValue = currentTick.value;\n\n    if (alignTick) {\n      items.push({\n        points: [coordinate.convert(dim === 'y' ? {\n          x: 0,\n          y: currentValue\n        } : {\n          x: currentValue,\n          y: 0\n        }), coordinate.convert(dim === 'y' ? {\n          x: 1,\n          y: currentValue\n        } : {\n          x: currentValue,\n          y: 1\n        })]\n      });\n    } else {\n      if (currentIndex) {\n        var preValue = preTick.value;\n        var middleValue = (preValue + currentValue) / 2;\n        items.push({\n          points: [coordinate.convert(dim === 'y' ? {\n            x: 0,\n            y: middleValue\n          } : {\n            x: middleValue,\n            y: 0\n          }), coordinate.convert(dim === 'y' ? {\n            x: 1,\n            y: middleValue\n          } : {\n            x: middleValue,\n            y: 1\n          })]\n        });\n      }\n    }\n\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n/**\n * @ignore\n * get\n * @param coordinate\n * @param xScale\n * @param yScale\n * @param dim\n * @returns items\n */\n\nexport function getCircleGridItems(coordinate, xScale, yScale, alignTick, dim) {\n  var count = xScale.values.length;\n  var items = [];\n  var ticks = yScale.getTicks();\n  ticks.reduce(function (preTick, currentTick) {\n    var preValue = preTick ? preTick.value : currentTick.value; // 只有一项数据时取当前值\n\n    var currentValue = currentTick.value;\n    var middleValue = (preValue + currentValue) / 2;\n\n    if (dim === 'x') {\n      // 如果是 x 轴作为半径轴，那么只需要取圆弧收尾两个即可\n      items.push({\n        points: [coordinate.convert({\n          x: alignTick ? currentValue : middleValue,\n          y: 0\n        }), coordinate.convert({\n          x: alignTick ? currentValue : middleValue,\n          y: 1\n        })]\n      });\n    } else {\n      items.push({\n        points: map(Array(count + 1), function (__, idx) {\n          return coordinate.convert({\n            x: idx / count,\n            y: alignTick ? currentValue : middleValue\n          });\n        })\n      });\n    }\n\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n/**\n * @ignore\n * show grid or not\n * @param axisTheme\n * @param axisOption\n */\n\nexport function showGrid(axisTheme, axisOption) {\n  var userGrid = get(axisOption, 'grid');\n\n  if (userGrid === null) {\n    return false;\n  }\n\n  var themeGrid = get(axisTheme, 'grid');\n  return !(userGrid === undefined && themeGrid === null);\n}","map":{"version":3,"mappings":"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","names":["deepMix","get","map","getGridThemeCfg","theme","direction","axisTheme","getLineGridItems","coordinate","scale","dim","alignTick","items","ticks","getTicks","isPolar","push","value","text","tickValue","reduce","preTick","currentTick","currentIndex","currentValue","points","convert","x","y","preValue","middleValue","getCircleGridItems","xScale","yScale","count","values","length","Array","__","idx","showGrid","axisOption","userGrid","themeGrid","undefined"],"sourceRoot":"","sources":["../../src/util/grid.ts"],"sourcesContent":["import { deepMix, get, map } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Coordinate, Scale, Tick } from '../dependents';\n\n/**\n * @ignore\n * get the grid theme by type, will mix the common cfg of axis\n * @param theme\n * @param direction\n * @returns theme object\n */\nexport function getGridThemeCfg(theme: object, direction: DIRECTION | 'common'): object {\n  const axisTheme = deepMix(\n    {},\n    get(theme, ['components', 'axis', 'common']),\n    get(theme, ['components', 'axis', direction])\n  );\n  return get(axisTheme, ['grid'], {});\n}\n\n/**\n * @ignore\n * get axis grid items\n * @param coordinate\n * @param scale\n * @param dim\n * @return items\n */\nexport function getLineGridItems(coordinate: Coordinate, scale: Scale, dim: string, alignTick?: boolean) {\n  const items = [];\n  const ticks = scale.getTicks();\n  if (coordinate.isPolar) {\n    // 补全 ticks\n    ticks.push({\n      value: 1,\n      text: '',\n      tickValue: '',\n    });\n  }\n  ticks.reduce((preTick: Tick, currentTick: Tick, currentIndex) => {\n    const currentValue = currentTick.value;\n    if (alignTick) {\n      items.push({\n        points: [\n          coordinate.convert(dim === 'y' ? { x: 0, y: currentValue } : { x: currentValue, y: 0 }),\n          coordinate.convert(dim === 'y' ? { x: 1, y: currentValue } : { x: currentValue, y: 1 }),\n        ],\n      });\n    } else {\n      if (currentIndex) {\n        const preValue = preTick.value;\n        const middleValue = (preValue + currentValue) / 2;\n        items.push({\n          points: [\n            coordinate.convert(dim === 'y' ? { x: 0, y: middleValue } : { x: middleValue, y: 0 }),\n            coordinate.convert(dim === 'y' ? { x: 1, y: middleValue } : { x: middleValue, y: 1 }),\n          ],\n        });\n      }\n    }\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n\n/**\n * @ignore\n * get\n * @param coordinate\n * @param xScale\n * @param yScale\n * @param dim\n * @returns items\n */\nexport function getCircleGridItems(\n  coordinate: Coordinate,\n  xScale: Scale,\n  yScale: Scale,\n  alignTick: boolean,\n  dim: string\n) {\n  const count = xScale.values.length;\n  const items = [];\n  const ticks = yScale.getTicks();\n\n  ticks.reduce((preTick: Tick, currentTick: Tick) => {\n    const preValue = preTick ? preTick.value : currentTick.value; // 只有一项数据时取当前值\n    const currentValue = currentTick.value;\n    const middleValue = (preValue + currentValue) / 2;\n    if (dim === 'x') {\n      // 如果是 x 轴作为半径轴，那么只需要取圆弧收尾两个即可\n      items.push({\n        points: [\n          coordinate.convert({\n            x: alignTick ? currentValue : middleValue,\n            y: 0,\n          }),\n          coordinate.convert({\n            x: alignTick ? currentValue : middleValue,\n            y: 1,\n          }),\n        ],\n      });\n    } else {\n      items.push({\n        points: map(Array(count + 1), (__: any, idx: number) => {\n          return coordinate.convert({\n            x: idx / count,\n            y: alignTick ? currentValue : middleValue,\n          });\n        }),\n      });\n    }\n\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n\n/**\n * @ignore\n * show grid or not\n * @param axisTheme\n * @param axisOption\n */\nexport function showGrid(axisTheme: any, axisOption: any): boolean {\n  const userGrid = get(axisOption, 'grid');\n  if (userGrid === null) {\n    return false;\n  }\n\n  const themeGrid = get(axisTheme, 'grid');\n\n  return !(userGrid === undefined && themeGrid === null);\n}\n"]},"metadata":{},"sourceType":"module"}