{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isEmpty, clamp } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction getRectAttrs(points, size) {\n  var width = Math.abs(points[0].x - points[2].x);\n  var height = Math.abs(points[0].y - points[2].y);\n  var len = Math.min(width, height);\n\n  if (size) {\n    len = clamp(size, 0, Math.min(width, height));\n  }\n\n  len = len / 2;\n  var centerX = (points[0].x + points[2].x) / 2;\n  var centerY = (points[0].y + points[2].y) / 2;\n  return {\n    x: centerX - len,\n    y: centerY - len,\n    width: len * 2,\n    height: len * 2\n  };\n}\n\nregisterShape('polygon', 'square', {\n  draw: function (cfg, container) {\n    if (!isEmpty(cfg.points)) {\n      var shapeAttrs = getStyle(cfg, true, true);\n      var points = this.parsePoints(cfg.points); // 转换为画布坐标\n\n      return container.addShape('rect', {\n        attrs: __assign(__assign({}, shapeAttrs), getRectAttrs(points, cfg.size)),\n        name: 'polygon'\n      });\n    }\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color\n      }\n    };\n  }\n});","map":{"version":3,"mappings":";AAAA,SAASA,OAAT,EAAkBC,KAAlB,QAA+B,YAA/B;AAIA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAAqCC,IAArC,EAAiD;EAC/C,IAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASJ,MAAM,CAAC,CAAD,CAAN,CAAUK,CAAV,GAAcL,MAAM,CAAC,CAAD,CAAN,CAAUK,CAAjC,CAAd;EACA,IAAMC,MAAM,GAAGH,IAAI,CAACC,GAAL,CAASJ,MAAM,CAAC,CAAD,CAAN,CAAUO,CAAV,GAAcP,MAAM,CAAC,CAAD,CAAN,CAAUO,CAAjC,CAAf;EAEA,IAAIC,GAAG,GAAGL,IAAI,CAACM,GAAL,CAASP,KAAT,EAAgBI,MAAhB,CAAV;;EACA,IAAIL,IAAJ,EAAU;IACRO,GAAG,GAAGZ,KAAK,CAACK,IAAD,EAAO,CAAP,EAAUE,IAAI,CAACM,GAAL,CAASP,KAAT,EAAgBI,MAAhB,CAAV,CAAX;EACD;;EACDE,GAAG,GAAGA,GAAG,GAAG,CAAZ;EACA,IAAME,OAAO,GAAG,CAACV,MAAM,CAAC,CAAD,CAAN,CAAUK,CAAV,GAAcL,MAAM,CAAC,CAAD,CAAN,CAAUK,CAAzB,IAA8B,CAA9C;EACA,IAAMM,OAAO,GAAG,CAACX,MAAM,CAAC,CAAD,CAAN,CAAUO,CAAV,GAAcP,MAAM,CAAC,CAAD,CAAN,CAAUO,CAAzB,IAA8B,CAA9C;EAEA,OAAO;IACLF,CAAC,EAAEK,OAAO,GAAGF,GADR;IAELD,CAAC,EAAEI,OAAO,GAAGH,GAFR;IAGLN,KAAK,EAAEM,GAAG,GAAG,CAHR;IAILF,MAAM,EAAEE,GAAG,GAAG;EAJT,CAAP;AAMD;;AAEDX,aAAa,CAAC,SAAD,EAAY,QAAZ,EAAsB;EACjCe,IAAI,EAAJ,UAAKC,GAAL,EAAqBC,SAArB,EAAsC;IACpC,IAAI,CAACnB,OAAO,CAACkB,GAAG,CAACb,MAAL,CAAZ,EAA0B;MACxB,IAAMe,UAAU,GAAGjB,QAAQ,CAACe,GAAD,EAAM,IAAN,EAAY,IAAZ,CAA3B;MACA,IAAMb,MAAM,GAAG,KAAKgB,WAAL,CAAiBH,GAAG,CAACb,MAArB,CAAf,CAFwB,CAEqB;;MAC7C,OAAOc,SAAS,CAACG,QAAV,CAAmB,MAAnB,EAA2B;QAChCC,KAAK,wBACAH,UADA,GAEAhB,YAAY,CAACC,MAAD,EAASa,GAAG,CAACZ,IAAb,CAFZ,CAD2B;QAKhCkB,IAAI,EAAE;MAL0B,CAA3B,CAAP;IAOD;EACF,CAbgC;EAcjCC,SAAS,EAAT,UAAUC,SAAV,EAAmC;IACzB,SAAK,GAAKA,SAAS,MAAnB;IACR,OAAO;MACLC,MAAM,EAAE,QADH;MAELC,KAAK,EAAE;QACLC,CAAC,EAAE,CADE;QAELC,IAAI,EAAEC;MAFD;IAFF,CAAP;EAOD;AAvBgC,CAAtB,CAAb","names":["isEmpty","clamp","registerShape","getStyle","getRectAttrs","points","size","width","Math","abs","x","height","y","len","min","centerX","centerY","draw","cfg","container","shapeAttrs","parsePoints","addShape","attrs","name","getMarker","markerCfg","symbol","style","r","fill","color"],"sourceRoot":"","sources":["../../../../src/geometry/shape/polygon/square.ts"],"sourcesContent":["import { isEmpty, clamp } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction getRectAttrs(points: any[], size: number) {\n  const width = Math.abs(points[0].x - points[2].x);\n  const height = Math.abs(points[0].y - points[2].y);\n\n  let len = Math.min(width, height);\n  if (size) {\n    len = clamp(size, 0, Math.min(width, height));\n  }\n  len = len / 2;\n  const centerX = (points[0].x + points[2].x) / 2;\n  const centerY = (points[0].y + points[2].y) / 2;\n\n  return {\n    x: centerX - len,\n    y: centerY - len,\n    width: len * 2,\n    height: len * 2,\n  };\n}\n\nregisterShape('polygon', 'square', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    if (!isEmpty(cfg.points)) {\n      const shapeAttrs = getStyle(cfg, true, true);\n      const points = this.parsePoints(cfg.points); // 转换为画布坐标\n      return container.addShape('rect', {\n        attrs: {\n          ...shapeAttrs,\n          ...getRectAttrs(points, cfg.size), // 获取 rect 绘图信息\n        },\n        name: 'polygon',\n      });\n    }\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n"]},"metadata":{},"sourceType":"module"}