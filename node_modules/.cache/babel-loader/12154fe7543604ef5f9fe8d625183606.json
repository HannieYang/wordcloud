{"ast":null,"code":"import { __read } from \"tslib\";\nimport { each } from '@antv/util';\nimport { DIRECTION } from '../constant';\n/**\n * 用于包围盒计算。\n */\n\nvar BBox =\n/** @class */\nfunction () {\n  function BBox(x, y, width, height) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (width === void 0) {\n      width = 0;\n    }\n\n    if (height === void 0) {\n      height = 0;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.height = height;\n    this.width = width;\n  }\n\n  BBox.fromRange = function (minX, minY, maxX, maxY) {\n    return new BBox(minX, minY, maxX - minX, maxY - minY);\n  };\n\n  BBox.fromObject = function (bbox) {\n    return new BBox(bbox.minX, bbox.minY, bbox.width, bbox.height);\n  };\n\n  Object.defineProperty(BBox.prototype, \"minX\", {\n    get: function () {\n      return this.x;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"maxX\", {\n    get: function () {\n      return this.x + this.width;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"minY\", {\n    get: function () {\n      return this.y;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"maxY\", {\n    get: function () {\n      return this.y + this.height;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"tl\", {\n    get: function () {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"tr\", {\n    get: function () {\n      return {\n        x: this.maxX,\n        y: this.y\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"bl\", {\n    get: function () {\n      return {\n        x: this.x,\n        y: this.maxY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"br\", {\n    get: function () {\n      return {\n        x: this.maxX,\n        y: this.maxY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"top\", {\n    get: function () {\n      return {\n        x: this.x + this.width / 2,\n        y: this.minY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"right\", {\n    get: function () {\n      return {\n        x: this.maxX,\n        y: this.y + this.height / 2\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"bottom\", {\n    get: function () {\n      return {\n        x: this.x + this.width / 2,\n        y: this.maxY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"left\", {\n    get: function () {\n      return {\n        x: this.minX,\n        y: this.y + this.height / 2\n      };\n    },\n    enumerable: false,\n    configurable: true\n  }); // end 计算属性\n\n  /**\n   * 包围盒是否相等\n   * @param {BBox} bbox 包围盒\n   * @returns      包围盒是否相等\n   */\n\n  BBox.prototype.isEqual = function (bbox) {\n    return this.x === bbox.x && this.y === bbox.y && this.width === bbox.width && this.height === bbox.height;\n  };\n  /**\n   * 是否包含了另一个包围盒\n   * @param child\n   */\n\n\n  BBox.prototype.contains = function (child) {\n    return child.minX >= this.minX && child.maxX <= this.maxX && child.minY >= this.minY && child.maxY <= this.maxY;\n  };\n  /**\n   * 克隆包围盒\n   * @returns 包围盒\n   */\n\n\n  BBox.prototype.clone = function () {\n    return new BBox(this.x, this.y, this.width, this.height);\n  };\n  /**\n   * 取并集\n   * @param subBBox\n   */\n\n\n  BBox.prototype.add = function () {\n    var subBBox = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      subBBox[_i] = arguments[_i];\n    }\n\n    var bbox = this.clone();\n    each(subBBox, function (b) {\n      bbox.x = Math.min(b.x, bbox.x);\n      bbox.y = Math.min(b.y, bbox.y);\n      bbox.width = Math.max(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.max(b.maxY, bbox.maxY) - bbox.y;\n    });\n    return bbox;\n  };\n  /**\n   * 取交集\n   * @param subBBox\n   */\n\n\n  BBox.prototype.merge = function () {\n    var subBBox = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      subBBox[_i] = arguments[_i];\n    }\n\n    var bbox = this.clone();\n    each(subBBox, function (b) {\n      bbox.x = Math.max(b.x, bbox.x);\n      bbox.y = Math.max(b.y, bbox.y);\n      bbox.width = Math.min(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.min(b.maxY, bbox.maxY) - bbox.y;\n    });\n    return bbox;\n  };\n  /**\n   * bbox 剪裁\n   * @param subBBox\n   * @param direction\n   */\n\n\n  BBox.prototype.cut = function (subBBox, direction) {\n    var width = subBBox.width;\n    var height = subBBox.height;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        return BBox.fromRange(this.minX, this.minY + height, this.maxX, this.maxY);\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        return BBox.fromRange(this.minX, this.minY, this.maxX - width, this.maxY);\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        return BBox.fromRange(this.minX, this.minY, this.maxX, this.maxY - height);\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        return BBox.fromRange(this.minX + width, this.minY, this.maxX, this.maxY);\n\n      default:\n        // 其他情况不裁剪，原样返回\n        return this;\n    }\n  };\n  /**\n   * 收缩形成新的\n   * @param gap\n   */\n\n\n  BBox.prototype.shrink = function (gap) {\n    var _a = __read(gap, 4),\n        top = _a[0],\n        right = _a[1],\n        bottom = _a[2],\n        left = _a[3];\n\n    return new BBox(this.x + left, this.y + top, this.width - left - right, this.height - top - bottom);\n  };\n  /**\n   * 扩张形成新的\n   * @param gap\n   */\n\n\n  BBox.prototype.expand = function (gap) {\n    var _a = __read(gap, 4),\n        top = _a[0],\n        right = _a[1],\n        bottom = _a[2],\n        left = _a[3];\n\n    return new BBox(this.x - left, this.y - top, this.width + left + right, this.height + top + bottom);\n  };\n  /**\n   * get the gap of two bbox, if not exceed, then 0\n   * @param bbox\n   * @returns [top, right, bottom, left]\n   */\n\n\n  BBox.prototype.exceed = function (bbox) {\n    return [Math.max(-this.minY + bbox.minY, 0), Math.max(this.maxX - bbox.maxX, 0), Math.max(this.maxY - bbox.maxY, 0), Math.max(-this.minX + bbox.minX, 0)];\n  };\n  /**\n   * 是否碰撞\n   * @param bbox\n   */\n\n\n  BBox.prototype.collide = function (bbox) {\n    return this.minX < bbox.maxX && this.maxX > bbox.minX && this.minY < bbox.maxY && this.maxY > bbox.minY;\n  };\n  /**\n   * 获取包围盒大小\n   * @returns 包围盒大小\n   */\n\n\n  BBox.prototype.size = function () {\n    return this.width * this.height;\n  };\n  /**\n   * 点是否在 bbox 中\n   * @param p\n   */\n\n\n  BBox.prototype.isPointIn = function (p) {\n    return p.x >= this.minX && p.x <= this.maxX && p.y >= this.minY && p.y <= this.maxY;\n  };\n\n  return BBox;\n}();\n\nexport { BBox };\n/**\n * 从一个 bbox 的 region 获取 bbox\n * @param bbox\n * @param region\n */\n\nexport var getRegionBBox = function (bbox, region) {\n  var start = region.start,\n      end = region.end;\n  return new BBox(bbox.x + bbox.width * start.x, bbox.y + bbox.height * start.y, bbox.width * Math.abs(end.x - start.x), bbox.height * Math.abs(end.y - start.y));\n};\n/**\n * 将 bbox 转换成 points\n * @param bbox\n */\n\nexport function toPoints(bbox) {\n  return [[bbox.minX, bbox.minY], [bbox.maxX, bbox.minY], [bbox.maxX, bbox.maxY], [bbox.minX, bbox.maxY]];\n}","map":{"version":3,"mappings":"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","names":["each","DIRECTION","x","y","width","height","BBox","minX","minY","maxX","maxY","bbox","Object","child","subBBox","clone","b","Math","min","max","direction","TOP","TOP_LEFT","TOP_RIGHT","fromRange","RIGHT","RIGHT_TOP","RIGHT_BOTTOM","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","LEFT_TOP","LEFT_BOTTOM","gap","top","right","bottom","left","p","getRegionBBox","region","end","start","abs","toPoints"],"sourceRoot":"","sources":["../../src/util/bbox.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Padding, Point, Region } from '../interface';\nimport { BBox as BBoxObject } from '../dependents';\n\n/**\n * 用于包围盒计算。\n */\nexport class BBox {\n  /** x 轴坐标系 */\n  public x: number;\n  /** y 轴坐标系 */\n  public y: number;\n  /** 包围盒高度 */\n  public height: number;\n  /** 包围盒宽度 */\n  public width: number;\n\n  public static fromRange(minX: number, minY: number, maxX: number, maxY: number) {\n    return new BBox(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  public static fromObject(bbox: BBoxObject) {\n    return new BBox(bbox.minX, bbox.minY, bbox.width, bbox.height);\n  }\n\n  constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n    this.x = x;\n    this.y = y;\n    this.height = height;\n    this.width = width;\n  }\n\n  public get minX(): number {\n    return this.x;\n  }\n\n  public get maxX(): number {\n    return this.x + this.width;\n  }\n\n  public get minY(): number {\n    return this.y;\n  }\n\n  public get maxY(): number {\n    return this.y + this.height;\n  }\n\n  public get tl(): Point {\n    return { x: this.x, y: this.y };\n  }\n\n  public get tr(): Point {\n    return { x: this.maxX, y: this.y };\n  }\n\n  public get bl(): Point {\n    return { x: this.x, y: this.maxY };\n  }\n\n  public get br(): Point {\n    return { x: this.maxX, y: this.maxY };\n  }\n\n  public get top(): Point {\n    return {\n      x: this.x + this.width / 2,\n      y: this.minY,\n    };\n  }\n\n  public get right(): Point {\n    return {\n      x: this.maxX,\n      y: this.y + this.height / 2,\n    };\n  }\n  public get bottom(): Point {\n    return {\n      x: this.x + this.width / 2,\n      y: this.maxY,\n    };\n  }\n  public get left(): Point {\n    return {\n      x: this.minX,\n      y: this.y + this.height / 2,\n    };\n  }\n  // end 计算属性\n\n  /**\n   * 包围盒是否相等\n   * @param {BBox} bbox 包围盒\n   * @returns      包围盒是否相等\n   */\n  public isEqual(bbox: BBox): boolean {\n    return this.x === bbox.x && this.y === bbox.y && this.width === bbox.width && this.height === bbox.height;\n  }\n\n  /**\n   * 是否包含了另一个包围盒\n   * @param child\n   */\n  public contains(child: BBox): boolean {\n    return child.minX >= this.minX && child.maxX <= this.maxX && child.minY >= this.minY && child.maxY <= this.maxY;\n  }\n\n  /**\n   * 克隆包围盒\n   * @returns 包围盒\n   */\n  public clone(): BBox {\n    return new BBox(this.x, this.y, this.width, this.height);\n  }\n\n  /**\n   * 取并集\n   * @param subBBox\n   */\n  public add(...subBBox: BBox[]): BBox {\n    const bbox = this.clone();\n    each(subBBox, (b: BBox) => {\n      bbox.x = Math.min(b.x, bbox.x);\n      bbox.y = Math.min(b.y, bbox.y);\n      bbox.width = Math.max(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.max(b.maxY, bbox.maxY) - bbox.y;\n    });\n\n    return bbox;\n  }\n\n  /**\n   * 取交集\n   * @param subBBox\n   */\n  public merge(...subBBox: BBox[]): BBox {\n    const bbox = this.clone();\n    each(subBBox, (b: BBox) => {\n      bbox.x = Math.max(b.x, bbox.x);\n      bbox.y = Math.max(b.y, bbox.y);\n      bbox.width = Math.min(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.min(b.maxY, bbox.maxY) - bbox.y;\n    });\n\n    return bbox;\n  }\n\n  /**\n   * bbox 剪裁\n   * @param subBBox\n   * @param direction\n   */\n  public cut(subBBox: BBox, direction: DIRECTION): BBox {\n    const width = subBBox.width;\n    const height = subBBox.height;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        return BBox.fromRange(this.minX, this.minY + height, this.maxX, this.maxY);\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        return BBox.fromRange(this.minX, this.minY, this.maxX - width, this.maxY);\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        return BBox.fromRange(this.minX, this.minY, this.maxX, this.maxY - height);\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        return BBox.fromRange(this.minX + width, this.minY, this.maxX, this.maxY);\n      default:\n        // 其他情况不裁剪，原样返回\n        return this;\n    }\n  }\n\n  /**\n   * 收缩形成新的\n   * @param gap\n   */\n  public shrink(gap: Padding): BBox {\n    const [top, right, bottom, left] = gap;\n\n    return new BBox(this.x + left, this.y + top, this.width - left - right, this.height - top - bottom);\n  }\n\n  /**\n   * 扩张形成新的\n   * @param gap\n   */\n  public expand(gap: Padding): BBox {\n    const [top, right, bottom, left] = gap;\n\n    return new BBox(this.x - left, this.y - top, this.width + left + right, this.height + top + bottom);\n  }\n\n  /**\n   * get the gap of two bbox, if not exceed, then 0\n   * @param bbox\n   * @returns [top, right, bottom, left]\n   */\n  public exceed(bbox: BBox): Padding {\n    return [\n      Math.max(-this.minY + bbox.minY, 0),\n      Math.max(this.maxX - bbox.maxX, 0),\n      Math.max(this.maxY - bbox.maxY, 0),\n      Math.max(-this.minX + bbox.minX, 0),\n    ];\n  }\n\n  /**\n   * 是否碰撞\n   * @param bbox\n   */\n  public collide(bbox: BBox): boolean {\n    return this.minX < bbox.maxX && this.maxX > bbox.minX && this.minY < bbox.maxY && this.maxY > bbox.minY;\n  }\n\n  /**\n   * 获取包围盒大小\n   * @returns 包围盒大小\n   */\n  public size(): number {\n    return this.width * this.height;\n  }\n\n  /**\n   * 点是否在 bbox 中\n   * @param p\n   */\n  public isPointIn(p: Point) {\n    return p.x >= this.minX && p.x <= this.maxX && p.y >= this.minY && p.y <= this.maxY;\n  }\n}\n\n/**\n * 从一个 bbox 的 region 获取 bbox\n * @param bbox\n * @param region\n */\nexport const getRegionBBox = (bbox: BBox, region: Region): BBox => {\n  const { start, end } = region;\n\n  return new BBox(\n    bbox.x + bbox.width * start.x,\n    bbox.y + bbox.height * start.y,\n    bbox.width * Math.abs(end.x - start.x),\n    bbox.height * Math.abs(end.y - start.y)\n  );\n};\n\n/**\n * 将 bbox 转换成 points\n * @param bbox\n */\nexport function toPoints(bbox: Partial<BBox>): any[] {\n  return [\n    [bbox.minX, bbox.minY],\n    [bbox.maxX, bbox.minY],\n    [bbox.maxX, bbox.maxY],\n    [bbox.minX, bbox.maxY],\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}