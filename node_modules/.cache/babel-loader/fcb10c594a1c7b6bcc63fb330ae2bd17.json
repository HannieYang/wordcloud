{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepMix, get, isFunction } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { getAnimation } from './animation'; // 默认的动画参数配置\n\nexport var DEFAULT_ANIMATE_CFG = {\n  appear: {\n    duration: 450,\n    easing: 'easeQuadOut'\n  },\n  update: {\n    duration: 400,\n    easing: 'easeQuadInOut'\n  },\n  enter: {\n    duration: 400,\n    easing: 'easeQuadInOut'\n  },\n  leave: {\n    duration: 350,\n    easing: 'easeQuadIn'\n  } // 更新时销毁动画配置\n\n}; // 各个 Geometry 默认的动画执行函数\n\nvar GEOMETRY_ANIMATE_CFG = {\n  interval: function (coordinate) {\n    return {\n      enter: {\n        animation: coordinate.isRect ? coordinate.isTransposed ? 'scale-in-x' : 'scale-in-y' : 'fade-in'\n      },\n      update: {\n        animation: coordinate.isPolar && coordinate.isTransposed ? 'sector-path-update' : null\n      },\n      leave: {\n        animation: 'fade-out'\n      }\n    };\n  },\n  line: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  path: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  point: {\n    appear: {\n      animation: 'zoom-in'\n    },\n    enter: {\n      animation: 'zoom-in'\n    },\n    leave: {\n      animation: 'zoom-out'\n    }\n  },\n  area: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  polygon: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  schema: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  edge: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  label: {\n    appear: {\n      animation: 'fade-in',\n      delay: 450\n    },\n    enter: {\n      animation: 'fade-in'\n    },\n    update: {\n      animation: 'position-update'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  }\n}; // 各个 Geometry 默认的群组出场动画\n\nvar GEOMETRY_GROUP_APPEAR_ANIMATION = {\n  line: function () {\n    return {\n      animation: 'wave-in'\n    };\n  },\n  area: function () {\n    return {\n      animation: 'wave-in'\n    };\n  },\n  path: function () {\n    return {\n      animation: 'fade-in'\n    };\n  },\n  interval: function (coordinate) {\n    var animation;\n\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        // pie chart\n        animation = 'wave-in';\n      }\n    }\n\n    return {\n      animation: animation\n    };\n  },\n  schema: function (coordinate) {\n    var animation;\n\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n    }\n\n    return {\n      animation: animation\n    };\n  },\n  polygon: function () {\n    return {\n      animation: 'fade-in',\n      duration: 500\n    };\n  },\n  edge: function () {\n    return {\n      animation: 'fade-in'\n    };\n  }\n}; // 解析用户的动画配置\n\nfunction parseAnimateConfig(animateCfg, data) {\n  return {\n    delay: isFunction(animateCfg.delay) ? animateCfg.delay(data) : animateCfg.delay,\n    easing: isFunction(animateCfg.easing) ? animateCfg.easing(data) : animateCfg.easing,\n    duration: isFunction(animateCfg.duration) ? animateCfg.duration(data) : animateCfg.duration,\n    callback: animateCfg.callback,\n    repeat: animateCfg.repeat\n  };\n}\n/**\n * @ignore\n * 获取 elementName 对应的动画配置，当声明了 `animateType`，则返回 `animateType` 对应的动画配置\n * @param elementName 元素名称\n * @param coordinate 做表弟类型\n * @param animateType 可选，动画类型\n */\n\n\nexport function getDefaultAnimateCfg(elementName, coordinate, animateType) {\n  var animateCfg = GEOMETRY_ANIMATE_CFG[elementName];\n\n  if (animateCfg) {\n    if (isFunction(animateCfg)) {\n      animateCfg = animateCfg(coordinate);\n    }\n\n    animateCfg = deepMix({}, DEFAULT_ANIMATE_CFG, animateCfg);\n\n    if (animateType) {\n      return animateCfg[animateType];\n    }\n  }\n\n  return animateCfg;\n}\n/**\n * @ignore\n * 工具函数\n * 根据用户传入的配置为 shape 执行动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外的信息\n */\n\nexport function doAnimate(shape, animateCfg, cfg) {\n  var data = get(shape.get('origin'), 'data', FIELD_ORIGIN);\n  var animation = animateCfg.animation; // 获取动画执行函数\n\n  var parsedAnimateCfg = parseAnimateConfig(animateCfg, data);\n\n  if (animation) {\n    // 用户声明了动画执行函数\n    var animateFunction = getAnimation(animation);\n\n    if (animateFunction) {\n      animateFunction(shape, parsedAnimateCfg, cfg);\n    }\n  } else {\n    // 没有声明，则根据 toAttrs 做差值动画\n    shape.animate(cfg.toAttrs, parsedAnimateCfg);\n  }\n}\n/**\n * @ignore\n * 执行 Geometry 群组入场动画\n * @param container 执行群组动画的图形元素\n * @param animateCfg 动画配置\n * @param geometryType geometry 类型\n * @param coordinate 坐标系对象\n * @param minYPoint y 轴最小值对应的画布坐标点\n */\n\nexport function doGroupAppearAnimate(container, animateCfg, geometryType, coordinate, minYPoint) {\n  if (GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType]) {\n    var defaultCfg = GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType](coordinate);\n    var animation = getAnimation(get(defaultCfg, 'animation', ''));\n\n    if (animation) {\n      var cfg = __assign(__assign(__assign({}, DEFAULT_ANIMATE_CFG.appear), defaultCfg), animateCfg);\n\n      container.stopAnimate(); // 先结束当前 container 动画\n\n      animation(container, cfg, {\n        coordinate: coordinate,\n        minYPoint: minYPoint,\n        toAttrs: null\n      });\n    }\n  }\n}","map":{"version":3,"mappings":"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","names":["deepMix","get","isFunction","FIELD_ORIGIN","getAnimation","DEFAULT_ANIMATE_CFG","appear","duration","easing","update","enter","leave","GEOMETRY_ANIMATE_CFG","interval","coordinate","animation","isRect","isTransposed","isPolar","line","path","point","area","polygon","schema","edge","label","delay","GEOMETRY_GROUP_APPEAR_ANIMATION","parseAnimateConfig","animateCfg","data","callback","repeat","getDefaultAnimateCfg","elementName","animateType","doAnimate","shape","cfg","parsedAnimateCfg","animateFunction","animate","toAttrs","doGroupAppearAnimate","container","geometryType","minYPoint","defaultCfg","stopAnimate"],"sourceRoot":"","sources":["../../src/animate/index.ts"],"sourcesContent":["import { deepMix, get, isFunction } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Coordinate, IGroup, IShape } from '../dependents';\nimport { AnimateCfg, Data, Datum, GAnimateCfg, Point } from '../interface';\nimport { AnimateExtraCfg } from './interface';\n\nimport { getAnimation } from './animation';\n\n// 默认的动画参数配置\nexport const DEFAULT_ANIMATE_CFG = {\n  appear: {\n    duration: 450,\n    easing: 'easeQuadOut',\n  }, // 初始入场动画配置\n  update: {\n    duration: 400,\n    easing: 'easeQuadInOut',\n  }, // 更新时发生变更的动画配置\n  enter: {\n    duration: 400,\n    easing: 'easeQuadInOut',\n  }, // 更新时新增元素的入场动画配置\n  leave: {\n    duration: 350,\n    easing: 'easeQuadIn',\n  }, // 更新时销毁动画配置\n};\n\n// 各个 Geometry 默认的动画执行函数\nconst GEOMETRY_ANIMATE_CFG = {\n  interval: (coordinate: Coordinate) => {\n    return {\n      enter: {\n        animation: coordinate.isRect ? (coordinate.isTransposed ? 'scale-in-x' : 'scale-in-y') : 'fade-in',\n      },\n      update: {\n        animation: coordinate.isPolar && coordinate.isTransposed ? 'sector-path-update' : null,\n      },\n      leave: {\n        animation: 'fade-out',\n      },\n    };\n  },\n  line: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  path: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  point: {\n    appear: {\n      animation: 'zoom-in',\n    },\n    enter: {\n      animation: 'zoom-in',\n    },\n    leave: {\n      animation: 'zoom-out',\n    },\n  },\n  area: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  polygon: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  schema: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  edge: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  label: {\n    appear: {\n      animation: 'fade-in',\n      delay: 450,\n    },\n    enter: {\n      animation: 'fade-in',\n    },\n    update: {\n      animation: 'position-update',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n};\n\n// 各个 Geometry 默认的群组出场动画\nconst GEOMETRY_GROUP_APPEAR_ANIMATION = {\n  line: () => {\n    return {\n      animation: 'wave-in',\n    };\n  },\n  area: () => {\n    return {\n      animation: 'wave-in',\n    };\n  },\n  path: () => {\n    return {\n      animation: 'fade-in',\n    };\n  },\n  interval(coordinate: Coordinate) {\n    let animation;\n\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        // pie chart\n        animation = 'wave-in';\n      }\n    }\n    return {\n      animation,\n    };\n  },\n  schema: (coordinate) => {\n    let animation;\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n    }\n    return {\n      animation,\n    };\n  },\n  polygon: () => {\n    return {\n      animation: 'fade-in',\n      duration: 500,\n    };\n  },\n  edge: () => {\n    return {\n      animation: 'fade-in',\n    };\n  },\n};\n\n// 解析用户的动画配置\nfunction parseAnimateConfig(animateCfg: AnimateCfg, data: Data | Datum): GAnimateCfg {\n  return {\n    delay: isFunction(animateCfg.delay) ? animateCfg.delay(data) : animateCfg.delay,\n    easing: isFunction(animateCfg.easing) ? animateCfg.easing(data) : animateCfg.easing,\n    duration: isFunction(animateCfg.duration) ? animateCfg.duration(data) : animateCfg.duration,\n    callback: animateCfg.callback,\n    repeat: animateCfg.repeat,\n  };\n}\n\n/**\n * @ignore\n * 获取 elementName 对应的动画配置，当声明了 `animateType`，则返回 `animateType` 对应的动画配置\n * @param elementName 元素名称\n * @param coordinate 做表弟类型\n * @param animateType 可选，动画类型\n */\nexport function getDefaultAnimateCfg(elementName: string, coordinate: Coordinate, animateType?: string) {\n  let animateCfg = GEOMETRY_ANIMATE_CFG[elementName];\n\n  if (animateCfg) {\n    if (isFunction(animateCfg)) {\n      animateCfg = animateCfg(coordinate);\n    }\n    animateCfg = deepMix({}, DEFAULT_ANIMATE_CFG, animateCfg);\n\n    if (animateType) {\n      return animateCfg[animateType];\n    }\n  }\n  return animateCfg;\n}\n\n/**\n * @ignore\n * 工具函数\n * 根据用户传入的配置为 shape 执行动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外的信息\n */\nexport function doAnimate(shape: IGroup | IShape, animateCfg: AnimateCfg, cfg: AnimateExtraCfg) {\n  const data = get(shape.get('origin'), 'data', FIELD_ORIGIN);\n  const animation = animateCfg.animation; // 获取动画执行函数\n  const parsedAnimateCfg = parseAnimateConfig(animateCfg, data);\n  if (animation) {\n    // 用户声明了动画执行函数\n    const animateFunction = getAnimation(animation);\n    if (animateFunction) {\n      animateFunction(shape, parsedAnimateCfg, cfg);\n    }\n  } else {\n    // 没有声明，则根据 toAttrs 做差值动画\n    shape.animate(cfg.toAttrs, parsedAnimateCfg);\n  }\n}\n\n/**\n * @ignore\n * 执行 Geometry 群组入场动画\n * @param container 执行群组动画的图形元素\n * @param animateCfg 动画配置\n * @param geometryType geometry 类型\n * @param coordinate 坐标系对象\n * @param minYPoint y 轴最小值对应的画布坐标点\n */\nexport function doGroupAppearAnimate(\n  container: IGroup,\n  animateCfg: AnimateCfg,\n  geometryType: string,\n  coordinate: Coordinate,\n  minYPoint: Point\n) {\n  if (GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType]) {\n    const defaultCfg = GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType](coordinate);\n    const animation = getAnimation(get(defaultCfg, 'animation', ''));\n    if (animation) {\n      const cfg = {\n        ...DEFAULT_ANIMATE_CFG.appear,\n        ...defaultCfg,\n        ...animateCfg,\n      };\n      container.stopAnimate(); // 先结束当前 container 动画\n      animation(container, cfg, {\n        coordinate,\n        minYPoint,\n        toAttrs: null,\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}