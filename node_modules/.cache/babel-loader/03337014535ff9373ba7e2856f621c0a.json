{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\nvar EdgeShapeFactory = registerShapeFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints: function (pointInfo) {\n    return splitPoints(pointInfo);\n  }\n});\nregisterShape('edge', 'line', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false, 'lineWidth');\n    var path = getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);\n    return container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      })\n    });\n  },\n  getMarker: function (markerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color\n      }\n    };\n  }\n});\nexport default EdgeShapeFactory;","map":{"version":3,"mappings":";AAGA,SAASA,aAAT,EAAwBC,oBAAxB,QAAoD,SAApD;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,IAAMC,gBAAgB,GAAGJ,oBAAoB,CAAC,MAAD,EAAS;EACpDK,gBAAgB,EAAE,MADkC;EAEpDC,gBAAgB,EAAhB,UAAiBC,SAAjB,EAAsC;IACpC,OAAOJ,WAAW,CAACI,SAAD,CAAlB;EACD;AAJmD,CAAT,CAA7C;AAOAR,aAAa,CAAC,MAAD,EAAS,MAAT,EAAiB;EAC5BS,IAAI,EAAJ,UAAKC,GAAL,EAAqBC,SAArB,EAAsC;IACpC,IAAMC,KAAK,GAAGV,QAAQ,CAACQ,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAmB,WAAnB,CAAtB;IACA,IAAMG,IAAI,GAAGV,WAAW,CAAC,KAAKW,WAAL,CAAiBJ,GAAG,CAACK,MAArB,CAAD,EAA+B,KAAKC,UAAL,CAAgBC,OAA/C,CAAxB;IACA,OAAON,SAAS,CAACO,QAAV,CAAmB,MAAnB,EAA2B;MAChCC,KAAK,wBACAP,KADA,GACK;QACRC,IAAI;MADI,CADL;IAD2B,CAA3B,CAAP;EAMD,CAV2B;EAW5BO,SAAS,EAAT,UAAUC,SAAV,EAAmC;IACjC,OAAO;MACLC,MAAM,EAAE,QADH;MAELV,KAAK,EAAE;QACLW,CAAC,EAAE,GADE;QAELC,IAAI,EAAEH,SAAS,CAACI;MAFX;IAFF,CAAP;EAOD;AAnB2B,CAAjB,CAAb;AAsBA,eAAepB,gBAAf","names":["registerShape","registerShapeFactory","getStyle","getLinePath","splitPoints","EdgeShapeFactory","defaultShapeType","getDefaultPoints","pointInfo","draw","cfg","container","style","path","parsePoints","points","coordinate","isPolar","addShape","attrs","getMarker","markerCfg","symbol","r","fill","color"],"sourceRoot":"","sources":["../../../../src/geometry/shape/edge/index.ts"],"sourcesContent":["import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\n\nconst EdgeShapeFactory = registerShapeFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return splitPoints(pointInfo);\n  },\n});\n\nregisterShape('edge', 'line', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const path = getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n\nexport default EdgeShapeFactory;\n"]},"metadata":{},"sourceType":"module"}