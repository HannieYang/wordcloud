{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { registerComponentController, Util, TooltipController, Action } from '@antv/g2';\nimport { isNil } from '@antv/util';\n\nvar RadarTooltipController =\n/** @class */\nfunction (_super) {\n  __extends(RadarTooltipController, _super);\n\n  function RadarTooltipController() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(RadarTooltipController.prototype, \"name\", {\n    get: function () {\n      return 'radar-tooltip';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RadarTooltipController.prototype.getTooltipItems = function (point) {\n    var _a = this.getTooltipCfg(),\n        shared = _a.shared,\n        cfgTitle = _a.title;\n\n    var hintItems = _super.prototype.getTooltipItems.call(this, point);\n\n    if (hintItems.length > 0) {\n      var geometry_1 = this.view.geometries[0];\n      var dataArray = geometry_1.dataArray;\n      var title_1 = hintItems[0].name;\n      var result_1 = [];\n      dataArray.forEach(function (mappingData) {\n        mappingData.forEach(function (d) {\n          var items = Util.getTooltipItems(d, geometry_1);\n          var item = items[0];\n\n          if (!shared && item && item.name === title_1) {\n            var displayTitle = isNil(cfgTitle) ? title_1 : cfgTitle;\n            result_1.push(__assign(__assign({}, item), {\n              name: item.title,\n              title: displayTitle\n            }));\n          } else if (shared && item) {\n            var displayTitle = isNil(cfgTitle) ? item.name || title_1 : cfgTitle;\n            result_1.push(__assign(__assign({}, item), {\n              name: item.title,\n              title: displayTitle\n            }));\n          }\n        });\n      });\n      return result_1;\n    }\n\n    return [];\n  };\n\n  return RadarTooltipController;\n}(TooltipController);\n\nexport { RadarTooltipController };\nregisterComponentController('radar-tooltip', RadarTooltipController);\n/**\n * 雷达图 tooltip 激活 action\n */\n\nvar RadarTooltipAction =\n/** @class */\nfunction (_super) {\n  __extends(RadarTooltipAction, _super);\n\n  function RadarTooltipAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RadarTooltipAction.prototype.init = function () {\n    var view = this.context.view;\n    view.removeInteraction('tooltip');\n  };\n\n  RadarTooltipAction.prototype.show = function () {\n    var event = this.context.event;\n    var controller = this.getTooltipController();\n    controller.showTooltip({\n      x: event.x,\n      y: event.y\n    });\n  };\n\n  RadarTooltipAction.prototype.hide = function () {\n    var controller = this.getTooltipController();\n    controller.hideTooltip();\n  };\n\n  RadarTooltipAction.prototype.getTooltipController = function () {\n    var view = this.context.view;\n    return view.getController('radar-tooltip');\n  };\n\n  return RadarTooltipAction;\n}(Action);\n\nexport { RadarTooltipAction };","map":{"version":3,"mappings":";AAAA,SAASA,2BAAT,EAAsCC,IAAtC,EAA4CC,iBAA5C,EAA+DC,MAA/D,QAA6E,UAA7E;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAGA;AAAA;AAAA;EAA4CC;;EAA5C;;EAgCC;;EA/BCC,sBAAWC,gCAAX,EAAW,MAAX,EAAe;SAAf;MACE,OAAO,eAAP;IACD,CAFc;qBAAA;;EAAA,CAAf;;EAIOA,mDAAP,UAAuBC,KAAvB,EAAmC;IAC3B,SAA8B,KAAKC,aAAL,EAA9B;IAAA,IAAEC,MAAM,YAAR;IAAA,IAAiBC,QAAQ,WAAzB;;IACN,IAAMC,SAAS,GAAGC,iBAAMC,eAAN,CAAqBC,IAArB,CAAqB,IAArB,EAAsBP,KAAtB,CAAlB;;IAEA,IAAII,SAAS,CAACI,MAAV,GAAmB,CAAvB,EAA0B;MACxB,IAAMC,UAAQ,GAAG,KAAKC,IAAL,CAAUC,UAAV,CAAqB,CAArB,CAAjB;MACA,IAAMC,SAAS,GAAGH,UAAQ,CAACG,SAA3B;MACA,IAAMC,OAAK,GAAGT,SAAS,CAAC,CAAD,CAAT,CAAaU,IAA3B;MACA,IAAMC,QAAM,GAAG,EAAf;MACAH,SAAS,CAACI,OAAV,CAAkB,UAACC,WAAD,EAAY;QAC5BA,WAAW,CAACD,OAAZ,CAAoB,UAACE,CAAD,EAAE;UACpB,IAAMC,KAAK,GAAG1B,IAAI,CAACa,eAAL,CAAqBY,CAArB,EAAwBT,UAAxB,CAAd;UACA,IAAMW,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAlB;;UACA,IAAI,CAACjB,MAAD,IAAWkB,IAAX,IAAmBA,IAAI,CAACN,IAAL,KAAcD,OAArC,EAA4C;YAC1C,IAAMQ,YAAY,GAAGzB,KAAK,CAACO,QAAD,CAAL,GAAkBU,OAAlB,GAA0BV,QAA/C;YACAY,QAAM,CAACO,IAAP,CAAWC,sBAAMH,IAAN,GAAU;cAAEN,IAAI,EAAEM,IAAI,CAACI,KAAb;cAAoBA,KAAK,EAAEH;YAA3B,CAAV,CAAX;UACD,CAHD,MAGO,IAAInB,MAAM,IAAIkB,IAAd,EAAoB;YACzB,IAAMC,YAAY,GAAGzB,KAAK,CAACO,QAAD,CAAL,GAAkBiB,IAAI,CAACN,IAAL,IAAaD,OAA/B,GAAuCV,QAA5D;YACAY,QAAM,CAACO,IAAP,CAAWC,sBAAMH,IAAN,GAAU;cAAEN,IAAI,EAAEM,IAAI,CAACI,KAAb;cAAoBA,KAAK,EAAEH;YAA3B,CAAV,CAAX;UACD;QACF,CAVD;MAWD,CAZD;MAcA,OAAON,QAAP;IACD;;IACD,OAAO,EAAP;EACD,CA1BM;;EA2BT;AAAC,CAhCD,CAA4CrB,iBAA5C;;;AAiCAF,2BAA2B,CAAC,eAAD,EAAkBO,sBAAlB,CAA3B;AAEA;;;;AAGA;AAAA;AAAA;EAAwCF;;EAAxC;;EAqBC;;EApBC4B;IACU,QAAI,GAAK,KAAKC,OAAL,CAAYhB,IAArB;IACRA,IAAI,CAACiB,iBAAL,CAAuB,SAAvB;EACD,CAHD;;EAKOF,oCAAP;IACU,SAAK,GAAK,KAAKC,OAAL,CAAYE,KAAtB;IACR,IAAMC,UAAU,GAAG,KAAKC,oBAAL,EAAnB;IACAD,UAAU,CAACE,WAAX,CAAuB;MAAEC,CAAC,EAAEJ,KAAK,CAACI,CAAX;MAAcC,CAAC,EAAEL,KAAK,CAACK;IAAvB,CAAvB;EACD,CAJM;;EAMAR,oCAAP;IACE,IAAMI,UAAU,GAAG,KAAKC,oBAAL,EAAnB;IACAD,UAAU,CAACK,WAAX;EACD,CAHM;;EAKCT,oDAAR;IACU,QAAI,GAAK,KAAKC,OAAL,CAAYhB,IAArB;IACR,OAAOA,IAAI,CAACyB,aAAL,CAAmB,eAAnB,CAAP;EACD,CAHO;;EAIV;AAAC,CArBD,CAAwCxC,MAAxC","names":["registerComponentController","Util","TooltipController","Action","isNil","__extends","Object","RadarTooltipController","point","getTooltipCfg","shared","cfgTitle","hintItems","_super","getTooltipItems","call","length","geometry_1","view","geometries","dataArray","title_1","name","result_1","forEach","mappingData","d","items","item","displayTitle","push","__assign","title","RadarTooltipAction","context","removeInteraction","event","controller","getTooltipController","showTooltip","x","y","hideTooltip","getController"],"sourceRoot":"","sources":["../../../../src/plots/radar/interactions/radar-tooltip-action.ts"],"sourcesContent":["import { registerComponentController, Util, TooltipController, Action } from '@antv/g2';\nimport { isNil } from '@antv/util';\nimport { Point } from '../../../types';\n\nexport class RadarTooltipController extends TooltipController {\n  public get name(): string {\n    return 'radar-tooltip';\n  }\n\n  public getTooltipItems(point: Point) {\n    const { shared, title: cfgTitle } = this.getTooltipCfg();\n    const hintItems = super.getTooltipItems(point);\n\n    if (hintItems.length > 0) {\n      const geometry = this.view.geometries[0];\n      const dataArray = geometry.dataArray;\n      const title = hintItems[0].name;\n      const result = [];\n      dataArray.forEach((mappingData) => {\n        mappingData.forEach((d) => {\n          const items = Util.getTooltipItems(d, geometry);\n          const item = items[0];\n          if (!shared && item && item.name === title) {\n            const displayTitle = isNil(cfgTitle) ? title : cfgTitle;\n            result.push({ ...item, name: item.title, title: displayTitle });\n          } else if (shared && item) {\n            const displayTitle = isNil(cfgTitle) ? item.name || title : cfgTitle;\n            result.push({ ...item, name: item.title, title: displayTitle });\n          }\n        });\n      });\n\n      return result;\n    }\n    return [];\n  }\n}\nregisterComponentController('radar-tooltip', RadarTooltipController);\n\n/**\n * 雷达图 tooltip 激活 action\n */\nexport class RadarTooltipAction extends Action {\n  init() {\n    const { view } = this.context;\n    view.removeInteraction('tooltip');\n  }\n\n  public show() {\n    const { event } = this.context;\n    const controller = this.getTooltipController();\n    controller.showTooltip({ x: event.x, y: event.y });\n  }\n\n  public hide() {\n    const controller = this.getTooltipController();\n    controller.hideTooltip();\n  }\n\n  private getTooltipController() {\n    const { view } = this.context;\n    return view.getController('radar-tooltip') as TooltipController;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}