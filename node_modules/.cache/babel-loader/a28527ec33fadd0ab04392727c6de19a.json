{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each } from '@antv/util';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { interaction, animation, theme, tooltip, annotation } from '../../adaptor/common';\nimport { PLOT_CONTAINER_OPTIONS } from '../../core/plot';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { execPlotAdaptor } from './utils';\n/**\n * geometry 处理\n * @param params\n */\n\nfunction multiView(params) {\n  var chart = params.chart,\n      options = params.options;\n  var views = options.views,\n      legend = options.legend;\n  each(views, function (v) {\n    var region = v.region,\n        data = v.data,\n        meta = v.meta,\n        axes = v.axes,\n        coordinate = v.coordinate,\n        interactions = v.interactions,\n        annotations = v.annotations,\n        tooltip = v.tooltip,\n        geometries = v.geometries; // 1. 创建 view\n\n    var viewOfG2 = chart.createView({\n      region: region\n    }); // 2. data\n\n    viewOfG2.data(data); // 3. meta\n\n    var scales = {};\n\n    if (axes) {\n      each(axes, function (axis, field) {\n        scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n      });\n    }\n\n    scales = deepAssign({}, meta, scales);\n    viewOfG2.scale(scales); // 4. x y axis\n\n    if (!axes) {\n      viewOfG2.axis(false);\n    } else {\n      each(axes, function (axis, field) {\n        viewOfG2.axis(field, axis);\n      });\n    } // 5. coordinate\n\n\n    viewOfG2.coordinate(coordinate); // 6. geometry\n\n    each(geometries, function (geometry) {\n      var ext = geometryAdaptor({\n        chart: viewOfG2,\n        options: geometry\n      }).ext; // adjust\n\n      var adjust = geometry.adjust;\n\n      if (adjust) {\n        ext.geometry.adjust(adjust);\n      }\n    }); // 7. interactions\n\n    each(interactions, function (interaction) {\n      if (interaction.enable === false) {\n        viewOfG2.removeInteraction(interaction.type);\n      } else {\n        viewOfG2.interaction(interaction.type, interaction.cfg);\n      }\n    }); // 8. annotations\n\n    each(annotations, function (annotation) {\n      viewOfG2.annotation()[annotation.type](__assign({}, annotation));\n    }); // 9. animation (先做动画)\n\n    if (typeof v.animation === 'boolean') {\n      viewOfG2.animate(false);\n    } else {\n      viewOfG2.animate(true); // 9.1 所有的 Geometry 都使用同一动画（各个图形如有区别，todo 自行覆盖）\n\n      each(viewOfG2.geometries, function (g) {\n        g.animate(v.animation);\n      });\n    }\n\n    if (tooltip) {\n      // 10. tooltip\n      viewOfG2.interaction('tooltip');\n      viewOfG2.tooltip(tooltip);\n    }\n  }); // legend\n\n  if (!legend) {\n    chart.legend(false);\n  } else {\n    each(legend, function (l, field) {\n      chart.legend(field, l);\n    });\n  } // tooltip\n\n\n  chart.tooltip(options.tooltip);\n  return params;\n}\n/**\n * 支持嵌套使用 g2plot 内置图表\n * @param params\n */\n\n\nfunction multiPlot(params) {\n  var chart = params.chart,\n      options = params.options;\n  var plots = options.plots,\n      _a = options.data,\n      data = _a === void 0 ? [] : _a;\n  each(plots, function (plot) {\n    var type = plot.type,\n        region = plot.region,\n        _a = plot.options,\n        options = _a === void 0 ? {} : _a,\n        top = plot.top;\n    var tooltip = options.tooltip;\n\n    if (top) {\n      execPlotAdaptor(type, chart, __assign(__assign({}, options), {\n        data: data\n      }));\n      return;\n    }\n\n    var viewOfG2 = chart.createView(__assign({\n      region: region\n    }, pick(options, PLOT_CONTAINER_OPTIONS)));\n\n    if (tooltip) {\n      // 配置 tooltip 交互\n      viewOfG2.interaction('tooltip');\n    }\n\n    execPlotAdaptor(type, viewOfG2, __assign({\n      data: data\n    }, options));\n  });\n  return params;\n}\n/**\n * 处理缩略轴的 adaptor (mix)\n * @param params\n */\n\n\nexport function slider(params) {\n  var chart = params.chart,\n      options = params.options;\n  chart.option('slider', options.slider);\n  return params;\n}\n/**\n * 图适配器\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  return flow(animation, // 多 view 的图，动画配置放到最前面\n  multiView, multiPlot, interaction, animation, theme, tooltip, slider, annotation() // ... 其他的 adaptor flow\n  )(params);\n}","map":{"version":3,"mappings":"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","names":["each","geometry","geometryAdaptor","interaction","animation","theme","tooltip","annotation","PLOT_CONTAINER_OPTIONS","AXIS_META_CONFIG_KEYS","deepAssign","flow","pick","execPlotAdaptor","multiView","params","options","legend","views","v","data","meta","axes","coordinate","interactions","annotations","geometries","viewOfG2","chart","createView","region","scales","axis","field","scale","ext","adjust","enable","removeInteraction","type","cfg","__assign","animate","g","l","multiPlot","_a","plots","plot","top","slider","option","adaptor"],"sourceRoot":"","sources":["../../../src/plots/mix/adaptor.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { Geometry } from '@antv/g2';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { interaction, animation, theme, tooltip, annotation } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { PLOT_CONTAINER_OPTIONS } from '../../core/plot';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { Axis } from '../../types/axis';\nimport { Legend } from '../../types/legend';\nimport { Interaction } from '../../types/interaction';\nimport { MixOptions, IView, IGeometry } from './types';\nimport { execPlotAdaptor } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction multiView(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n  const { views, legend } = options;\n\n  each(views, (v: IView) => {\n    const { region, data, meta, axes, coordinate, interactions, annotations, tooltip, geometries } = v;\n\n    // 1. 创建 view\n    const viewOfG2 = chart.createView({\n      region,\n    });\n\n    // 2. data\n    viewOfG2.data(data);\n\n    // 3. meta\n    let scales: Record<string, any> = {};\n    if (axes) {\n      each(axes, (axis: Axis, field: string) => {\n        scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n      });\n    }\n\n    scales = deepAssign({}, meta, scales);\n    viewOfG2.scale(scales);\n\n    // 4. x y axis\n    if (!axes) {\n      viewOfG2.axis(false);\n    } else {\n      each(axes, (axis: Axis, field: string) => {\n        viewOfG2.axis(field, axis);\n      });\n    }\n\n    // 5. coordinate\n    viewOfG2.coordinate(coordinate);\n\n    // 6. geometry\n    each(geometries, (geometry: IGeometry) => {\n      const { ext } = geometryAdaptor({\n        chart: viewOfG2,\n        options: geometry,\n      });\n\n      // adjust\n      const { adjust } = geometry;\n      if (adjust) {\n        ext.geometry.adjust(adjust);\n      }\n    });\n\n    // 7. interactions\n    each(interactions, (interaction: Interaction) => {\n      if (interaction.enable === false) {\n        viewOfG2.removeInteraction(interaction.type);\n      } else {\n        viewOfG2.interaction(interaction.type, interaction.cfg);\n      }\n    });\n\n    // 8. annotations\n    each(annotations, (annotation) => {\n      viewOfG2.annotation()[annotation.type]({\n        ...annotation,\n      });\n    });\n\n    // 9. animation (先做动画)\n    if (typeof v.animation === 'boolean') {\n      viewOfG2.animate(false);\n    } else {\n      viewOfG2.animate(true);\n      // 9.1 所有的 Geometry 都使用同一动画（各个图形如有区别，todo 自行覆盖）\n      each(viewOfG2.geometries, (g: Geometry) => {\n        g.animate(v.animation);\n      });\n    }\n\n    if (tooltip) {\n      // 10. tooltip\n      viewOfG2.interaction('tooltip');\n      viewOfG2.tooltip(tooltip);\n    }\n  });\n\n  // legend\n  if (!legend) {\n    chart.legend(false);\n  } else {\n    each(legend, (l: Legend, field: string) => {\n      chart.legend(field, l);\n    });\n  }\n\n  // tooltip\n  chart.tooltip(options.tooltip);\n  return params;\n}\n\n/**\n * 支持嵌套使用 g2plot 内置图表\n * @param params\n */\nfunction multiPlot(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n  const { plots, data = [] } = options;\n\n  each(plots, (plot) => {\n    const { type, region, options = {}, top } = plot;\n    const { tooltip } = options;\n\n    if (top) {\n      execPlotAdaptor(type, chart, { ...options, data });\n      return;\n    }\n\n    const viewOfG2 = chart.createView({ region, ...pick(options, PLOT_CONTAINER_OPTIONS) });\n    if (tooltip) {\n      // 配置 tooltip 交互\n      viewOfG2.interaction('tooltip');\n    }\n\n    execPlotAdaptor(type, viewOfG2, { data, ...options });\n  });\n\n  return params;\n}\n\n/**\n * 处理缩略轴的 adaptor (mix)\n * @param params\n */\nexport function slider(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n\n  chart.option('slider', options.slider);\n\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<MixOptions>) {\n  return flow(\n    animation, // 多 view 的图，动画配置放到最前面\n    multiView,\n    multiPlot,\n    interaction,\n    animation,\n    theme,\n    tooltip,\n    slider,\n    annotation()\n    // ... 其他的 adaptor flow\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}