{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport GridBase from './base';\n\nfunction distance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nvar Circle =\n/** @class */\nfunction (_super) {\n  __extends(Circle, _super);\n\n  function Circle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Circle.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n\n    return __assign(__assign({}, cfg), {\n      type: 'circle',\n\n      /**\n       * 中心点\n       * @type {object}\n       */\n      center: null,\n\n      /**\n       * 栅格线是否封闭\n       * @type {true}\n       */\n      closed: true\n    });\n  };\n\n  Circle.prototype.getGridPath = function (points, reversed) {\n    var lineType = this.getLineType();\n    var closed = this.get('closed');\n    var path = [];\n\n    if (points.length) {\n      // 防止出错\n      if (lineType === 'circle') {\n        var center = this.get('center');\n        var firstPoint = points[0];\n        var radius_1 = distance(center.x, center.y, firstPoint.x, firstPoint.y);\n        var sweepFlag_1 = reversed ? 0 : 1; // 顺时针还是逆时针\n\n        if (closed) {\n          // 封闭时，绘制整个圆\n          path.push(['M', center.x, center.y - radius_1]);\n          path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, center.x, center.y + radius_1]);\n          path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, center.x, center.y - radius_1]);\n          path.push(['Z']);\n        } else {\n          each(points, function (point, index) {\n            if (index === 0) {\n              path.push(['M', point.x, point.y]);\n            } else {\n              path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, point.x, point.y]);\n            }\n          });\n        }\n      } else {\n        each(points, function (point, index) {\n          if (index === 0) {\n            path.push(['M', point.x, point.y]);\n          } else {\n            path.push(['L', point.x, point.y]);\n          }\n        });\n\n        if (closed) {\n          path.push(['Z']);\n        }\n      }\n    }\n\n    return path;\n  };\n\n  return Circle;\n}(GridBase);\n\nexport default Circle;","map":{"version":3,"mappings":"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","names":["each","GridBase","distance","x1","y1","x2","y2","dx","dy","Math","sqrt","__extends","Circle","cfg","_super","getDefaultCfg","call","type","center","closed","points","reversed","lineType","getLineType","get","path","length","firstPoint","radius_1","x","y","sweepFlag_1","push","point","index"],"sourceRoot":"","sources":["../../src/grid/circle.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}