{"ast":null,"code":"import { __assign, __extends, __read, __rest, __spreadArray } from \"tslib\";\nimport { Controller } from './base';\nimport { Scrollbar as ScrollbarComponent } from '../../dependents';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\nvar DEFAULT_PADDING = 0;\nvar DEFAULT_SIZE = 8;\nvar DEFAULT_CATEGORY_SIZE = 32;\nvar MIN_THUMB_LENGTH = 20;\n\nvar Scrollbar =\n/** @class */\nfunction (_super) {\n  __extends(Scrollbar, _super);\n\n  function Scrollbar(view) {\n    var _this = _super.call(this, view) || this;\n\n    _this.onChangeFn = noop;\n\n    _this.resetMeasure = function () {\n      _this.clear();\n    };\n\n    _this.onValueChange = function (_a) {\n      var ratio = _a.ratio;\n\n      var animate = _this.getValidScrollbarCfg().animate;\n\n      _this.ratio = clamp(ratio, 0, 1);\n\n      var originalAnimate = _this.view.getOptions().animate;\n\n      if (!animate) {\n        _this.view.animate(false);\n      }\n\n      _this.changeViewData(_this.getScrollRange(), true);\n\n      _this.view.animate(originalAnimate);\n    };\n\n    _this.container = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.onChangeFn = throttle(_this.onValueChange, 20, {\n      leading: true\n    });\n    _this.trackLen = 0;\n    _this.thumbLen = 0;\n    _this.ratio = 0;\n\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, _this.resetMeasure);\n\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, _this.resetMeasure);\n\n    return _this;\n  }\n\n  Object.defineProperty(Scrollbar.prototype, \"name\", {\n    get: function () {\n      return 'scrollbar';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Scrollbar.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  };\n\n  Scrollbar.prototype.init = function () {};\n  /**\n   * 渲染\n   */\n\n\n  Scrollbar.prototype.render = function () {\n    this.option = this.view.getOptions().scrollbar;\n\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  };\n  /**\n   * 布局\n   */\n\n\n  Scrollbar.prototype.layout = function () {\n    var _this = this;\n\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(function () {\n        if (!_this.view.destroyed) {\n          _this.changeViewData(_this.getScrollRange(), true);\n        }\n      });\n    }\n\n    if (this.scrollbar) {\n      var width = this.view.coordinateBBox.width;\n      var padding = this.scrollbar.component.get('padding');\n      var bboxObject = this.scrollbar.component.getLayoutBBox();\n      var bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(padding);\n      var cfg = this.getScrollbarComponentCfg();\n      var x = void 0;\n      var y = void 0;\n\n      if (cfg.isHorizontal) {\n        var _a = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM), 2),\n            x1 = _a[0],\n            y1 = _a[1];\n\n        var _b = __read(directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM), 2),\n            x2 = _b[0],\n            y2 = _b[1];\n\n        x = x2;\n        y = y1;\n      } else {\n        var _c = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT), 2),\n            x1 = _c[0],\n            y1 = _c[1];\n\n        var _d = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT), 2),\n            x2 = _d[0],\n            y2 = _d[1];\n\n        x = x2;\n        y = y1;\n      }\n\n      x += padding[3];\n      y += padding[0]; // 默认放在 bottom\n\n      if (this.trackLen) {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n        }));\n      } else {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y\n        }));\n      }\n\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  };\n  /**\n   * 更新\n   */\n\n\n  Scrollbar.prototype.update = function () {\n    // 逻辑和 render 保持一致\n    this.render();\n  };\n\n  Scrollbar.prototype.getComponents = function () {\n    return this.scrollbar ? [this.scrollbar] : [];\n  };\n\n  Scrollbar.prototype.clear = function () {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  };\n  /** 设置滚动条位置  */\n\n\n  Scrollbar.prototype.setValue = function (ratio) {\n    this.onValueChange({\n      ratio: ratio\n    });\n  };\n  /** 获得滚动条位置  */\n\n\n  Scrollbar.prototype.getValue = function () {\n    return this.ratio;\n  };\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n\n\n  Scrollbar.prototype.getThemeOptions = function () {\n    var theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  };\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n\n\n  Scrollbar.prototype.getScrollbarTheme = function (style) {\n    var theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n\n    var _a = style || {},\n        thumbHighlightColor = _a.thumbHighlightColor,\n        restStyles = __rest(_a, [\"thumbHighlightColor\"]);\n\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), {\n        thumbColor: thumbHighlightColor\n      })\n    };\n  };\n\n  Scrollbar.prototype.measureScrollbar = function () {\n    var xScale = this.view.getXScale();\n    var yScales = this.view.getYScales().slice();\n    this.data = this.getScrollbarData();\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n\n    var _a = this.getScrollbarComponentCfg(),\n        trackLen = _a.trackLen,\n        thumbLen = _a.thumbLen;\n\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || []\n    };\n    this.yScalesCfg = yScales;\n  };\n\n  Scrollbar.prototype.getScrollRange = function () {\n    var startIdx = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    var endIdx = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  };\n\n  Scrollbar.prototype.changeViewData = function (_a, render) {\n    var _this = this;\n\n    var _b = __read(_a, 2),\n        startIdx = _b[0],\n        endIdx = _b[1];\n\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var values = valuesOfKey(this.data, this.xScaleCfg.field); // 如果是 xScale 数值类型，则进行排序\n\n    var xScaleValues = this.view.getXScale().isLinear ? values.sort(function (a, b) {\n      return Number(a) - Number(b);\n    }) : values;\n    var xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    this.yScalesCfg.forEach(function (cfg) {\n      _this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type,\n        min: cfg.min,\n        max: cfg.max,\n        tickMethod: cfg.tickMethod\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, function (val) {\n      var idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  };\n\n  Scrollbar.prototype.createScrollbar = function () {\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var component = new ScrollbarComponent(__assign(__assign({\n      container: this.container\n    }, this.getScrollbarComponentCfg()), {\n      x: 0,\n      y: 0\n    }));\n    component.init();\n    return {\n      component: component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR\n    };\n  };\n\n  Scrollbar.prototype.updateScrollbar = function () {\n    var config = this.getScrollbarComponentCfg();\n    var realConfig = this.trackLen ? __assign(__assign({}, config), {\n      trackLen: this.trackLen,\n      thumbLen: this.thumbLen,\n      thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n    }) : __assign({}, config);\n    this.scrollbar.component.update(realConfig);\n    return this.scrollbar;\n  };\n\n  Scrollbar.prototype.getStep = function () {\n    if (this.step) {\n      return this.step;\n    }\n\n    var coordinateBBox = this.view.coordinateBBox;\n\n    var _a = this.getValidScrollbarCfg(),\n        type = _a.type,\n        categorySize = _a.categorySize;\n\n    var isHorizontal = type !== 'vertical';\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  };\n\n  Scrollbar.prototype.getCnt = function () {\n    if (this.cnt) {\n      return this.cnt;\n    }\n\n    var xScale = this.view.getXScale();\n    var data = this.getScrollbarData();\n    var values = valuesOfKey(data, xScale.field);\n    return size(values);\n  };\n\n  Scrollbar.prototype.getScrollbarComponentCfg = function () {\n    var _a = this.view,\n        coordinateBBox = _a.coordinateBBox,\n        viewBBox = _a.viewBBox;\n\n    var _b = this.getValidScrollbarCfg(),\n        type = _b.type,\n        padding = _b.padding,\n        width = _b.width,\n        height = _b.height,\n        style = _b.style;\n\n    var isHorizontal = type !== 'vertical';\n\n    var _c = __read(padding, 4),\n        paddingTop = _c[0],\n        paddingRight = _c[1],\n        paddingBottom = _c[2],\n        paddingLeft = _c[3];\n\n    var position = isHorizontal ? {\n      x: coordinateBBox.minX + paddingLeft,\n      y: viewBBox.maxY - height - paddingBottom\n    } : {\n      x: viewBBox.maxX - width - paddingRight,\n      y: coordinateBBox.minY + paddingTop\n    };\n    var step = this.getStep();\n    var cnt = this.getCnt();\n    var trackLen = isHorizontal ? coordinateBBox.width - paddingLeft - paddingRight : coordinateBBox.height - paddingTop - paddingBottom;\n    var thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n    return __assign(__assign({}, this.getThemeOptions()), {\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal: isHorizontal,\n      trackLen: trackLen,\n      thumbLen: thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style)\n    });\n  };\n  /**\n   * 填充一些默认的配置项目\n   */\n\n\n  Scrollbar.prototype.getValidScrollbarCfg = function () {\n    var cfg = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {}\n    };\n\n    if (isObject(this.option)) {\n      cfg = __assign(__assign({}, cfg), this.option);\n    }\n\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding = cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n\n    return cfg;\n  };\n  /**\n   * 获取数据\n   */\n\n\n  Scrollbar.prototype.getScrollbarData = function () {\n    var coordinate = this.view.getCoordinate();\n    var cfg = this.getValidScrollbarCfg();\n    var data = this.view.getOptions().data || []; // 纵向做了 y 轴镜像之后，数据也需要镜像反转\n\n    if (coordinate.isReflect('y') && cfg.type === 'vertical') {\n      data = __spreadArray([], __read(data), false).reverse();\n    }\n\n    return data;\n  };\n\n  return Scrollbar;\n}(Controller);\n\nexport default Scrollbar;","map":{"version":3,"mappings":"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","names":["Controller","Scrollbar","ScrollbarComponent","BBox","directionToPosition","COMPONENT_TYPE","DIRECTION","LAYER","VIEW_LIFE_CIRCLE","isObject","clamp","size","throttle","noop","get","valuesOfKey","deepMix","isBetween","DEFAULT_PADDING","DEFAULT_SIZE","DEFAULT_CATEGORY_SIZE","MIN_THUMB_LENGTH","__extends","view","_super","_this","clear","_a","ratio","getValidScrollbarCfg","animate","originalAnimate","getOptions","changeViewData","getScrollRange","container","getLayer","FORE","addGroup","onChangeFn","onValueChange","leading","trackLen","thumbLen","on","BEFORE_CHANGE_DATA","resetMeasure","BEFORE_CHANGE_SIZE","Object","destroy","call","off","option","scrollbar","updateScrollbar","createScrollbar","component","undefined","measureScrollbar","setTimeout","destroyed","width","coordinateBBox","padding","bboxObject","getLayoutBBox","bbox","x","y","Math","min","height","expand","cfg","getScrollbarComponentCfg","isHorizontal","viewBBox","BOTTOM","x1","y1","x2","y2","RIGHT","update","__assign","thumbOffset","cut","render","cnt","step","data","xScaleCfg","yScalesCfg","theme","getTheme","style","thumbHighlightColor","restStyles","default","hover","thumbColor","xScale","getXScale","yScales","getYScales","slice","getScrollbarData","getStep","getCnt","field","values","startIdx","floor","endIdx","_b","type","xScaleValues","isLinear","sort","a","b","Number","xValues","reverse","forEach","scale","formatter","max","tickMethod","filter","val","idx","indexOf","init","layer","direction","SCROLLBAR","config","realConfig","categorySize","paddingTop","paddingRight","paddingBottom","paddingLeft","position","minX","maxY","maxX","minY","getThemeOptions","getScrollbarTheme","coordinate","getCoordinate","isReflect","__spreadArray"],"sourceRoot":"","sources":["../../../src/chart/controller/scrollbar.ts"],"sourcesContent":["import { Controller } from './base';\nimport { IGroup, Scrollbar as ScrollbarComponent, Scale } from '../../dependents';\nimport { ScrollbarOption, ComponentOption, ScrollbarCfg, Data, ScaleOption, Padding } from '../../interface';\nimport View from '../view';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\n\nconst DEFAULT_PADDING: number = 0;\nconst DEFAULT_SIZE: number = 8;\nconst DEFAULT_CATEGORY_SIZE: number = 32;\nconst MIN_THUMB_LENGTH: number = 20;\n\nexport default class Scrollbar extends Controller<ScrollbarOption> {\n  private scrollbar: ComponentOption;\n  private container: IGroup;\n\n  private trackLen: number;\n  private thumbLen: number;\n  private cnt: number;\n  private step: number;\n  private ratio: number;\n  private data: Data;\n  private xScaleCfg: {\n    field: string;\n    values: string[];\n  };\n  private yScalesCfg: Scale[];\n\n  private onChangeFn: (evt: {}) => void = noop;\n\n  constructor(view: View) {\n    super(view);\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n    this.onChangeFn = throttle(this.onValueChange, 20, {\n      leading: true,\n    }) as (evt: {}) => void;\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  get name(): string {\n    return 'scrollbar';\n  }\n\n  public destroy() {\n    super.destroy();\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  public init() { }\n\n  /**\n   * 渲染\n   */\n  public render() {\n    this.option = this.view.getOptions().scrollbar;\n\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  }\n\n  /**\n   * 布局\n   */\n  public layout() {\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(() => {\n        if (!this.view.destroyed) {\n          this.changeViewData(this.getScrollRange(), true);\n        }\n      });\n    }\n    if (this.scrollbar) {\n      const width = this.view.coordinateBBox.width;\n      const padding: Padding = this.scrollbar.component.get('padding') as Padding;\n      const bboxObject = this.scrollbar.component.getLayoutBBox();\n      const bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(\n        padding\n      );\n      const cfg = this.getScrollbarComponentCfg();\n\n      let x: number;\n      let y: number;\n\n      if (cfg.isHorizontal) {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM);\n        const [x2, y2] = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM);\n        x = x2;\n        y = y1;\n      } else {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        const [x2, y2] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        x = x2;\n        y = y1;\n      }\n\n      x += padding[3];\n      y += padding[0];\n\n      // 默认放在 bottom\n      if (this.trackLen) {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n        });\n      } else {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n        });\n      }\n\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 逻辑和 render 保持一致\n    this.render();\n  }\n\n  public getComponents() {\n    return this.scrollbar ? [this.scrollbar] : [];\n  }\n\n  public clear() {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  }\n\n  /** 设置滚动条位置  */\n  public setValue(ratio: number) {\n    this.onValueChange({ ratio });\n  }\n\n  /** 获得滚动条位置  */\n  public getValue() {\n    return this.ratio;\n  }\n\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n  private getThemeOptions() {\n    const theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  }\n\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n  private getScrollbarTheme(style?: ScrollbarCfg['style']) {\n    const theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n    const { thumbHighlightColor, ...restStyles } = style || {};\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), { thumbColor: thumbHighlightColor }),\n    };\n  }\n\n  private resetMeasure = () => {\n    this.clear();\n  };\n\n  private onValueChange = ({ ratio }: { ratio: number }) => {\n    const { animate } = this.getValidScrollbarCfg();\n    this.ratio = clamp(ratio, 0, 1);\n    const originalAnimate = this.view.getOptions().animate;\n    if (!animate) {\n      this.view.animate(false);\n    }\n    this.changeViewData(this.getScrollRange(), true);\n    this.view.animate(originalAnimate);\n  };\n\n  private measureScrollbar(): void {\n    const xScale = this.view.getXScale();\n    const yScales = this.view.getYScales().slice();\n    this.data = this.getScrollbarData();\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n    const { trackLen, thumbLen } = this.getScrollbarComponentCfg();\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || [],\n    };\n    this.yScalesCfg = yScales;\n  }\n\n  private getScrollRange(): [number, number] {\n    const startIdx: number = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    const endIdx: number = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  }\n\n  private changeViewData([startIdx, endIdx]: [number, number], render?: boolean): void {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const values = valuesOfKey(this.data, this.xScaleCfg.field);\n\n    // 如果是 xScale 数值类型，则进行排序\n    const xScaleValues = this.view.getXScale().isLinear ? values.sort((a, b) => Number(a) - Number(b)) : values;\n\n    const xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    this.yScalesCfg.forEach((cfg) => {\n      this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type as ScaleOption['type'],\n        min: cfg.min,\n        max: cfg.max,\n        tickMethod: cfg.tickMethod\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, (val) => {\n      const idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  }\n\n  private createScrollbar(): ComponentOption {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const component = new ScrollbarComponent({\n      container: this.container,\n      ...this.getScrollbarComponentCfg(),\n      x: 0,\n      y: 0,\n    });\n\n    component.init();\n\n    return {\n      component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR,\n    };\n  }\n\n  private updateScrollbar(): ComponentOption {\n    const config = this.getScrollbarComponentCfg();\n    const realConfig = this.trackLen\n      ? {\n        ...config,\n        trackLen: this.trackLen,\n        thumbLen: this.thumbLen,\n        thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n      }\n      : { ...config };\n    this.scrollbar.component.update(realConfig);\n\n    return this.scrollbar;\n  }\n\n  private getStep() {\n    if (this.step) {\n      return this.step;\n    }\n    const { coordinateBBox } = this.view;\n    const { type, categorySize } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  }\n\n  private getCnt() {\n    if (this.cnt) {\n      return this.cnt;\n    }\n    const xScale = this.view.getXScale();\n    const data = this.getScrollbarData();\n    const values = valuesOfKey(data, xScale.field);\n    return size(values);\n  }\n\n  private getScrollbarComponentCfg() {\n    const { coordinateBBox, viewBBox } = this.view;\n    const { type, padding, width, height, style } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n    const position = isHorizontal\n      ? {\n        x: coordinateBBox.minX + paddingLeft,\n        y: viewBBox.maxY - height - paddingBottom,\n      }\n      : {\n        x: viewBBox.maxX - width - paddingRight,\n        y: coordinateBBox.minY + paddingTop,\n      };\n    const step = this.getStep();\n    const cnt = this.getCnt();\n    const trackLen = isHorizontal\n      ? coordinateBBox.width - paddingLeft - paddingRight\n      : coordinateBBox.height - paddingTop - paddingBottom;\n    const thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n\n    return {\n      ...this.getThemeOptions(),\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal,\n      trackLen,\n      thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style),\n    };\n  }\n\n  /**\n   * 填充一些默认的配置项目\n   */\n  private getValidScrollbarCfg(): Required<ScrollbarCfg> {\n    let cfg: Required<ScrollbarCfg> = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {},\n    };\n    if (isObject(this.option)) {\n      cfg = { ...cfg, ...this.option };\n    }\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding =\n        cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n\n    return cfg;\n  }\n\n  /**\n   * 获取数据\n   */\n  private getScrollbarData(): Data {\n    const coordinate = this.view.getCoordinate();\n    const cfg = this.getValidScrollbarCfg();\n    let data = this.view.getOptions().data || [];\n    // 纵向做了 y 轴镜像之后，数据也需要镜像反转\n    if (coordinate.isReflect('y') && cfg.type === 'vertical') {\n      data = [...data].reverse();\n    }\n\n    return data;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}