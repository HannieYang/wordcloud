{"ast":null,"code":"import { map } from '@antv/util';\nimport { BOX_RANGE } from './constant';\n/**\n * @desc 将数据转换为 box 需要的的图表数据,如果yField为数组,从data中解构出对应数组值并写入data,否则直接返回data\n * @param data\n * @param yField\n */\n\nexport var transformData = function (data, yField) {\n  var newData = data; // formate data when `yField` is Array\n\n  if (Array.isArray(yField)) {\n    var low_1 = yField[0],\n        q1_1 = yField[1],\n        median_1 = yField[2],\n        q3_1 = yField[3],\n        high_1 = yField[4];\n    newData = map(data, function (obj) {\n      obj[BOX_RANGE] = [obj[low_1], obj[q1_1], obj[median_1], obj[q3_1], obj[high_1]];\n      return obj;\n    });\n  }\n\n  return newData;\n};","map":{"version":3,"mappings":"AAAA,SAASA,GAAT,QAAoB,YAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAGA;;;;;;AAKA,OAAO,IAAMC,aAAa,GAAG,UAACC,IAAD,EAA2BC,MAA3B,EAAuD;EAClF,IAAIC,OAAO,GAAGF,IAAd,CADkF,CAElF;;EACA,IAAIG,KAAK,CAACC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;IAClB,SAAG,GAA0BA,MAAM,GAAnC;IAAA,IAAKI,IAAE,GAAsBJ,MAAM,GAAnC;IAAA,IAASK,QAAM,GAAcL,MAAM,GAAnC;IAAA,IAAiBM,IAAE,GAAUN,MAAM,GAAnC;IAAA,IAAqBO,MAAI,GAAIP,MAAM,GAAnC;IACPC,OAAO,GAAGL,GAAG,CAACG,IAAD,EAAO,UAACS,GAAD,EAAI;MACtBA,GAAG,CAACX,SAAD,CAAH,GAAiB,CAACW,GAAG,CAACC,KAAD,CAAJ,EAAWD,GAAG,CAACJ,IAAD,CAAd,EAAoBI,GAAG,CAACH,QAAD,CAAvB,EAAiCG,GAAG,CAACF,IAAD,CAApC,EAA0CE,GAAG,CAACD,MAAD,CAA7C,CAAjB;MACA,OAAOC,GAAP;IACD,CAHY,CAAb;EAID;;EAED,OAAOP,OAAP;AACD,CAZM","names":["map","BOX_RANGE","transformData","data","yField","newData","Array","isArray","q1_1","median_1","q3_1","high_1","obj","low_1"],"sourceRoot":"","sources":["../../../src/plots/box/utils.ts"],"sourcesContent":["import { map } from '@antv/util';\nimport { BOX_RANGE } from './constant';\nimport { BoxOptions } from './types';\n\n/**\n * @desc 将数据转换为 box 需要的的图表数据,如果yField为数组,从data中解构出对应数组值并写入data,否则直接返回data\n * @param data\n * @param yField\n */\nexport const transformData = (data: BoxOptions['data'], yField: BoxOptions['yField']) => {\n  let newData = data;\n  // formate data when `yField` is Array\n  if (Array.isArray(yField)) {\n    const [low, q1, median, q3, high] = yField;\n    newData = map(data, (obj) => {\n      obj[BOX_RANGE] = [obj[low], obj[q1], obj[median], obj[q3], obj[high]];\n      return obj;\n    });\n  }\n\n  return newData;\n};\n"]},"metadata":{},"sourceType":"module"}