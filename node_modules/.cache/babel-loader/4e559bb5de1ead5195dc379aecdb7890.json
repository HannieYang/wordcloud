{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { deepMix } from '@antv/util';\nimport { HtmlTooltip } from '../../../../dependents';\nimport Action from '../../base';\nimport { getDelegationObject } from '../../util';\nvar AXIS_DESCRIPTION_TOOLTIP = 'aixs-description-tooltip';\n\nvar AxisDescription =\n/** @class */\nfunction (_super) {\n  __extends(AxisDescription, _super);\n\n  function AxisDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AxisDescription.prototype.show = function () {\n    var context = this.context;\n    var axis = getDelegationObject(context).axis;\n    var _a = axis.cfg.title,\n        description = _a.description,\n        text = _a.text,\n        descriptionTooltipStyle = _a.descriptionTooltipStyle;\n    var _b = context.event,\n        x = _b.x,\n        y = _b.y;\n\n    if (!this.tooltip) {\n      this.renderTooltip();\n    }\n\n    this.tooltip.update({\n      title: text || '',\n      customContent: function () {\n        return \"\\n          <div class=\\\"\".concat(TOOLTIP_CSS_CONST.CONTAINER_CLASS, \"\\\" style={\").concat(descriptionTooltipStyle, \"}>\\n            <div class=\\\"\").concat(TOOLTIP_CSS_CONST.TITLE_CLASS, \"\\\">\\n              \\u5B57\\u6BB5\\u8BF4\\u660E\\uFF1A\").concat(description, \"\\n            </div>\\n          </div>\\n        \");\n      },\n      x: x,\n      y: y\n    });\n    this.tooltip.show();\n  };\n\n  AxisDescription.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.tooltip && this.tooltip.destroy();\n  };\n\n  AxisDescription.prototype.hide = function () {\n    this.tooltip && this.tooltip.hide();\n  };\n\n  AxisDescription.prototype.renderTooltip = function () {\n    var _a;\n\n    var view = this.context.view;\n    var canvas = view.canvas;\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region: region,\n      visible: false,\n      containerId: AXIS_DESCRIPTION_TOOLTIP,\n      domStyles: __assign({}, deepMix({}, (_a = {}, // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n      _a[TOOLTIP_CSS_CONST.CONTAINER_CLASS] = {\n        'max-width': '50%',\n        padding: '10px',\n        'line-height': '15px',\n        'font-size': '12px',\n        color: 'rgba(0, 0, 0, .65)'\n      }, _a[TOOLTIP_CSS_CONST.TITLE_CLASS] = {\n        'word-break': 'break-all',\n        'margin-bottom': '3px'\n      }, _a)))\n    });\n    tooltip.init();\n    tooltip.setCapture(false);\n    this.tooltip = tooltip;\n  };\n\n  return AxisDescription;\n}(Action);\n\nexport default AxisDescription;","map":{"version":3,"mappings":"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","names":["TOOLTIP_CSS_CONST","deepMix","HtmlTooltip","Action","getDelegationObject","AXIS_DESCRIPTION_TOOLTIP","__extends","AxisDescription","context","axis","cfg","title","description","text","descriptionTooltipStyle","event","x","y","tooltip","renderTooltip","update","customContent","CONTAINER_CLASS","concat","TITLE_CLASS","show","_super","destroy","call","hide","view","canvas","region","start","end","get","parent","parentNode","visible","containerId","domStyles","_a","padding","color","init","setCapture"],"sourceRoot":"","sources":["../../../../../src/interaction/action/component/axis/axis-description.ts"],"sourcesContent":["import { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { deepMix } from '@antv/util';\nimport { HtmlTooltip } from '../../../../dependents';\nimport Action from '../../base';\nimport { getDelegationObject } from '../../util';\nimport cx from 'classnames';\n\nconst AXIS_DESCRIPTION_TOOLTIP = 'aixs-description-tooltip';\n\nclass AxisDescription extends Action {\n  private tooltip;\n\n  public show() {\n    const context = this.context;\n    const { axis } = getDelegationObject(context);\n    const { description, text, descriptionTooltipStyle } = axis.cfg.title;\n    const { x, y } = context.event;\n    if (!this.tooltip) {\n      this.renderTooltip();\n    }\n    this.tooltip.update({\n      title: text || '',\n      customContent: () => {\n        return `\n          <div class=\"${TOOLTIP_CSS_CONST.CONTAINER_CLASS}\" style={${descriptionTooltipStyle}}>\n            <div class=\"${TOOLTIP_CSS_CONST.TITLE_CLASS}\">\n              字段说明：${description}\n            </div>\n          </div>\n        `;\n      },\n      x,\n      y,\n    });\n    this.tooltip.show();\n  }\n\n  public destroy() {\n    super.destroy();\n    this.tooltip && this.tooltip.destroy();\n  }\n\n  public hide() {\n    this.tooltip && this.tooltip.hide();\n  }\n\n  public renderTooltip() {\n    const view = this.context.view;\n    const canvas = view.canvas;\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      visible: false,\n      containerId: AXIS_DESCRIPTION_TOOLTIP,\n      domStyles: {\n        ...deepMix(\n          {},\n          {\n            // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n            [TOOLTIP_CSS_CONST.CONTAINER_CLASS]: {\n              'max-width': '50%',\n              padding: '10px',\n              'line-height': '15px',\n              'font-size': '12px',\n              color: 'rgba(0, 0, 0, .65)',\n            },\n            [TOOLTIP_CSS_CONST.TITLE_CLASS]: {\n              'word-break': 'break-all',\n              'margin-bottom': '3px',\n            },\n          }\n        ),\n      },\n    });\n    tooltip.init();\n    tooltip.setCapture(false);\n    this.tooltip = tooltip;\n  }\n}\nexport default AxisDescription;\n"]},"metadata":{},"sourceType":"module"}