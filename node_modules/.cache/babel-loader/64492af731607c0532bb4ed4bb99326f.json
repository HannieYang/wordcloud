{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { ext, mat3, vec3 } from '@antv/matrix-util';\nimport { assign } from '@antv/util';\n/**\n * Coordinate Base Class\n */\n\nvar Coordinate =\n/** @class */\nfunction () {\n  function Coordinate(cfg) {\n    // 自身属性\n    this.type = 'coordinate';\n    this.isRect = false;\n    this.isHelix = false;\n    this.isPolar = false;\n    this.isReflectX = false;\n    this.isReflectY = false;\n    var start = cfg.start,\n        end = cfg.end,\n        _a = cfg.matrix,\n        matrix = _a === void 0 ? [1, 0, 0, 0, 1, 0, 0, 0, 1] : _a,\n        _b = cfg.isTransposed,\n        isTransposed = _b === void 0 ? false : _b;\n    this.start = start;\n    this.end = end;\n    this.matrix = matrix;\n    this.originalMatrix = __spreadArray([], matrix); // 去除引用\n\n    this.isTransposed = isTransposed;\n  }\n  /**\n   * 初始化流程\n   */\n\n\n  Coordinate.prototype.initial = function () {\n    // center、width、height\n    this.center = {\n      x: (this.start.x + this.end.x) / 2,\n      y: (this.start.y + this.end.y) / 2\n    };\n    this.width = Math.abs(this.end.x - this.start.x);\n    this.height = Math.abs(this.end.y - this.start.y);\n  };\n  /**\n   * 更新配置\n   * @param cfg\n   */\n\n\n  Coordinate.prototype.update = function (cfg) {\n    assign(this, cfg);\n    this.initial();\n  };\n\n  Coordinate.prototype.convertDim = function (percent, dim) {\n    var _a;\n\n    var _b = this[dim],\n        start = _b.start,\n        end = _b.end; // 交换\n\n    if (this.isReflect(dim)) {\n      _a = [end, start], start = _a[0], end = _a[1];\n    }\n\n    return start + percent * (end - start);\n  };\n\n  Coordinate.prototype.invertDim = function (value, dim) {\n    var _a;\n\n    var _b = this[dim],\n        start = _b.start,\n        end = _b.end; // 交换\n\n    if (this.isReflect(dim)) {\n      _a = [end, start], start = _a[0], end = _a[1];\n    }\n\n    return (value - start) / (end - start);\n  };\n  /**\n   * 将坐标点进行矩阵变换\n   * @param x   对应 x 轴画布坐标\n   * @param y   对应 y 轴画布坐标\n   * @param tag 默认为 0，可取值 0, 1\n   * @return    返回变换后的三阶向量 [x, y, z]\n   */\n\n\n  Coordinate.prototype.applyMatrix = function (x, y, tag) {\n    if (tag === void 0) {\n      tag = 0;\n    }\n\n    var matrix = this.matrix;\n    var vector = [x, y, tag];\n    vec3.transformMat3(vector, vector, matrix);\n    return vector;\n  };\n  /**\n   * 将坐标点进行矩阵逆变换\n   * @param x   对应 x 轴画布坐标\n   * @param y   对应 y 轴画布坐标\n   * @param tag 默认为 0，可取值 0, 1\n   * @return    返回矩阵逆变换后的三阶向量 [x, y, z]\n   */\n\n\n  Coordinate.prototype.invertMatrix = function (x, y, tag) {\n    if (tag === void 0) {\n      tag = 0;\n    }\n\n    var matrix = this.matrix;\n    var inverted = mat3.invert([0, 0, 0, 0, 0, 0, 0, 0, 0], matrix);\n    var vector = [x, y, tag];\n\n    if (inverted) {\n      // 如果为空则不进行矩阵变化，防止报错\n      vec3.transformMat3(vector, vector, inverted);\n    }\n\n    return vector;\n  };\n  /**\n   * 将归一化的坐标点数据转换为画布坐标，并根据坐标系当前矩阵进行变换\n   * @param point 归一化的坐标点\n   * @return      返回进行矩阵变换后的画布坐标\n   */\n\n\n  Coordinate.prototype.convert = function (point) {\n    var _a = this.convertPoint(point),\n        x = _a.x,\n        y = _a.y;\n\n    var vector = this.applyMatrix(x, y, 1);\n    return {\n      x: vector[0],\n      y: vector[1]\n    };\n  };\n  /**\n   * 将进行过矩阵变换画布坐标转换为归一化坐标\n   * @param point 画布坐标\n   * @return      返回归一化的坐标点\n   */\n\n\n  Coordinate.prototype.invert = function (point) {\n    var vector = this.invertMatrix(point.x, point.y, 1);\n    return this.invertPoint({\n      x: vector[0],\n      y: vector[1]\n    });\n  };\n  /**\n   * 坐标系旋转变换\n   * @param  radian 旋转弧度\n   * @return        返回坐标系对象\n   */\n\n\n  Coordinate.prototype.rotate = function (radian) {\n    var matrix = this.matrix;\n    var center = this.center;\n    ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n    ext.leftRotate(matrix, matrix, radian);\n    ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n    return this;\n  };\n  /**\n   * 坐标系反射变换\n   * @param dim 反射维度\n   * @return    返回坐标系对象\n   */\n\n\n  Coordinate.prototype.reflect = function (dim) {\n    if (dim === 'x') {\n      this.isReflectX = !this.isReflectX;\n    } else {\n      this.isReflectY = !this.isReflectY;\n    }\n\n    return this;\n  };\n  /**\n   * 坐标系比例变换\n   * @param s1 x 方向缩放比例\n   * @param s2 y 方向缩放比例\n   * @return     返回坐标系对象\n   */\n\n\n  Coordinate.prototype.scale = function (s1, s2) {\n    var matrix = this.matrix;\n    var center = this.center;\n    ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n    ext.leftScale(matrix, matrix, [s1, s2]);\n    ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n    return this;\n  };\n  /**\n   * 坐标系平移变换\n   * @param x x 方向平移像素\n   * @param y y 方向平移像素\n   * @return    返回坐标系对象\n   */\n\n\n  Coordinate.prototype.translate = function (x, y) {\n    var matrix = this.matrix;\n    ext.leftTranslate(matrix, matrix, [x, y]);\n    return this;\n  };\n  /**\n   * 将坐标系 x y 两个轴进行转置\n   * @return 返回坐标系对象\n   */\n\n\n  Coordinate.prototype.transpose = function () {\n    this.isTransposed = !this.isTransposed;\n    return this;\n  };\n\n  Coordinate.prototype.getCenter = function () {\n    return this.center;\n  };\n\n  Coordinate.prototype.getWidth = function () {\n    return this.width;\n  };\n\n  Coordinate.prototype.getHeight = function () {\n    return this.height;\n  };\n\n  Coordinate.prototype.getRadius = function () {\n    return this.radius;\n  };\n  /**\n   * whether has reflect\n   * @param dim\n   */\n\n\n  Coordinate.prototype.isReflect = function (dim) {\n    return dim === 'x' ? this.isReflectX : this.isReflectY;\n  };\n  /**\n   * 重置 matrix\n   * @param matrix 如果传入，则使用，否则使用构造函数中传入的默认 matrix\n   */\n\n\n  Coordinate.prototype.resetMatrix = function (matrix) {\n    // 去除引用关系\n    this.matrix = matrix ? matrix : __spreadArray([], this.originalMatrix);\n  };\n\n  return Coordinate;\n}();\n\nexport default Coordinate;","map":{"version":3,"mappings":";AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,SAASC,MAAT,QAAuB,YAAvB;AAQA;;;;AAGA;AAAA;AAAA;EA+BE,oBAAYC,GAAZ,EAA8B;IA9B9B;IACgB,YAAe,YAAf;IACA,cAAkB,KAAlB;IACA,eAAmB,KAAnB;IACA,eAAmB,KAAnB;IAqBR,kBAAa,KAAb;IACA,kBAAa,KAAb;IAKE,SAAK,GAAsEA,GAAG,MAA9E;IAAA,IAAOC,GAAG,GAAiED,GAAG,IAA9E;IAAA,IAAYE,KAA+DF,GAAG,OAA9E;IAAA,IAAYG,MAAM,mBAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAH,GAA8BD,EAAhD;IAAA,IAAkDE,KAAyBJ,GAAG,aAA9E;IAAA,IAAkDK,YAAY,mBAAG,KAAH,GAAQD,EAAtE;IACR,KAAKE,KAAL,GAAaA,KAAb;IACA,KAAKL,GAAL,GAAWA,GAAX;IACA,KAAKE,MAAL,GAAcA,MAAd;IACA,KAAKI,cAAL,GAAsBC,kBAAIL,MAAJ,CAAtB,CAL4B,CAKkB;;IAC9C,KAAKE,YAAL,GAAoBA,YAApB;EACD;EAED;;;;;EAGOI,+BAAP;IACE;IACA,KAAKC,MAAL,GAAc;MACZC,CAAC,EAAE,CAAC,KAAKL,KAAL,CAAWK,CAAX,GAAe,KAAKV,GAAL,CAASU,CAAzB,IAA8B,CADrB;MAEZC,CAAC,EAAE,CAAC,KAAKN,KAAL,CAAWM,CAAX,GAAe,KAAKX,GAAL,CAASW,CAAzB,IAA8B;IAFrB,CAAd;IAKA,KAAKC,KAAL,GAAaC,IAAI,CAACC,GAAL,CAAS,KAAKd,GAAL,CAASU,CAAT,GAAa,KAAKL,KAAL,CAAWK,CAAjC,CAAb;IACA,KAAKK,MAAL,GAAcF,IAAI,CAACC,GAAL,CAAS,KAAKd,GAAL,CAASW,CAAT,GAAa,KAAKN,KAAL,CAAWM,CAAjC,CAAd;EACD,CATM;EAWP;;;;;;EAIOH,8BAAP,UAAcT,GAAd,EAAgC;IAC9BD,MAAM,CAAC,IAAD,EAAOC,GAAP,CAAN;IACA,KAAKiB,OAAL;EACD,CAHM;;EAKAR,kCAAP,UAAkBS,OAAlB,EAAmCC,GAAnC,EAA8C;;;IACxC,SAAiB,KAAKA,GAAL,CAAjB;IAAA,IAAEb,KAAK,WAAP;IAAA,IAASL,GAAG,SAAZ,CADwC,CAG5C;;IACA,IAAI,KAAKmB,SAAL,CAAeD,GAAf,CAAJ,EAAyB;MACvBjB,KAAe,CAACD,GAAD,EAAMK,KAAN,CAAf,EAACA,KAAK,QAAN,EAAQL,GAAG,QAAX;IACD;;IAED,OAAOK,KAAK,GAAGY,OAAO,IAAIjB,GAAG,GAAGK,KAAV,CAAtB;EACD,CATM;;EAWAG,iCAAP,UAAiBY,KAAjB,EAAgCF,GAAhC,EAA2C;;;IACrC,SAAiB,KAAKA,GAAL,CAAjB;IAAA,IAAEb,KAAK,WAAP;IAAA,IAASL,GAAG,SAAZ,CADqC,CAEzC;;IACA,IAAI,KAAKmB,SAAL,CAAeD,GAAf,CAAJ,EAAyB;MACvBjB,KAAe,CAACD,GAAD,EAAMK,KAAN,CAAf,EAACA,KAAK,QAAN,EAAQL,GAAG,QAAX;IACD;;IAED,OAAO,CAACoB,KAAK,GAAGf,KAAT,KAAmBL,GAAG,GAAGK,KAAzB,CAAP;EACD,CARM;EAUP;;;;;;;;;EAOOG,mCAAP,UAAmBE,CAAnB,EAA8BC,CAA9B,EAAyCU,GAAzC,EAAwD;IAAf;MAAAA;IAAe;;IACtD,IAAMnB,MAAM,GAAG,KAAKA,MAApB;IACA,IAAMoB,MAAM,GAAY,CAACZ,CAAD,EAAIC,CAAJ,EAAOU,GAAP,CAAxB;IACAxB,IAAI,CAAC0B,aAAL,CAAmBD,MAAnB,EAA2BA,MAA3B,EAAmCpB,MAAnC;IACA,OAAOoB,MAAP;EACD,CALM;EAOP;;;;;;;;;EAOOd,oCAAP,UAAoBE,CAApB,EAA+BC,CAA/B,EAA0CU,GAA1C,EAAyD;IAAf;MAAAA;IAAe;;IACvD,IAAMnB,MAAM,GAAG,KAAKA,MAApB;IACA,IAAMsB,QAAQ,GAAG5B,IAAI,CAAC6B,MAAL,CAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAZ,EAAyCvB,MAAzC,CAAjB;IACA,IAAMoB,MAAM,GAAY,CAACZ,CAAD,EAAIC,CAAJ,EAAOU,GAAP,CAAxB;;IACA,IAAIG,QAAJ,EAAc;MACZ;MACA3B,IAAI,CAAC0B,aAAL,CAAmBD,MAAnB,EAA2BA,MAA3B,EAAmCE,QAAnC;IACD;;IACD,OAAOF,MAAP;EACD,CATM;EAWP;;;;;;;EAKOd,+BAAP,UAAekB,KAAf,EAA2B;IACnB,SAAW,KAAKC,YAAL,CAAkBD,KAAlB,CAAX;IAAA,IAAEhB,CAAC,OAAH;IAAA,IAAKC,CAAC,OAAN;;IACN,IAAMW,MAAM,GAAG,KAAKM,WAAL,CAAiBlB,CAAjB,EAAoBC,CAApB,EAAuB,CAAvB,CAAf;IACA,OAAO;MACLD,CAAC,EAAEY,MAAM,CAAC,CAAD,CADJ;MAELX,CAAC,EAAEW,MAAM,CAAC,CAAD;IAFJ,CAAP;EAID,CAPM;EASP;;;;;;;EAKOd,8BAAP,UAAckB,KAAd,EAA0B;IACxB,IAAMJ,MAAM,GAAG,KAAKO,YAAL,CAAkBH,KAAK,CAAChB,CAAxB,EAA2BgB,KAAK,CAACf,CAAjC,EAAoC,CAApC,CAAf;IACA,OAAO,KAAKmB,WAAL,CAAiB;MACtBpB,CAAC,EAAEY,MAAM,CAAC,CAAD,CADa;MAEtBX,CAAC,EAAEW,MAAM,CAAC,CAAD;IAFa,CAAjB,CAAP;EAID,CANM;EAQP;;;;;;;EAKOd,8BAAP,UAAcuB,MAAd,EAA4B;IAC1B,IAAM7B,MAAM,GAAG,KAAKA,MAApB;IACA,IAAMO,MAAM,GAAG,KAAKA,MAApB;IACAd,GAAG,CAACqC,aAAJ,CAAkB9B,MAAlB,EAA0BA,MAA1B,EAAkC,CAAC,CAACO,MAAM,CAACC,CAAT,EAAY,CAACD,MAAM,CAACE,CAApB,CAAlC;IACAhB,GAAG,CAACsC,UAAJ,CAAe/B,MAAf,EAAuBA,MAAvB,EAA+B6B,MAA/B;IACApC,GAAG,CAACqC,aAAJ,CAAkB9B,MAAlB,EAA0BA,MAA1B,EAAkC,CAACO,MAAM,CAACC,CAAR,EAAWD,MAAM,CAACE,CAAlB,CAAlC;IACA,OAAO,IAAP;EACD,CAPM;EASP;;;;;;;EAKOH,+BAAP,UAAeU,GAAf,EAA0B;IACxB,IAAIA,GAAG,KAAK,GAAZ,EAAiB;MACf,KAAKgB,UAAL,GAAkB,CAAC,KAAKA,UAAxB;IACD,CAFD,MAEO;MACL,KAAKC,UAAL,GAAkB,CAAC,KAAKA,UAAxB;IACD;;IACD,OAAO,IAAP;EACD,CAPM;EASP;;;;;;;;EAMO3B,6BAAP,UAAa4B,EAAb,EAAyBC,EAAzB,EAAmC;IACjC,IAAMnC,MAAM,GAAG,KAAKA,MAApB;IACA,IAAMO,MAAM,GAAG,KAAKA,MAApB;IACAd,GAAG,CAACqC,aAAJ,CAAkB9B,MAAlB,EAA0BA,MAA1B,EAAkC,CAAC,CAACO,MAAM,CAACC,CAAT,EAAY,CAACD,MAAM,CAACE,CAApB,CAAlC;IACAhB,GAAG,CAAC2C,SAAJ,CAAcpC,MAAd,EAAsBA,MAAtB,EAA8B,CAACkC,EAAD,EAAKC,EAAL,CAA9B;IACA1C,GAAG,CAACqC,aAAJ,CAAkB9B,MAAlB,EAA0BA,MAA1B,EAAkC,CAACO,MAAM,CAACC,CAAR,EAAWD,MAAM,CAACE,CAAlB,CAAlC;IACA,OAAO,IAAP;EACD,CAPM;EASP;;;;;;;;EAMOH,iCAAP,UAAiBE,CAAjB,EAA4BC,CAA5B,EAAqC;IACnC,IAAMT,MAAM,GAAG,KAAKA,MAApB;IACAP,GAAG,CAACqC,aAAJ,CAAkB9B,MAAlB,EAA0BA,MAA1B,EAAkC,CAACQ,CAAD,EAAIC,CAAJ,CAAlC;IACA,OAAO,IAAP;EACD,CAJM;EAMP;;;;;;EAIOH,iCAAP;IACE,KAAKJ,YAAL,GAAoB,CAAC,KAAKA,YAA1B;IACA,OAAO,IAAP;EACD,CAHM;;EAKAI,iCAAP;IACE,OAAO,KAAKC,MAAZ;EACD,CAFM;;EAIAD,gCAAP;IACE,OAAO,KAAKI,KAAZ;EACD,CAFM;;EAIAJ,iCAAP;IACE,OAAO,KAAKO,MAAZ;EACD,CAFM;;EAIAP,iCAAP;IACE,OAAO,KAAK+B,MAAZ;EACD,CAFM;EAIP;;;;;;EAIO/B,iCAAP,UAAiBU,GAAjB,EAA4B;IAC1B,OAAOA,GAAG,KAAK,GAAR,GAAc,KAAKgB,UAAnB,GAAgC,KAAKC,UAA5C;EACD,CAFM;EAIP;;;;;;EAIO3B,mCAAP,UAAmBN,MAAnB,EAAmC;IACjC;IACA,KAAKA,MAAL,GAAcA,MAAM,GAAGA,MAAH,GAAaK,kBAAI,KAAKD,cAAT,CAAjC;EACD,CAHM;;EAgBT;AAAC,CA3PD","names":["ext","mat3","vec3","assign","cfg","end","_a","matrix","_b","isTransposed","start","originalMatrix","__spreadArray","Coordinate","center","x","y","width","Math","abs","height","initial","percent","dim","isReflect","value","tag","vector","transformMat3","inverted","invert","point","convertPoint","applyMatrix","invertMatrix","invertPoint","radian","leftTranslate","leftRotate","isReflectX","isReflectY","s1","s2","leftScale","radius"],"sourceRoot":"","sources":["../../src/coord/base.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}