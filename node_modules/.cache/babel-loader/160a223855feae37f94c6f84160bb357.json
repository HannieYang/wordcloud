{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as _ from '@antv/util';\nimport { GAP } from '../constant';\nimport Adjust from './adjust';\n\nfunction randomNumber(min, max) {\n  return (max - min) * Math.random() + min;\n}\n\nvar Jitter =\n/** @class */\nfunction (_super) {\n  __extends(Jitter, _super);\n\n  function Jitter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Jitter.prototype.process = function (groupDataArray) {\n    var groupedDataArray = _.clone(groupDataArray); // 之前分组之后的数据，然后有合并回去（和分组前可以理解成是一样的）\n\n\n    var mergeData = _.flatten(groupedDataArray); // 返回值\n\n\n    this.adjustData(groupedDataArray, mergeData);\n    return groupedDataArray;\n  };\n  /**\n   * 当前数据分组（index）中，按照维度 dim 进行 jitter 调整\n   * @param dim\n   * @param values\n   * @param dataArray\n   */\n\n\n  Jitter.prototype.adjustDim = function (dim, values, dataArray) {\n    var _this = this; // 在每一个分组中，将数据再按照 dim 分组，用于散列\n\n\n    var groupDataArray = this.groupData(dataArray, dim);\n    return _.each(groupDataArray, function (data, dimValue) {\n      return _this.adjustGroup(data, dim, parseFloat(dimValue), values);\n    });\n  }; // 随机出来的字段值\n\n\n  Jitter.prototype.getAdjustOffset = function (range) {\n    var pre = range.pre,\n        next = range.next; // 随机的范围\n\n    var margin = (next - pre) * GAP;\n    return randomNumber(pre + margin, next - margin);\n  }; // adjust group data\n\n\n  Jitter.prototype.adjustGroup = function (group, dim, dimValue, values) {\n    var _this = this; // 调整范围\n\n\n    var range = this.getAdjustRange(dim, dimValue, values);\n\n    _.each(group, function (data) {\n      data[dim] = _this.getAdjustOffset(range); // 获取调整的位置\n    });\n\n    return group;\n  };\n\n  return Jitter;\n}(Adjust);\n\nexport default Jitter;","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,CAAZ,MAAmB,YAAnB;AACA,SAASC,GAAT,QAAoB,aAApB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAAmCC,GAAnC,EAA8C;EAC5C,OAAO,CAACA,GAAG,GAAGD,GAAP,IAAcE,IAAI,CAACC,MAAL,EAAd,GAA8BH,GAArC;AACD;;AAED;AAAA;AAAA;EAAoCI;;EAApC;;EA6CC;;EA5CQC,2BAAP,UAAeC,cAAf,EAAuC;IACrC,IAAMC,gBAAgB,GAAGX,CAAC,CAACY,KAAF,CAAQF,cAAR,CAAzB,CADqC,CAGrC;;;IACA,IAAMG,SAAS,GAAGb,CAAC,CAACc,OAAF,CAAUH,gBAAV,CAAlB,CAJqC,CAMrC;;;IACA,KAAKI,UAAL,CAAgBJ,gBAAhB,EAAkCE,SAAlC;IAEA,OAAOF,gBAAP;EACD,CAVM;EAYP;;;;;;;;EAMUF,6BAAV,UAAoBO,GAApB,EAAiCC,MAAjC,EAAmDC,SAAnD,EAAoE;IAApE,iBAAoE,CAClE;;;IACA,IAAMR,cAAc,GAAG,KAAKS,SAAL,CAAeD,SAAf,EAA0BF,GAA1B,CAAvB;IACA,OAAOhB,CAAC,CAACoB,IAAF,CAAOV,cAAP,EAAuB,UAACW,IAAD,EAAeC,QAAf,EAA+B;MAC3D,OAAOC,KAAI,CAACC,WAAL,CAAiBH,IAAjB,EAAuBL,GAAvB,EAA4BS,UAAU,CAACH,QAAD,CAAtC,EAAkDL,MAAlD,CAAP;IACD,CAFM,CAAP;EAGD,CANS,CAnBZ,CA2BE;;;EACQR,mCAAR,UAAwBiB,KAAxB,EAAoC;IAC1B,OAAG,GAAWA,KAAK,IAAnB;IAAA,IAAKC,IAAI,GAAKD,KAAK,KAAnB,CAD0B,CAElC;;IACA,IAAME,MAAM,GAAG,CAACD,IAAI,GAAGE,GAAR,IAAe5B,GAA9B;IACA,OAAOE,YAAY,CAAC0B,GAAG,GAAGD,MAAP,EAAeD,IAAI,GAAGC,MAAtB,CAAnB;EACD,CALO,CA5BV,CAmCE;;;EACQnB,+BAAR,UAAoBqB,KAApB,EAAmCd,GAAnC,EAAgDM,QAAhD,EAAkEL,MAAlE,EAAkF;IAAlF,iBAAkF,CAChF;;;IACA,IAAMS,KAAK,GAAG,KAAKK,cAAL,CAAoBf,GAApB,EAAyBM,QAAzB,EAAmCL,MAAnC,CAAd;;IAEAjB,CAAC,CAACoB,IAAF,CAAOU,KAAP,EAAc,UAACT,IAAD,EAAW;MACvBA,IAAI,CAACL,GAAD,CAAJ,GAAYO,KAAI,CAACS,eAAL,CAAqBN,KAArB,CAAZ,CADuB,CACkB;IAC1C,CAFD;;IAGA,OAAOI,KAAP;EACD,CARO;;EASV;AAAC,CA7CD,CAAoC5B,MAApC","names":["_","GAP","Adjust","randomNumber","min","max","Math","random","__extends","Jitter","groupDataArray","groupedDataArray","clone","mergeData","flatten","adjustData","dim","values","dataArray","groupData","each","data","dimValue","_this","adjustGroup","parseFloat","range","next","margin","pre","group","getAdjustRange","getAdjustOffset"],"sourceRoot":"","sources":["../../src/adjusts/jitter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}