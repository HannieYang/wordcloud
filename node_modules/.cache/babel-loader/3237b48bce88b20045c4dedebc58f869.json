{"ast":null,"code":"import { WordCloud } from '@antv/g2plot';\nimport axios from 'axios';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  data() {\n    return {\n      all_labels_data: [],\n      labels: [],\n      labels_list: [],\n      searchContent: '',\n      // netValue:\"\",\n      // netOptions:[],\n      categoryValue: \"\",\n      categoryOptions: [],\n      tableData: [],\n      currentPage: 1,\n      pageSize: 10,\n      small: false,\n      disabled: false,\n      background: false,\n      total: 200\n    };\n  },\n\n  computed: {\n    // netValue(){\n    //     return this.netOptions[0]\n    // },\n    // categoryValue(){\n    //     return this.categoryOptions[0]\n    // },\n    labelsContainerIsShow() {\n      return this.searchContent == \"\";\n    },\n\n    searchResultTableIsShow() {\n      return this.tableData.length != 0;\n    },\n\n    emptyIsShow() {\n      return this.searchContent != \"\" && this.tableData.length == 0;\n    }\n\n  },\n  methods: {\n    initChart() {\n      const wordCloud = new WordCloud('wordcloud', {\n        data: this.labels,\n        autoFit: true,\n        wordField: 'name',\n        weightField: 'cnt',\n        colorField: 'cnt',\n        wordStyle: {\n          fontFamily: 'Verdana',\n          fontSize: [15, 30]\n        },\n        // 设置交互类型\n        interactions: [{\n          type: 'element-active'\n        }],\n        state: {\n          active: {\n            // 这里可以设置 active 时的样式\n            style: {\n              lineWidth: 3\n            }\n          }\n        },\n        tooltip: {\n          enterable: true\n        },\n        random: () => 0.5\n      });\n      wordCloud.render(); // 图例名称添加点击事件\n\n      wordCloud.on('element:click', (...args) => {\n        console.log(args[0].data.data.text);\n        this.searchContent = args[0].data.data.text; //todo：向后端请求数据\n\n        axios({\n          method: 'post',\n          url: '/mock/two',\n          data: {\n            label: this.searchContent,\n            // net: this.netValue,\n            category: this.categoryValue,\n            page: 1,\n            page_size: this.pageSize\n          }\n        }).then(response => {\n          console.log(response);\n          const data = response.data;\n          this.total = data.total;\n          this.tableData = data.result_list;\n        }).catch(error => {\n          console.log(error);\n        });\n      });\n    },\n\n    categoryChange() {\n      if (this.searchContent.length == 0) {\n        this.labels_list = this.all_labels_data[this.categoryValue];\n      } else {\n        this.search();\n      }\n    },\n\n    clickSearchButton() {\n      if (this.searchContent.length == 0) {\n        ElMessageBox.alert('请输入查询内容', '提示', {\n          // if you want to disable its autofocus\n          // autofocus: false,\n          confirmButtonText: 'OK',\n          callback: action => {\n            ElMessage({\n              type: 'info',\n              message: `action: ${action}`\n            });\n          }\n        });\n      } else {\n        this.search();\n      }\n    },\n\n    inputSearchContent() {\n      if (this.searchContent.length == 0) {\n        this.tableData = [];\n      } else {\n        this.search();\n      }\n    },\n\n    search() {\n      if (this.searchContent != \"\") {\n        // console.log(this.searchContent)\n        // console.log(this.netValue)\n        // console.log(this.categoryValue)\n        // todo：向后端请求数据\n        axios({\n          method: 'post',\n          url: '/mock/two',\n          data: {\n            label: this.searchContent,\n            // net: this.netValue,\n            category: this.categoryValue,\n            page: 1,\n            page_size: this.pageSize\n          }\n        }).then(response => {\n          console.log(response);\n          const data = response.data;\n          this.total = data.total;\n          this.tableData = data.result_list;\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n\n    searchThisLabel(label) {\n      this.searchContent = label; // console.log(label)\n      // todo：向后端请求数据\n\n      axios({\n        method: 'post',\n        url: '/mock/two',\n        data: {\n          label: this.searchContent,\n          // net: this.netValue,\n          category: this.categoryValue,\n          page: 1,\n          page_size: this.pageSize\n        }\n      }).then(response => {\n        console.log(response);\n        const data = response.data;\n        this.total = data.total;\n        this.tableData = data.result_list;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    getTableData() {\n      // console.log(this.pageSize);\n      // console.log(this.currentPage);\n      //todo：向后端请求数据\n      axios({\n        method: 'post',\n        url: '/mock/two',\n        data: {\n          label: this.searchContent,\n          // net: this.netValue,\n          category: this.categoryValue,\n          page: this.currentPage,\n          page_size: this.pageSize\n        }\n      }).then(response => {\n        console.log(response);\n        const data = response.data;\n        this.total = data.total;\n        this.tableData = data.result_list;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    checkLabel(label, name) {\n      console.log(label);\n      console.log(name);\n      return label.name == name;\n    },\n\n    getAllLabelData(data) {\n      let labels = []; // console.log(typeof(data))\n\n      for (let key in data) {\n        console.log(key);\n        const key_data = data[key];\n        console.log(key_data);\n        key_data.forEach(element => {\n          console.log(key);\n          console.log(element);\n          let index = labels.findIndex(this.checkLabel, element.name);\n          console.log(index);\n\n          if (index == -1) {\n            labels.push({\n              'name': element.name,\n              'cnt': element.cnt,\n              'ctg': [{\n                key: element.cnt\n              }]\n            });\n          } else {\n            // let label = labels[index];\n            labels[index].cnt = labels[index].cnt + element.cnt;\n            labels[index].ctg.push({\n              key: element.cnt\n            });\n          }\n\n          console.log(labels);\n        });\n      }\n\n      return labels;\n    }\n\n  },\n\n  mounted() {\n    //todo：向后端请求词云数据，初步写了请求代码，之后参数名什么的还需要调整，看后端返回的具体数据\n    axios({\n      method: 'get',\n      url: 'http://8.134.73.140:58003/api/cloud'\n    }).then(response => {\n      // console.log(response)\n      const data = response.data.data;\n      console.log(data); // todo:根据后端返回的数据生成词云数据\n\n      this.all_labels_data = data;\n      this.labels = this.getAllLabelData(data);\n      console.log(this.labels); // this.labels_list = data.all;\n      // this.netOptions = data.net_list;\n      // this.netValue = data.net_list[0];\n\n      const category_list = Object.keys(data);\n      this.categoryOptions = category_list;\n      this.categoryValue = category_list[0];\n      this.labels_list = data[this.categoryValue];\n      this.initChart();\n    }).catch(error => {\n      console.log('here');\n      console.log(error);\n    }); // this.initChart()\n  }\n\n};","map":{"version":3,"mappings":"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","names":["WordCloud","axios","ElMessage","ElMessageBox","data","all_labels_data","labels","labels_list","searchContent","categoryValue","categoryOptions","tableData","currentPage","pageSize","small","disabled","background","total","computed","labelsContainerIsShow","searchResultTableIsShow","length","emptyIsShow","methods","initChart","wordCloud","autoFit","wordField","weightField","colorField","wordStyle","fontFamily","fontSize","interactions","type","state","active","style","lineWidth","tooltip","enterable","random","render","on","args","console","log","text","method","url","label","category","page","page_size","then","response","result_list","catch","error","categoryChange","search","clickSearchButton","alert","confirmButtonText","callback","action","message","inputSearchContent","searchThisLabel","getTableData","checkLabel","name","getAllLabelData","key","key_data","forEach","element","index","findIndex","push","cnt","ctg","mounted","category_list","Object","keys"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\Desktop\\wordcloud\\src\\views\\WordCloudView.vue"],"sourcesContent":["<template>\r\n    <div id=\"whole-wordcloud-page\">\r\n        <el-container>\r\n            <el-main>\r\n                <div id=\"wordcloud-container\">\r\n                    <p>Label Word Cloud</p>\r\n                    <div id=\"wordcloud\"></div>\r\n                </div>\r\n                <div id=\"search-container\">\r\n                    <el-row :gutter=\"20\">\r\n                        <!-- <el-col :sm=\"6\" :xs=\"10\">\r\n                            <div id=\"net-selector\" class=\"layout-search\">\r\n                                <p>net:</p>\r\n                                <el-select v-model=\"netValue\" placeholder=\"Select\" @change=\"search\">\r\n                                    <el-option\r\n                                    v-for=\"item in netOptions\"\r\n                                    :key=\"item\"\r\n                                    :value=\"item\"\r\n                                    />\r\n                                </el-select>\r\n                            </div>\r\n                        </el-col> -->\r\n                        <el-col :sm=\"10\" :xs=\"24\">\r\n                            <div id=\"category-selector\" class=\"layout-search\">\r\n                                <p>category:</p>\r\n                                <el-select v-model=\"categoryValue\" placeholder=\"Select\" @change=\"categoryChange\">\r\n                                    <el-option\r\n                                    v-for=\"item in categoryOptions\"\r\n                                    :key=\"item\"\r\n                                    :value=\"item\"\r\n                                    />\r\n                                </el-select>\r\n                            </div>\r\n                        </el-col>\r\n                        <el-col :sm=\"14\" :xs=\"24\">\r\n                            <div id=\"label-input-box\" class=\"layout-search\">\r\n                                <el-input v-model=\"searchContent\" placeholder=\"Search Labels\" @input=\"inputSearchContent\">\r\n                                    <template #append>\r\n                                        <el-button class=\"search-button\" @click=\"clickSearchButton\">Search</el-button>\r\n                                    </template>\r\n                                </el-input>\r\n                            </div>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n                <div id=\"labels-container\" v-show=\"labelsContainerIsShow\">\r\n                    <el-row>\r\n                        <el-col :lg=\"6\" :md=\"8\" :sm=\"12\" :xs=\"24\" v-for=\"label in labels_list\" :key=\"label.name\">\r\n                            <el-button class=\"label-button\" @click=\"searchThisLabel(label.name)\">{{label.name}}\r\n                                <el-tag effect=\"dark\" round size=\"small\" style=\"margin-left:10px\">{{ label.cnt }}</el-tag>\r\n                            </el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n                <div id=\"search-result-table\" v-show=\"searchResultTableIsShow\">\r\n                    <div id=\"result-table\">\r\n                        <el-table :data=\"tableData\">\r\n                            <el-table-column type=\"expand\">\r\n                                <template #default=\"props\">\r\n                                    <div>\r\n                                        <p v-for=\"(value,name) in props.row.info\" :key=\"name\">{{name}}:{{value}}</p>\r\n                                    </div>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column label=\"Label\" prop=\"label\">\r\n                                <template #default=\"scope\">\r\n                                    <el-tag v-for=\"item in scope.row.label\" v-bind:key=\"item\" disable-transitions hit @click=\"searchThisLabel(item)\"> {{item}}</el-tag>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <!-- <el-table-column label=\"Net\" prop=\"net\" /> -->\r\n                            <el-table-column label=\"Category\" prop=\"category\" />\r\n                            <el-table-column label=\"Address\" prop=\"address\"/>\r\n                        </el-table>\r\n                    </div>\r\n                    <div id=\"result-pagination\">\r\n                        <el-pagination\r\n                            v-model:currentPage=\"currentPage\"\r\n                            v-model:page-size=\"pageSize\"\r\n                            :page-sizes=\"[10,25,50,100]\"\r\n                            :small=\"small\"\r\n                            :disabled=\"disabled\"\r\n                            :background=\"background\"\r\n                            layout=\"total, sizes, prev, pager, next, jumper\"\r\n                            :total=\"total\"\r\n                            @size-change=\"getTableData\"\r\n                            @current-change=\"getTableData\"\r\n                            @next-click=\"getTableData\"\r\n                            @prev-click=\"getTableData\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <el-empty description=\"No Data\" v-show=\"emptyIsShow\"/>\r\n            </el-main>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { WordCloud } from '@antv/g2plot';\r\nimport axios from 'axios';\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nexport default {\r\n    data(){\r\n        return{\r\n            all_labels_data:[],\r\n            labels:[],\r\n            labels_list:[],\r\n            searchContent:'',\r\n            // netValue:\"\",\r\n            // netOptions:[],\r\n            categoryValue:\"\",\r\n            categoryOptions:[],\r\n            tableData:[],\r\n            currentPage:1,\r\n            pageSize:10,\r\n            small:false,\r\n            disabled:false,\r\n            background:false,\r\n            total:200,\r\n        }\r\n    },\r\n    computed:{\r\n        // netValue(){\r\n        //     return this.netOptions[0]\r\n        // },\r\n        // categoryValue(){\r\n        //     return this.categoryOptions[0]\r\n        // },\r\n        labelsContainerIsShow(){\r\n            return this.searchContent==\"\"\r\n        },\r\n        searchResultTableIsShow(){\r\n            return this.tableData.length != 0\r\n        },\r\n        emptyIsShow(){\r\n            return this.searchContent!=\"\" && this.tableData.length == 0\r\n        }\r\n    },\r\n    methods:{\r\n        initChart(){\r\n            const wordCloud = new WordCloud('wordcloud', {\r\n                data:this.labels,\r\n                autoFit:true,\r\n                wordField: 'name',\r\n                weightField: 'cnt',\r\n                colorField:'cnt',\r\n                wordStyle: {\r\n                    fontFamily: 'Verdana',\r\n                    fontSize: [15, 30],\r\n                },\r\n                // 设置交互类型\r\n                interactions: [{ type: 'element-active' }],\r\n                state: {\r\n                    active: {\r\n                    // 这里可以设置 active 时的样式\r\n                        style: {\r\n                            lineWidth: 3,\r\n                        },\r\n                    },\r\n                },\r\n                tooltip:{\r\n                    enterable: true\r\n                },\r\n                random: () => 0.5,\r\n            });\r\n\r\n            wordCloud.render();\r\n            // 图例名称添加点击事件\r\n            wordCloud.on('element:click', (...args) => {\r\n                console.log(args[0].data.data.text);\r\n                this.searchContent = args[0].data.data.text;\r\n                //todo：向后端请求数据\r\n                axios({\r\n                    method: 'post',\r\n                    url:'/mock/two',\r\n                    data:{\r\n                        label: this.searchContent,\r\n                        // net: this.netValue,\r\n                        category: this.categoryValue,\r\n                        page:1,\r\n                        page_size:this.pageSize\r\n                    }\r\n                }).then((response)=>{\r\n                    console.log(response)\r\n                    const data = response.data;\r\n                    this.total = data.total;\r\n                    this.tableData = data.result_list;\r\n                }).catch((error)=>{\r\n                    console.log(error)\r\n                })\r\n            });\r\n        },\r\n        categoryChange(){\r\n            if(this.searchContent.length == 0){\r\n                this.labels_list = this.all_labels_data[this.categoryValue]\r\n            }else{\r\n                this.search()\r\n            }\r\n        },\r\n        clickSearchButton(){\r\n            if(this.searchContent.length == 0){\r\n                ElMessageBox.alert('请输入查询内容', '提示', {\r\n                    // if you want to disable its autofocus\r\n                    // autofocus: false,\r\n                    confirmButtonText: 'OK',\r\n                    callback: (action) => {\r\n                        ElMessage({\r\n                            type: 'info',\r\n                            message: `action: ${action}`,\r\n                        })\r\n                    },\r\n                })\r\n            }else{\r\n                this.search();\r\n            }\r\n        },\r\n        inputSearchContent(){\r\n            if(this.searchContent.length == 0){\r\n                this.tableData = []\r\n            }else{\r\n                this.search()\r\n            }\r\n        },\r\n        search(){\r\n            if(this.searchContent != \"\"){\r\n                // console.log(this.searchContent)\r\n                // console.log(this.netValue)\r\n                // console.log(this.categoryValue)\r\n                // todo：向后端请求数据\r\n                axios({\r\n                    method: 'post',\r\n                    url:'/mock/two',\r\n                    data:{\r\n                        label: this.searchContent,\r\n                        // net: this.netValue,\r\n                        category: this.categoryValue,\r\n                        page:1,\r\n                        page_size:this.pageSize\r\n                    }\r\n                }).then((response)=>{\r\n                    console.log(response)\r\n                    const data = response.data;\r\n                    this.total = data.total;\r\n                    this.tableData = data.result_list;\r\n                }).catch((error)=>{\r\n                    console.log(error)\r\n                })\r\n            }\r\n        },\r\n        searchThisLabel(label){\r\n            this.searchContent = label;\r\n            // console.log(label)\r\n            // todo：向后端请求数据\r\n            axios({\r\n                method: 'post',\r\n                url:'/mock/two',\r\n                data:{\r\n                    label: this.searchContent,\r\n                    // net: this.netValue,\r\n                    category: this.categoryValue,\r\n                    page:1,\r\n                    page_size:this.pageSize\r\n                }\r\n            }).then((response)=>{\r\n                console.log(response)\r\n                const data = response.data;\r\n                this.total = data.total;\r\n                this.tableData = data.result_list;\r\n            }).catch((error)=>{\r\n                console.log(error)\r\n            })\r\n        },\r\n        getTableData(){\r\n            // console.log(this.pageSize);\r\n            // console.log(this.currentPage);\r\n            //todo：向后端请求数据\r\n            axios({\r\n                method: 'post',\r\n                url:'/mock/two',\r\n                data:{\r\n                    label: this.searchContent,\r\n                    // net: this.netValue,\r\n                    category: this.categoryValue,\r\n                    page:this.currentPage,\r\n                    page_size:this.pageSize\r\n                }\r\n            }).then((response)=>{\r\n                console.log(response)\r\n                const data = response.data;\r\n                this.total = data.total;\r\n                this.tableData = data.result_list;\r\n            }).catch((error)=>{\r\n                console.log(error)\r\n            })\r\n        },\r\n        checkLabel(label, name){\r\n            console.log(label);\r\n            console.log(name);\r\n            return label.name == name\r\n        },\r\n        getAllLabelData(data){\r\n            let labels = [];\r\n            // console.log(typeof(data))\r\n            for(let key in data){\r\n                console.log(key);\r\n                const key_data = data[key];\r\n                console.log(key_data);\r\n                key_data.forEach(element => {\r\n                    console.log(key)\r\n                    console.log(element);\r\n                    let index = labels.findIndex(this.checkLabel, element.name);\r\n                    console.log(index)\r\n                    if(index == -1){\r\n                        labels.push({\r\n                            'name': element.name,\r\n                            'cnt':element.cnt,\r\n                            'ctg':[{\r\n                               key : element.cnt\r\n                            }]\r\n                        })\r\n                    }else{\r\n                        // let label = labels[index];\r\n                        labels[index].cnt = labels[index].cnt + element.cnt;\r\n                        labels[index].ctg.push({key: element.cnt})\r\n                    }\r\n                    console.log(labels)\r\n                });\r\n            }\r\n            return labels\r\n        },\r\n    },\r\n    mounted(){\r\n        //todo：向后端请求词云数据，初步写了请求代码，之后参数名什么的还需要调整，看后端返回的具体数据\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://8.134.73.140:58003/api/cloud'\r\n        }).then((response)=>{\r\n            // console.log(response)\r\n            const data = response.data.data;\r\n            console.log(data)\r\n            // todo:根据后端返回的数据生成词云数据\r\n            this.all_labels_data = data;\r\n            this.labels = this.getAllLabelData(data);\r\n            console.log(this.labels)\r\n            // this.labels_list = data.all;\r\n            // this.netOptions = data.net_list;\r\n            // this.netValue = data.net_list[0];\r\n            const category_list = Object.keys(data);\r\n            this.categoryOptions = category_list;\r\n            this.categoryValue = category_list[0];\r\n            this.labels_list = data[this.categoryValue];\r\n            this.initChart();\r\n        }).catch((error)=>{\r\n            console.log('here');\r\n            console.log(error);\r\n        })\r\n        // this.initChart()\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    #whole-wordcloud-page{\r\n        width:100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .el-main{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n    #wordcloud-container{\r\n        width: 80%;\r\n        p{\r\n            font-size: 30px;\r\n        }\r\n    }\r\n    #search-container{\r\n        width:80%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n        .el-row{\r\n            width:100%;\r\n        }\r\n    }\r\n    .layout-search{\r\n        width:100%;\r\n        height:100%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    #category-selector{\r\n        .el-select{\r\n            width:70%\r\n        }\r\n    }\r\n    .label-button{\r\n        width:80%\r\n    }\r\n    #labels-container{\r\n        .el-col{\r\n            margin-top:10px\r\n        }\r\n    }\r\n    #search-result-table{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        width:90%;\r\n        margin-top: 20px;\r\n        .el-tag{\r\n            margin-right: 5px;\r\n            margin-bottom: 2px;\r\n        }\r\n    }\r\n    #result-table{\r\n        width:100%\r\n    }\r\n    #result-pagination{\r\n        margin-top: 5px;\r\n        align-self: flex-end;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}