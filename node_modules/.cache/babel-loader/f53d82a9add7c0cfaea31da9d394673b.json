{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport MaskBase from './base';\n/**\n * @ignore\n * 多个点构成的 Path 辅助框 Action\n */\n\nvar PathMask =\n/** @class */\nfunction (_super) {\n  __extends(PathMask, _super);\n\n  function PathMask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // 生成 mask 的路径\n\n\n  PathMask.prototype.getMaskPath = function () {\n    var points = this.points;\n    var path = [];\n\n    if (points.length) {\n      each(points, function (point, index) {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n      path.push(['L', points[0].x, points[0].y]);\n    }\n\n    return path;\n  };\n\n  PathMask.prototype.getMaskAttrs = function () {\n    return {\n      path: this.getMaskPath()\n    };\n  };\n  /**\n   * 添加一个点\n   */\n\n\n  PathMask.prototype.addPoint = function () {\n    this.resize();\n  };\n\n  return PathMask;\n}(MaskBase);\n\nexport default PathMask;","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,QAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA;;;;;AAIA;AAAA;AAAA;EAAuBC;;EAAvB;;EA8BC,CA9BD,CACE;;;EACUC,iCAAV;IACE,IAAMC,MAAM,GAAG,KAAKA,MAApB;IACA,IAAMC,IAAI,GAAG,EAAb;;IACA,IAAID,MAAM,CAACE,MAAX,EAAmB;MACjBN,IAAI,CAACI,MAAD,EAAS,UAACG,KAAD,EAAQC,KAAR,EAAa;QACxB,IAAIA,KAAK,KAAK,CAAd,EAAiB;UACfH,IAAI,CAACI,IAAL,CAAU,CAAC,GAAD,EAAMF,KAAK,CAACG,CAAZ,EAAeH,KAAK,CAACI,CAArB,CAAV;QACD,CAFD,MAEO;UACLN,IAAI,CAACI,IAAL,CAAU,CAAC,GAAD,EAAMF,KAAK,CAACG,CAAZ,EAAeH,KAAK,CAACI,CAArB,CAAV;QACD;MACF,CANG,CAAJ;MAOAN,IAAI,CAACI,IAAL,CAAU,CAAC,GAAD,EAAML,MAAM,CAAC,CAAD,CAAN,CAAUM,CAAhB,EAAmBN,MAAM,CAAC,CAAD,CAAN,CAAUO,CAA7B,CAAV;IACD;;IACD,OAAON,IAAP;EACD,CAdS;;EAgBAF,kCAAV;IACE,OAAO;MACLE,IAAI,EAAE,KAAKO,WAAL;IADD,CAAP;EAGD,CAJS;EAMV;;;;;EAGOT,8BAAP;IACE,KAAKU,MAAL;EACD,CAFM;;EAGT;AAAC,CA9BD,CAAuBZ,QAAvB;;AAgCA,eAAeE,QAAf","names":["each","MaskBase","__extends","PathMask","points","path","length","point","index","push","x","y","getMaskPath","resize"],"sourceRoot":"","sources":["../../../../src/interaction/action/mask/path.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport MaskBase from './base';\n\n/**\n * @ignore\n * 多个点构成的 Path 辅助框 Action\n */\nclass PathMask extends MaskBase {\n  // 生成 mask 的路径\n  protected getMaskPath() {\n    const points = this.points;\n    const path = [];\n    if (points.length) {\n      each(points, (point, index) => {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n      path.push(['L', points[0].x, points[0].y]);\n    }\n    return path;\n  }\n\n  protected getMaskAttrs() {\n    return {\n      path: this.getMaskPath(),\n    };\n  }\n\n  /**\n   * 添加一个点\n   */\n  public addPoint() {\n    this.resize();\n  }\n}\n\nexport default PathMask;\n"]},"metadata":{},"sourceType":"module"}