{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n/**\n * 条形图\n */\n\nvar Bar =\n/** @class */\nfunction (_super) {\n  __extends(Bar, _super);\n\n  function Bar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'bar';\n    return _this;\n  }\n  /**\n   * 获取 条形图 默认配置项\n   * 供外部使用\n   */\n\n\n  Bar.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   */\n\n\n  Bar.prototype.changeData = function (data) {\n    var _a, _b;\n\n    this.updateOption({\n      data: data\n    });\n\n    var _c = this,\n        chart = _c.chart,\n        options = _c.options;\n\n    var isPercent = options.isPercent;\n    var xField = options.xField,\n        yField = options.yField,\n        xAxis = options.xAxis,\n        yAxis = options.yAxis;\n    _a = [yField, xField], xField = _a[0], yField = _a[1];\n    _b = [yAxis, xAxis], xAxis = _b[0], yAxis = _b[1];\n\n    var switchedFieldOptions = __assign(__assign({}, options), {\n      xField: xField,\n      yField: yField,\n      yAxis: yAxis,\n      xAxis: xAxis\n    });\n\n    meta({\n      chart: chart,\n      options: switchedFieldOptions\n    });\n    chart.changeData(getDataWhetherPercentage(data, xField, yField, xField, isPercent));\n  };\n  /**\n   * 获取 条形图 默认配置\n   */\n\n\n  Bar.prototype.getDefaultOptions = function () {\n    return Bar.getDefaultOptions();\n  };\n  /**\n   * 获取 条形图 的适配器\n   */\n\n\n  Bar.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Bar;\n}(Plot);\n\nexport { Bar };","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,WAA9B;AACA,SAASC,eAAT,QAAgC,aAAhC;AAIA;;;;AAGA;AAAA;AAAA;EAAyBC;;EAAzB;IAAA;IASE;;;IACgBC,aAAe,KAAf;;EA8BjB;EAvCC;;;;;;EAIOC,wBAAP;IACE,OAAOH,eAAP;EACD,CAFM;EAOP;;;;;EAGOG,2BAAP,UAAkBC,IAAlB,EAA0C;;;IACxC,KAAKC,YAAL,CAAkB;MAAED,IAAI;IAAN,CAAlB;;IACM,SAAqB,IAArB;IAAA,IAAEE,KAAK,WAAP;IAAA,IAASC,OAAO,aAAhB;;IACE,aAAS,GAAKA,OAAO,UAArB;IACF,UAAM,GAA2BA,OAAO,OAAxC;IAAA,IAAQC,MAAM,GAAmBD,OAAO,OAAxC;IAAA,IAAgBE,KAAK,GAAYF,OAAO,MAAxC;IAAA,IAAuBG,KAAK,GAAKH,OAAO,MAAxC;IACNI,KAAmB,CAACH,MAAD,EAASI,MAAT,CAAnB,EAACA,MAAM,QAAP,EAASJ,MAAM,QAAf;IACAK,KAAiB,CAACH,KAAD,EAAQD,KAAR,CAAjB,EAACA,KAAK,QAAN,EAAQC,KAAK,QAAb;;IACA,IAAMI,oBAAoB,yBAAQP,OAAR,GAAe;MAAEK,MAAM,QAAR;MAAUJ,MAAM,QAAhB;MAAkBE,KAAK,OAAvB;MAAyBD,KAAK;IAA9B,CAAf,CAA1B;;IACAV,IAAI,CAAC;MAAEO,KAAK,OAAP;MAASC,OAAO,EAAEO;IAAlB,CAAD,CAAJ;IACAR,KAAK,CAACS,UAAN,CAAiBlB,wBAAwB,CAACO,IAAD,EAAOQ,MAAP,EAAeJ,MAAf,EAAuBI,MAAvB,EAA+BI,SAA/B,CAAzC;EACD,CAVM;EAYP;;;;;EAGUb,kCAAV;IACE,OAAOA,GAAG,CAACc,iBAAJ,EAAP;EACD,CAFS;EAIV;;;;;EAGUd,iCAAV;IACE,OAAOL,OAAP;EACD,CAFS;;EAGZ;AAAC,CAxCD,CAAyBF,IAAzB","names":["Plot","getDataWhetherPercentage","adaptor","meta","DEFAULT_OPTIONS","__extends","_this","Bar","data","updateOption","chart","options","yField","xAxis","yAxis","_a","xField","_b","switchedFieldOptions","changeData","isPercent","getDefaultOptions"],"sourceRoot":"","sources":["../../../src/plots/bar/index.ts"],"sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { BarOptions } from './types';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n\nexport type { BarOptions };\n\n/**\n * 条形图\n */\nexport class Bar extends Plot<BarOptions> {\n  /**\n   * 获取 条形图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<BarOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public readonly type: string = 'bar';\n\n  /**\n   * @override\n   */\n  public changeData(data: BarOptions['data']) {\n    this.updateOption({ data });\n    const { chart, options } = this;\n    const { isPercent } = options;\n    let { xField, yField, xAxis, yAxis } = options;\n    [xField, yField] = [yField, xField];\n    [xAxis, yAxis] = [yAxis, xAxis];\n    const switchedFieldOptions = { ...options, xField, yField, yAxis, xAxis };\n    meta({ chart, options: switchedFieldOptions });\n    chart.changeData(getDataWhetherPercentage(data, xField, yField, xField, isPercent));\n  }\n\n  /**\n   * 获取 条形图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Bar.getDefaultOptions();\n  }\n\n  /**\n   * 获取 条形图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<BarOptions> {\n    return adaptor;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}