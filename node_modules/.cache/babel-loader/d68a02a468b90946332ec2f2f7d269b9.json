{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { __assign } from \"tslib\";\nimport { assign, memoize } from '@antv/util';\nimport { blend } from '../../utils/color/blend';\nimport { log, LEVEL } from '../../utils';\nimport { venn, scaleSolution } from './layout/layout';\nimport { intersectionAreaPath, computeTextCentres } from './layout/diagram';\nimport { ID_FIELD, PATH_FIELD } from './constant';\n/**\n * 获取 颜色映射\n * @usage colorMap.get(id) => color\n *\n * @returns Map<string, string>\n */\n\nexport var getColorMap = memoize(function (colorPalette, data, blendMode, setsField) {\n  var colorMap = new Map();\n  var colorPaletteLen = colorPalette.length;\n  data.forEach(function (d, idx) {\n    if (d[setsField].length === 1) {\n      colorMap.set(d[ID_FIELD], colorPalette[(idx + colorPaletteLen) % colorPaletteLen]);\n    } else {\n      /** 一般都是可以获取到颜色的，如果不正确 就是输入了非法数据 */\n      var colorArr = d[setsField].map(function (id) {\n        return colorMap.get(id);\n      });\n      colorMap.set(d[ID_FIELD], colorArr.slice(1).reduce(function (a, b) {\n        return blend(a, b, blendMode);\n      }, colorArr[0]));\n    }\n  });\n  return colorMap;\n}, function () {\n  var params = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    params[_i] = arguments[_i];\n  }\n\n  return JSON.stringify(params);\n});\n/**\n * 给韦恩图数据进行布局\n *\n * @param data\n * @param width\n * @param height\n * @param padding\n * @returns 韦恩图数据\n */\n\nexport function layoutVennData(options, width, height, padding) {\n  if (padding === void 0) {\n    padding = 0;\n  }\n\n  var data = options.data,\n      setsField = options.setsField,\n      sizeField = options.sizeField; // 处理空数据的情况\n\n  if (data.length === 0) {\n    log(LEVEL.WARN, false, 'warn: %s', '数据不能为空');\n    return [];\n  }\n\n  var vennData = data.map(function (d) {\n    var _a;\n\n    return __assign(__assign({}, d), (_a = {\n      sets: d[setsField] || [],\n      size: d[sizeField]\n    }, _a[PATH_FIELD] = '', _a[ID_FIELD] = '', _a));\n  }); // 1. 进行排序，避免图形元素遮挡\n\n  vennData.sort(function (a, b) {\n    return a.sets.length - b.sets.length;\n  }); // todo 2. 可以在这里处理下非法数据输入，避免直接 crash\n\n  var solution = venn(vennData);\n  var circles = scaleSolution(solution, width, height, padding);\n  var textCenters = computeTextCentres(circles, vennData);\n  vennData.forEach(function (row) {\n    var sets = row.sets;\n    var id = sets.join(',');\n    row[ID_FIELD] = id; // 保留 vennText 布局方法\n\n    var setCircles = sets.map(function (set) {\n      return circles[set];\n    });\n    var path = intersectionAreaPath(setCircles);\n\n    if (!/[zZ]$/.test(path)) {\n      path += ' Z';\n    }\n\n    row[PATH_FIELD] = path;\n    var center = textCenters[id] || {\n      x: 0,\n      y: 0\n    };\n    assign(row, center);\n  });\n  return vennData;\n}\n/**\n * 检查是否存在 非法元素\n * @param legalArr 合法集合：['A', 'B']\n * @param testArr 检查集合：['A', 'B', 'C'] or ['A', 'C']（存在非法 'C'）\n * @return boolean\n */\n\nexport function islegalSets(legalArr, testArr) {\n  for (var i = 0; i < testArr.length; i++) {\n    if (!legalArr.includes(testArr[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"mappings":"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","names":["assign","memoize","blend","log","LEVEL","venn","scaleSolution","intersectionAreaPath","computeTextCentres","ID_FIELD","PATH_FIELD","getColorMap","colorPalette","data","blendMode","setsField","colorMap","Map","colorPaletteLen","length","forEach","d","idx","set","colorArr","map","id","get","slice","reduce","a","b","params","stringify","layoutVennData","options","width","height","padding","sizeField","WARN","vennData","_a","sets","size","sort","solution","circles","textCenters","row","join","setCircles","path","test","center","x","y","islegalSets","legalArr","testArr","i","includes"],"sourceRoot":"","sources":["../../../src/plots/venn/utils.ts"],"sourcesContent":["import { assign, memoize } from '@antv/util';\nimport { blend } from '../../utils/color/blend';\nimport { log, LEVEL } from '../../utils';\nimport { venn, scaleSolution } from './layout/layout';\nimport { intersectionAreaPath, computeTextCentres } from './layout/diagram';\nimport { ID_FIELD, PATH_FIELD } from './constant';\nimport { VennData, VennOptions } from './types';\n\ntype ColorMapFunction = (\n  colorPalette: string[],\n  data: VennData,\n  blendMode: VennOptions['blendMode'],\n  setsField: VennOptions['setsField']\n) => Map<string, string>;\n\n/**\n * 获取 颜色映射\n * @usage colorMap.get(id) => color\n *\n * @returns Map<string, string>\n */\nexport const getColorMap = memoize(\n  ((colorPalette, data, blendMode, setsField) => {\n    const colorMap = new Map<string /** id */, string /** color */>();\n    const colorPaletteLen = colorPalette.length;\n    data.forEach((d, idx) => {\n      if (d[setsField].length === 1) {\n        colorMap.set(d[ID_FIELD], colorPalette[(idx + colorPaletteLen) % colorPaletteLen]);\n      } else {\n        /** 一般都是可以获取到颜色的，如果不正确 就是输入了非法数据 */\n        const colorArr = d[setsField].map((id) => colorMap.get(id));\n        colorMap.set(\n          d[ID_FIELD],\n          colorArr.slice(1).reduce((a, b) => blend(a, b, blendMode), colorArr[0])\n        );\n      }\n    });\n\n    return colorMap;\n  }) as ColorMapFunction,\n  (...params) => JSON.stringify(params)\n) as ColorMapFunction;\n\n/**\n * 给韦恩图数据进行布局\n *\n * @param data\n * @param width\n * @param height\n * @param padding\n * @returns 韦恩图数据\n */\nexport function layoutVennData(options: VennOptions, width: number, height: number, padding: number = 0): VennData {\n  const { data, setsField, sizeField } = options;\n\n  // 处理空数据的情况\n  if (data.length === 0) {\n    log(LEVEL.WARN, false, 'warn: %s', '数据不能为空');\n    return [];\n  }\n\n  const vennData: VennData = data.map((d) => ({\n    ...d,\n    sets: d[setsField] || [],\n    size: d[sizeField],\n    [PATH_FIELD]: '',\n    [ID_FIELD]: '',\n  }));\n  // 1. 进行排序，避免图形元素遮挡\n  vennData.sort((a, b) => a.sets.length - b.sets.length);\n  // todo 2. 可以在这里处理下非法数据输入，避免直接 crash\n\n  const solution = venn(vennData);\n  const circles = scaleSolution(solution, width, height, padding);\n  const textCenters = computeTextCentres(circles, vennData);\n  vennData.forEach((row) => {\n    const sets = row.sets;\n    const id = sets.join(',');\n    row[ID_FIELD] = id;\n    // 保留 vennText 布局方法\n    const setCircles = sets.map((set) => circles[set]);\n    let path = intersectionAreaPath(setCircles);\n    if (!/[zZ]$/.test(path)) {\n      path += ' Z';\n    }\n    row[PATH_FIELD] = path;\n    const center = textCenters[id] || { x: 0, y: 0 };\n    assign(row, center);\n  });\n  return vennData;\n}\n\n/**\n * 检查是否存在 非法元素\n * @param legalArr 合法集合：['A', 'B']\n * @param testArr 检查集合：['A', 'B', 'C'] or ['A', 'C']（存在非法 'C'）\n * @return boolean\n */\nexport function islegalSets(legalArr: any[], testArr: any[]): boolean {\n  for (let i = 0; i < testArr.length; i++) {\n    if (!legalArr.includes(testArr[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}