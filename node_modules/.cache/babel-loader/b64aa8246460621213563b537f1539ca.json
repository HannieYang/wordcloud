{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { getStockData } from './utils';\nimport { DEFAULT_OPTIONS } from './constant';\n\nvar Stock =\n/** @class */\nfunction (_super) {\n  __extends(Stock, _super);\n\n  function Stock() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'stock';\n    return _this;\n  }\n  /**\n   * 获取 散点图 默认配置项\n   * 供外部使用\n   */\n\n\n  Stock.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * 默认配置\n   *  g2/g2plot默 认 配 置 -->  图 表 默 认 配 置  --> 开 发 者 自 定 义 配 置  --> 最 终 绘 图 配 置\n   */\n\n\n  Stock.prototype.getDefaultOptions = function () {\n    return Stock.getDefaultOptions();\n  };\n  /**\n   * 获取 蜡烛图 的适配器\n   */\n\n\n  Stock.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  Stock.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var yField = this.options.yField;\n    this.chart.changeData(getStockData(data, yField));\n  };\n\n  return Stock;\n}(Plot);\n\nexport { Stock };","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;AAGA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAIA;AAAA;AAAA;EAA2BC;;EAA3B;IAAA;IASE;;;IACOC,aAAe,OAAf;;EA0BR;EAnCC;;;;;;EAIOC,0BAAP;IACE,OAAOH,eAAP;EACD,CAFM;EAOP;;;;;;EAIUG,oCAAV;IACE,OAAOA,KAAK,CAACC,iBAAN,EAAP;EACD,CAFS;EAIV;;;;;EAGUD,mCAAV;IACE,OAAOL,OAAP;EACD,CAFS;EAIV;;;;;;EAIOK,6BAAP,UAAkBE,IAAlB,EAA4C;IAC1C,KAAKC,YAAL,CAAkB;MAAED,IAAI;IAAN,CAAlB;IACQ,UAAM,GAAK,KAAKE,OAAL,CAAYC,MAAvB;IACR,KAAKC,KAAL,CAAWC,UAAX,CAAsBX,YAAY,CAACM,IAAD,EAAOG,MAAP,CAAlC;EACD,CAJM;;EAKT;AAAC,CApCD,CAA2BX,IAA3B","names":["Plot","adaptor","getStockData","DEFAULT_OPTIONS","__extends","_this","Stock","getDefaultOptions","data","updateOption","options","yField","chart","changeData"],"sourceRoot":"","sources":["../../../src/plots/stock/index.ts"],"sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { StockOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { getStockData } from './utils';\nimport { DEFAULT_OPTIONS } from './constant';\n\nexport type { StockOptions };\n\nexport class Stock extends Plot<StockOptions> {\n  /**\n   * 获取 散点图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<StockOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'stock';\n\n  /**\n   * 默认配置\n   *  g2/g2plot默 认 配 置 -->  图 表 默 认 配 置  --> 开 发 者 自 定 义 配 置  --> 最 终 绘 图 配 置\n   */\n  protected getDefaultOptions(): Partial<StockOptions> {\n    return Stock.getDefaultOptions();\n  }\n\n  /**\n   * 获取 蜡烛图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<StockOptions> {\n    return adaptor;\n  }\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data: StockOptions['data']) {\n    this.updateOption({ data });\n    const { yField } = this.options;\n    this.chart.changeData(getStockData(data, yField));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}