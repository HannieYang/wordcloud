{"ast":null,"code":"import { clamp, get, size } from '@antv/util';\nimport { RANGE_VALUE, RANGE_TYPE, PERCENT } from './constants';\n/**\n * 将 range 生成为 data 数据\n * @param range\n * @param key\n * @returns {GaugeRangeData}\n */\n\nexport function processRangeData(range, percent) {\n  return range // 映射为 stack 的数据\n  .map(function (r, idx) {\n    var _a;\n\n    return _a = {}, _a[RANGE_VALUE] = r - (range[idx - 1] || 0), _a[RANGE_TYPE] = \"\" + idx, _a[PERCENT] = percent, _a;\n  }) // 去掉 0 的数据\n  .filter(function (d) {\n    return !!d[RANGE_VALUE];\n  });\n}\n/**\n * 获取 仪表盘 指针数据\n * @param percent\n */\n\nexport function getIndicatorData(percent) {\n  var _a;\n\n  return [(_a = {}, _a[PERCENT] = clamp(percent, 0, 1), _a)];\n}\n/**\n * 获取仪表盘 表盘弧形数据\n * @param percent\n * @param range\n */\n\nexport function getRangeData(percent, range) {\n  var ticks = get(range, ['ticks'], []);\n  var clampTicks = size(ticks) ? ticks : [0, clamp(percent, 0, 1), 1];\n  return processRangeData(clampTicks, percent);\n}","map":{"version":3,"mappings":"AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,QAAiC,YAAjC;AAEA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,OAAlC,QAAiD,aAAjD;AAGA;;;;;;;AAMA,OAAM,SAAUC,gBAAV,CAA2BC,KAA3B,EAA4CC,OAA5C,EAA4E;EAChF,OACED,KAAK,CACH;EADG,CAEFE,GAFH,CAEO,UAACC,CAAD,EAAYC,GAAZ,EAAuB;;;IAC1B,gBAASC,GAACT,WAAD,IAAeO,CAAC,IAAIH,KAAK,CAACI,GAAG,GAAG,CAAP,CAAL,IAAkB,CAAtB,CAAzB,EAAmDC,GAACR,UAAD,IAAc,KAAGO,GAApE,EAA2EC,GAACP,OAAD,IAAWG,OAAtF,EAA6FI,EAA7F;EACD,CAJH,EAKE;EALF,CAMGC,MANH,CAMU,UAACC,CAAD,EAAS;IAAK,QAAC,CAACA,CAAC,CAACX,WAAD,CAAH;EAAgB,CANxC,CADF;AASD;AAED;;;;;AAIA,OAAM,SAAUY,gBAAV,CAA2BP,OAA3B,EAA2D;;;EAC/D,OAAO,WAAGI,GAACP,OAAD,IAAWL,KAAK,CAACQ,OAAD,EAAU,CAAV,EAAa,CAAb,CAAnB,EAAkCI,EAAlC,EAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAUI,YAAV,CAAuBR,OAAvB,EAAyDD,KAAzD,EAAsF;EAC1F,IAAMU,KAAK,GAAGhB,GAAG,CAACM,KAAD,EAAQ,CAAC,OAAD,CAAR,EAAmB,EAAnB,CAAjB;EAEA,IAAMW,UAAU,GAAGhB,IAAI,CAACe,KAAD,CAAJ,GAAcA,KAAd,GAAsB,CAAC,CAAD,EAAIjB,KAAK,CAACQ,OAAD,EAAU,CAAV,EAAa,CAAb,CAAT,EAA0B,CAA1B,CAAzC;EACA,OAAOF,gBAAgB,CAACY,UAAD,EAAyBV,OAAzB,CAAvB;AACD","names":["clamp","get","size","RANGE_VALUE","RANGE_TYPE","PERCENT","processRangeData","range","percent","map","r","idx","_a","filter","d","getIndicatorData","getRangeData","ticks","clampTicks"],"sourceRoot":"","sources":["../../../src/plots/gauge/utils.ts"],"sourcesContent":["import { clamp, get, size } from '@antv/util';\nimport { Data, Datum } from '../../types';\nimport { RANGE_VALUE, RANGE_TYPE, PERCENT } from './constants';\nimport { GaugeOptions, GaugeRangeData } from './types';\n\n/**\n * 将 range 生成为 data 数据\n * @param range\n * @param key\n * @returns {GaugeRangeData}\n */\nexport function processRangeData(range: number[], percent: GaugeOptions['percent']): GaugeRangeData {\n  return (\n    range\n      // 映射为 stack 的数据\n      .map((r: number, idx: number) => {\n        return { [RANGE_VALUE]: r - (range[idx - 1] || 0), [RANGE_TYPE]: `${idx}`, [PERCENT]: percent };\n      })\n      // 去掉 0 的数据\n      .filter((d: Datum) => !!d[RANGE_VALUE])\n  );\n}\n\n/**\n * 获取 仪表盘 指针数据\n * @param percent\n */\nexport function getIndicatorData(percent: GaugeOptions['percent']): Data {\n  return [{ [PERCENT]: clamp(percent, 0, 1) }];\n}\n\n/**\n * 获取仪表盘 表盘弧形数据\n * @param percent\n * @param range\n */\nexport function getRangeData(percent: GaugeOptions['percent'], range?: GaugeOptions['range']): GaugeRangeData {\n  const ticks = get(range, ['ticks'], []);\n\n  const clampTicks = size(ticks) ? ticks : [0, clamp(percent, 0, 1), 1];\n  return processRangeData(clampTicks as number[], percent);\n}\n"]},"metadata":{},"sourceType":"module"}