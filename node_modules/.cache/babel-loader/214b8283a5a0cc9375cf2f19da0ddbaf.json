{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getAnglePoint, getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\n\nvar Circle =\n/** @class */\nfunction (_super) {\n  __extends(Circle, _super);\n\n  function Circle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Circle.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'circle',\n      showTitle: true,\n      title: _super.prototype.getDefaultTitleCfg.call(this)\n    });\n  };\n\n  Circle.prototype.render = function () {\n    _super.prototype.render.call(this);\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  /**\n   * 根据总数和当前索引，计算分面的 region\n   * @param count\n   * @param index\n   */\n\n\n  Circle.prototype.getRegion = function (count, index) {\n    var r = 1 / 2; // 画布半径\n    // 画布圆心\n\n    var center = {\n      x: 0.5,\n      y: 0.5\n    }; // 每隔分面间隔的弧度\n\n    var avgAngle = Math.PI * 2 / count; // 当前分面所在的弧度\n\n    var angle = -1 * Math.PI / 2 + avgAngle * index; // TODO 没看懂\n\n    var facetR = r / (1 + 1 / Math.sin(avgAngle / 2)); // 分面的中心点\n\n    var middle = getAnglePoint(center, r - facetR, angle);\n    var startAngle = Math.PI * 5 / 4; // 右上角\n\n    var endAngle = Math.PI * 1 / 4; // 左下角\n\n    return {\n      start: getAnglePoint(middle, facetR, startAngle),\n      end: getAnglePoint(middle, facetR, endAngle)\n    };\n  };\n\n  Circle.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n\n  Circle.prototype.beforeEachView = function (view, facet) {};\n\n  Circle.prototype.generateFacets = function (data) {\n    var _this = this;\n\n    var _a = this.cfg,\n        fields = _a.fields,\n        type = _a.type;\n\n    var _b = __read(fields, 1),\n        field = _b[0];\n\n    if (!field) {\n      throw new Error('No `fields` specified!');\n    }\n\n    var values = this.getFieldValues(data, field);\n    var count = values.length;\n    var rst = [];\n    values.forEach(function (value, index) {\n      var conditions = [{\n        field: field,\n        value: value,\n        values: values\n      }];\n      var facetData = filter(data, _this.getFacetDataFilter(conditions));\n      var facet = {\n        type: type,\n        data: facetData,\n        region: _this.getRegion(count, index),\n        columnValue: value,\n        columnField: field,\n        columnIndex: index,\n        columnValuesLength: count,\n        rowValue: null,\n        rowField: null,\n        rowIndex: 0,\n        rowValuesLength: 1\n      };\n      rst.push(facet);\n    });\n    return rst;\n  };\n\n  Circle.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 不做任何处理\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n\n\n  Circle.prototype.getYAxisOption = function (y, axes, option, facet) {\n    // 不做任何处理\n    return option;\n  };\n  /**\n   * facet title\n   */\n\n\n  Circle.prototype.renderTitle = function () {\n    var _this = this;\n\n    each(this.facets, function (facet) {\n      var columnValue = facet.columnValue,\n          view = facet.view;\n      var formatter = get(_this.cfg.title, 'formatter');\n      var config = deepMix({\n        position: ['50%', '0%'],\n        content: formatter ? formatter(columnValue) : columnValue\n      }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n      view.annotation().text(config);\n    });\n  };\n\n  return Circle;\n}(Facet);\n\nexport default Circle;","map":{"version":3,"mappings":"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","names":["deepMix","each","filter","get","DIRECTION","getAnglePoint","getFactTitleConfig","Facet","__extends","Circle","_super","getDefaultCfg","call","type","showTitle","title","getDefaultTitleCfg","render","cfg","renderTitle","count","index","r","center","x","y","avgAngle","Math","PI","angle","facetR","sin","middle","startAngle","endAngle","start","end","view","facet","processAxis","data","fields","field","Error","values","getFieldValues","length","rst","forEach","value","conditions","facetData","_this","getFacetDataFilter","region","getRegion","columnValue","columnField","columnIndex","columnValuesLength","rowValue","rowField","rowIndex","rowValuesLength","push","axes","option","facets","formatter","config","position","content","TOP","annotation","text"],"sourceRoot":"","sources":["../../src/facet/circle.ts"],"sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { AxisCfg, CircleCfg, CircleData, Datum } from '../interface';\n\nimport View from '../chart/view';\nimport { DIRECTION } from '../constant';\nimport { getAnglePoint, getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Circle extends Facet<CircleCfg, CircleData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'circle',\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  /**\n   * 根据总数和当前索引，计算分面的 region\n   * @param count\n   * @param index\n   */\n  protected getRegion(count: number, index: number) {\n    const r = 1 / 2; // 画布半径\n    // 画布圆心\n    const center = { x: 0.5, y: 0.5 };\n    // 每隔分面间隔的弧度\n    const avgAngle = (Math.PI * 2) / count;\n\n    // 当前分面所在的弧度\n    const angle = (-1 * Math.PI) / 2 + avgAngle * index;\n    // TODO 没看懂\n    const facetR = r / (1 + 1 / Math.sin(avgAngle / 2));\n    // 分面的中心点\n    const middle = getAnglePoint(center, r - facetR, angle);\n    const startAngle = (Math.PI * 5) / 4; // 右上角\n    const endAngle = (Math.PI * 1) / 4; // 左下角\n\n    return {\n      start: getAnglePoint(middle, facetR, startAngle),\n      end: getAnglePoint(middle, facetR, endAngle),\n    };\n  }\n\n  protected afterEachView(view: View, facet: CircleData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: CircleData) {}\n\n  protected generateFacets(data: Datum[]): CircleData[] {\n    const { fields, type } = this.cfg;\n    const [field] = fields;\n    if (!field) {\n      throw new Error('No `fields` specified!');\n    }\n\n    const values = this.getFieldValues(data, field);\n    const count = values.length;\n\n    const rst = [];\n    values.forEach((value: any, index: number) => {\n      const conditions = [{ field, value, values }];\n      const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n      const facet: CircleData = {\n        type,\n        data: facetData,\n        region: this.getRegion(count, index),\n\n        columnValue: value,\n        columnField: field,\n        columnIndex: index,\n        columnValuesLength: count,\n\n        rowValue: null,\n        rowField: null,\n        rowIndex: 0,\n        rowValuesLength: 1,\n      };\n      rst.push(facet);\n    });\n    return rst;\n  }\n\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: CircleData): object {\n    // 不做任何处理\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: CircleData): object {\n    // 不做任何处理\n    return option;\n  }\n\n  /**\n   * facet title\n   */\n  private renderTitle() {\n    each(this.facets, (facet: CircleData) => {\n      const { columnValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      const config = deepMix(\n        {\n          position: ['50%', '0%'] as [string, string],\n          content: formatter ? formatter(columnValue) : columnValue,\n        },\n        getFactTitleConfig(DIRECTION.TOP),\n        this.cfg.title\n      );\n\n      view.annotation().text(config);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}