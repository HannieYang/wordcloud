{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { getElements, getIntersectElements, getMaskedElements, getSiblingMaskElements, getSilbings, isInRecords, isMask } from '../util';\nimport StateBase from './state-base';\n/**\n * @ignore\n * 区域设置状态的基础 Action\n */\n\nvar ElementRangeState =\n/** @class */\nfunction (_super) {\n  __extends(ElementRangeState, _super);\n\n  function ElementRangeState() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.startPoint = null;\n    _this.endPoint = null;\n    _this.isStarted = false;\n    /**\n     * 是否作用于当前 view 的 siblings，默认是 false 仅作用于自己\n     */\n\n    _this.effectSiblings = false;\n    /**\n     * 是否受 element 的数据影响，还是受包围盒的影响\n     */\n\n    _this.effectByRecord = false;\n    return _this;\n  } // 获取当前的位置\n\n\n  ElementRangeState.prototype.getCurrentPoint = function () {\n    var event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y\n    };\n  };\n  /**\n   * 开始，记录开始选中的位置\n   */\n\n\n  ElementRangeState.prototype.start = function () {\n    this.clear(); // 开始的时候清理之前的状态\n\n    this.startPoint = this.getCurrentPoint();\n    this.isStarted = true;\n  };\n\n  ElementRangeState.prototype.getIntersectElements = function () {\n    var elements = null;\n\n    if (isMask(this.context)) {\n      elements = getMaskedElements(this.context, 10);\n    } else {\n      var startPoint = this.startPoint;\n      var endPoint = this.isStarted ? this.getCurrentPoint() : this.endPoint; // 如果没有开始，则不允许范围设置状态，保护性质\n\n      if (!startPoint || !endPoint) {\n        return;\n      } // 计算框选区域\n\n\n      var box = {\n        minX: Math.min(startPoint.x, endPoint.x),\n        minY: Math.min(startPoint.y, endPoint.y),\n        maxX: Math.max(startPoint.x, endPoint.x),\n        maxY: Math.max(startPoint.y, endPoint.y)\n      }; // this.clear(); // 不全部清理，会导致闪烁\n\n      var view = this.context.view;\n      elements = getIntersectElements(view, box);\n    }\n\n    return elements;\n  };\n  /**\n   * 选中\n   */\n\n\n  ElementRangeState.prototype.setStateEnable = function (enable) {\n    if (this.effectSiblings && !this.effectByRecord) {\n      this.setSiblingsState(enable);\n    } else {\n      var allElements = getElements(this.context.view);\n      var elements = this.getIntersectElements();\n\n      if (elements && elements.length) {\n        if (this.effectByRecord) {\n          this.setSiblingsStateByRecord(elements, enable);\n        } else {\n          this.setElementsState(elements, enable, allElements);\n        }\n      } else {\n        this.clear();\n      }\n    }\n  }; // 根据选中的 element 的数据进行设置状态\n\n\n  ElementRangeState.prototype.setSiblingsStateByRecord = function (elements, enable) {\n    var _this = this;\n\n    var view = this.context.view;\n    var siblings = getSilbings(view);\n    var records = elements.map(function (el) {\n      return el.getModel().data;\n    });\n    var xFiled = view.getXScale().field;\n    var yField = view.getYScales()[0].field;\n    each(siblings, function (sibling) {\n      var allElements = getElements(sibling);\n      var effectElements = allElements.filter(function (el) {\n        var record = el.getModel().data;\n        return isInRecords(records, record, xFiled, yField);\n      });\n\n      _this.setElementsState(effectElements, enable, allElements);\n    });\n  }; // 设置兄弟 view 的状态\n\n\n  ElementRangeState.prototype.setSiblingsState = function (enable) {\n    var _this = this;\n\n    var view = this.context.view;\n    var siblings = getSilbings(view);\n\n    if (isMask(this.context)) {\n      // 受 mask 影响\n      each(siblings, function (sibling) {\n        var allElements = getElements(sibling);\n        var effectElements = getSiblingMaskElements(_this.context, sibling, 10);\n\n        if (effectElements && effectElements.length) {\n          _this.setElementsState(effectElements, enable, allElements);\n        } else {\n          _this.clearViewState(sibling);\n        }\n      });\n    }\n  };\n\n  ElementRangeState.prototype.setElementsState = function (elements, enable, allElements) {\n    var _this = this;\n\n    each(allElements, function (el) {\n      if (!elements.includes(el)) {\n        _this.setElementState(el, false);\n      } else {\n        _this.setElementState(el, enable);\n      }\n    });\n  };\n  /**\n   * 结束\n   */\n\n\n  ElementRangeState.prototype.end = function () {\n    this.isStarted = false;\n    this.endPoint = this.getCurrentPoint();\n  }; // 复写 clear\n\n\n  ElementRangeState.prototype.clear = function () {\n    var _this = this;\n\n    var view = this.context.view; // 判断是否影响 siblings\n\n    if (this.effectSiblings) {\n      var siblings = getSilbings(view);\n      each(siblings, function (sibling) {\n        _this.clearViewState(sibling);\n      });\n    } else {\n      this.clearViewState(view);\n    }\n  };\n\n  return ElementRangeState;\n}(StateBase);\n\nexport default ElementRangeState;","map":{"version":3,"mappings":"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","names":["each","getElements","getIntersectElements","getMaskedElements","getSiblingMaskElements","getSilbings","isInRecords","isMask","StateBase","__extends","_this","ElementRangeState","event","context","x","y","clear","startPoint","getCurrentPoint","isStarted","elements","endPoint","box","minX","Math","min","minY","maxX","max","maxY","view","enable","effectSiblings","effectByRecord","setSiblingsState","allElements","length","setSiblingsStateByRecord","setElementsState","siblings","records","map","el","getModel","data","xFiled","getXScale","field","yField","getYScales","sibling","effectElements","filter","record","clearViewState","includes","setElementState"],"sourceRoot":"","sources":["../../../../src/interaction/action/element/range-state.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport Element from '../../../geometry/element/';\nimport {\n  getElements,\n  getIntersectElements,\n  getMaskedElements,\n  getSiblingMaskElements,\n  getSilbings,\n  isInRecords,\n  isMask,\n} from '../util';\nimport StateBase from './state-base';\n\n/**\n * @ignore\n * 区域设置状态的基础 Action\n */\nclass ElementRangeState extends StateBase {\n  private startPoint = null;\n  private endPoint = null;\n  private isStarted: boolean = false;\n  /**\n   * 是否作用于当前 view 的 siblings，默认是 false 仅作用于自己\n   */\n  protected effectSiblings = false;\n  /**\n   * 是否受 element 的数据影响，还是受包围盒的影响\n   */\n  protected effectByRecord = false;\n  // 获取当前的位置\n  private getCurrentPoint() {\n    const event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y,\n    };\n  }\n\n  /**\n   * 开始，记录开始选中的位置\n   */\n  public start() {\n    this.clear(); // 开始的时候清理之前的状态\n    this.startPoint = this.getCurrentPoint();\n    this.isStarted = true;\n  }\n\n  protected getIntersectElements() {\n    let elements = null;\n    if (isMask(this.context)) {\n      elements = getMaskedElements(this.context, 10);\n    } else {\n      const startPoint = this.startPoint;\n      const endPoint = this.isStarted ? this.getCurrentPoint() : this.endPoint;\n      // 如果没有开始，则不允许范围设置状态，保护性质\n      if (!startPoint || !endPoint) {\n        return;\n      }\n      // 计算框选区域\n      const box = {\n        minX: Math.min(startPoint.x, endPoint.x),\n        minY: Math.min(startPoint.y, endPoint.y),\n        maxX: Math.max(startPoint.x, endPoint.x),\n        maxY: Math.max(startPoint.y, endPoint.y),\n      };\n      // this.clear(); // 不全部清理，会导致闪烁\n      const view = this.context.view;\n      elements = getIntersectElements(view, box);\n    }\n    return elements;\n  }\n  /**\n   * 选中\n   */\n  public setStateEnable(enable: boolean) {\n    if (this.effectSiblings && !this.effectByRecord) {\n      this.setSiblingsState(enable);\n    } else {\n      const allElements = getElements(this.context.view);\n      const elements = this.getIntersectElements();\n      if (elements && elements.length) {\n        if (this.effectByRecord) {\n          this.setSiblingsStateByRecord(elements, enable);\n        } else {\n          this.setElementsState(elements, enable, allElements);\n        }\n      } else {\n        this.clear();\n      }\n    }\n  }\n  // 根据选中的 element 的数据进行设置状态\n  private setSiblingsStateByRecord(elements, enable) {\n    const view = this.context.view;\n    const siblings = getSilbings(view);\n    const records = elements.map((el) => {\n      return el.getModel().data;\n    });\n    const xFiled = view.getXScale().field;\n    const yField = view.getYScales()[0].field;\n    each(siblings, (sibling) => {\n      const allElements = getElements(sibling);\n      const effectElements = allElements.filter((el) => {\n        const record = el.getModel().data;\n        return isInRecords(records, record, xFiled, yField);\n      });\n      this.setElementsState(effectElements, enable, allElements);\n    });\n  }\n\n  // 设置兄弟 view 的状态\n  private setSiblingsState(enable: boolean) {\n    const view = this.context.view;\n    const siblings = getSilbings(view);\n    if (isMask(this.context)) {\n      // 受 mask 影响\n      each(siblings, (sibling) => {\n        const allElements = getElements(sibling);\n        const effectElements = getSiblingMaskElements(this.context, sibling, 10);\n        if (effectElements && effectElements.length) {\n          this.setElementsState(effectElements, enable, allElements);\n        } else {\n          this.clearViewState(sibling);\n        }\n      });\n    }\n  }\n\n  protected setElementsState(elements: Element[], enable, allElements: Element[]) {\n    each(allElements, (el) => {\n      if (!elements.includes(el)) {\n        this.setElementState(el, false);\n      } else {\n        this.setElementState(el, enable);\n      }\n    });\n  }\n\n  /**\n   * 结束\n   */\n  public end() {\n    this.isStarted = false;\n    this.endPoint = this.getCurrentPoint();\n  }\n\n  // 复写 clear\n  public clear() {\n    const view = this.context.view;\n    // 判断是否影响 siblings\n    if (this.effectSiblings) {\n      const siblings = getSilbings(view);\n      each(siblings, (sibling) => {\n        this.clearViewState(sibling);\n      });\n    } else {\n      this.clearViewState(view);\n    }\n  }\n}\n\nexport default ElementRangeState;\n"]},"metadata":{},"sourceType":"module"}