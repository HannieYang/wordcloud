{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getRectPath } from './util';\nimport { omit } from '../../../util/helper'; // 根据数据点生成 Line 的两个关键点\n\nfunction getLinePoints(pointInfo) {\n  var x = pointInfo.x,\n      y = pointInfo.y,\n      y0 = pointInfo.y0;\n\n  if (isArray(y)) {\n    return y.map(function (yItem, idx) {\n      return {\n        x: isArray(x) ? x[idx] : x,\n        y: yItem\n      };\n    });\n  } // 起始点从 y0 开始\n\n\n  return [{\n    x: x,\n    y: y0\n  }, {\n    x: x,\n    y: y\n  }];\n}\n\nregisterShape('interval', 'line', {\n  getPoints: function (shapePoint) {\n    return getLinePoints(shapePoint);\n  },\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false, 'lineWidth');\n    var newStyle = omit(__assign({}, style), ['fill']);\n    var path = this.parsePath(getRectPath(cfg.points, false));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, newStyle), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        return [['M', x, y - r], ['L', x, y + r]];\n      },\n      style: {\n        r: 5,\n        stroke: color\n      }\n    };\n  }\n});","map":{"version":3,"mappings":";AAAA,SAASA,OAAT,QAAwB,YAAxB;AAIA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,IAAT,QAAqB,sBAArB,C,CAEA;;AACA,SAASC,aAAT,CAAuBC,SAAvB,EAA4C;EAClC,KAAC,GAAYA,SAAS,EAAtB;EAAA,IAAGC,CAAC,GAASD,SAAS,EAAtB;EAAA,IAAME,EAAE,GAAKF,SAAS,GAAtB;;EAER,IAAIN,OAAO,CAACO,CAAD,CAAX,EAAgB;IACd,OAAOA,CAAC,CAACE,GAAF,CAAM,UAACC,KAAD,EAAQC,GAAR,EAAW;MACtB,OAAO;QACLC,CAAC,EAAEZ,OAAO,CAACY,CAAD,CAAP,GAAaA,CAAC,CAACD,GAAD,CAAd,GAAsBC,CADpB;QAELL,CAAC,EAAEG;MAFE,CAAP;IAID,CALM,CAAP;EAMD,CAVyC,CAY1C;;;EACA,OAAO,CACL;IAAEE,CAAC,EAAEA,CAAL;IAAkBL,CAAC,EAAEC;EAArB,CADK,EAEL;IAAEI,CAAC,EAAEA,CAAL;IAAkBL,CAAC;EAAnB,CAFK,CAAP;AAID;;AAEDN,aAAa,CAAC,UAAD,EAAa,MAAb,EAAqB;EAChCY,SAAS,EAAT,UAAUC,UAAV,EAAgC;IAC9B,OAAOT,aAAa,CAACS,UAAD,CAApB;EACD,CAH+B;EAIhCC,IAAI,EAAJ,UAAKC,GAAL,EAAqBC,SAArB,EAAsC;IACpC,IAAMC,KAAK,GAAGhB,QAAQ,CAACc,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAmB,WAAnB,CAAtB;IACA,IAAMG,QAAQ,GAAGf,IAAI,cAAMc,KAAN,GAAe,CAAC,MAAD,CAAf,CAArB;IACA,IAAME,IAAI,GAAG,KAAKC,SAAL,CAAelB,WAAW,CAACa,GAAG,CAACM,MAAL,EAAwB,KAAxB,CAA1B,CAAb;IACA,IAAMC,KAAK,GAAGN,SAAS,CAACO,QAAV,CAAmB,MAAnB,EAA2B;MACvCC,KAAK,wBACAN,QADA,GACQ;QACXC,IAAI;MADO,CADR,CADkC;MAKvCM,IAAI,EAAE;IALiC,CAA3B,CAAd;IAQA,OAAOH,KAAP;EACD,CAjB+B;EAkBhCI,SAAS,EAAT,UAAUC,SAAV,EAAmC;IACzB,SAAK,GAAKA,SAAS,MAAnB;IACR,OAAO;MACLC,MAAM,EAAE,UAACjB,CAAD,EAAYL,CAAZ,EAAuBuB,CAAvB,EAAgC;QACtC,OAAO,CACL,CAAC,GAAD,EAAMlB,CAAN,EAASL,CAAC,GAAGuB,CAAb,CADK,EAEL,CAAC,GAAD,EAAMlB,CAAN,EAASL,CAAC,GAAGuB,CAAb,CAFK,CAAP;MAID,CANI;MAOLZ,KAAK,EAAE;QACLY,CAAC,EAAE,CADE;QAELC,MAAM,EAAEC;MAFH;IAPF,CAAP;EAYD;AAhC+B,CAArB,CAAb","names":["isArray","registerShape","getStyle","getRectPath","omit","getLinePoints","pointInfo","y","y0","map","yItem","idx","x","getPoints","shapePoint","draw","cfg","container","style","newStyle","path","parsePath","points","shape","addShape","attrs","name","getMarker","markerCfg","symbol","r","stroke","color"],"sourceRoot":"","sources":["../../../../src/geometry/shape/interval/line.ts"],"sourcesContent":["import { isArray } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getRectPath } from './util';\nimport { omit } from '../../../util/helper';\n\n// 根据数据点生成 Line 的两个关键点\nfunction getLinePoints(pointInfo: ShapePoint): Point[] {\n  const { x, y, y0 } = pointInfo;\n\n  if (isArray(y)) {\n    return y.map((yItem, idx) => {\n      return {\n        x: isArray(x) ? x[idx] : x,\n        y: yItem,\n      };\n    });\n  }\n\n  // 起始点从 y0 开始\n  return [\n    { x: x as number, y: y0 },\n    { x: x as number, y },\n  ];\n}\n\nregisterShape('interval', 'line', {\n  getPoints(shapePoint: ShapePoint) {\n    return getLinePoints(shapePoint);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const newStyle = omit({ ...style }, ['fill']);\n    const path = this.parsePath(getRectPath(cfg.points as Point[], false));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...newStyle,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number) => {\n        return [\n          ['M', x, y - r],\n          ['L', x, y + r],\n        ];\n      },\n      style: {\n        r: 5,\n        stroke: color,\n      },\n    };\n  },\n});\n"]},"metadata":{},"sourceType":"module"}