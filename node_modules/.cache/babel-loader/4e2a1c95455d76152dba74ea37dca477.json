{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each } from '@antv/util';\nimport Action from '../base';\n/**\n * @ignore\n * 辅助框 Action 的基类\n */\n\nvar MaskBase =\n/** @class */\nfunction (_super) {\n  __extends(MaskBase, _super);\n\n  function MaskBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // mask 图形\n\n\n    _this.maskShape = null; // 组成 mask 的各个点\n\n    _this.points = []; // 开始 mask 的标记\n\n    _this.starting = false; // 开始移动的标记\n\n    _this.moving = false;\n    _this.preMovePoint = null;\n    _this.shapeType = 'path';\n    return _this;\n  } // 获取当前的位置\n\n\n  MaskBase.prototype.getCurrentPoint = function () {\n    var event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y\n    };\n  }; // 触发 mask 的事件\n\n\n  MaskBase.prototype.emitEvent = function (type) {\n    var eventName = \"mask:\".concat(type);\n    var view = this.context.view;\n    var event = this.context.event;\n    view.emit(eventName, {\n      target: this.maskShape,\n      shape: this.maskShape,\n      points: this.points,\n      x: event.x,\n      y: event.y\n    });\n  }; // 创建 mask\n\n\n  MaskBase.prototype.createMask = function () {\n    var view = this.context.view;\n    var maskAttrs = this.getMaskAttrs();\n    var maskShape = view.foregroundGroup.addShape({\n      type: this.shapeType,\n      name: 'mask',\n      draggable: true,\n      attrs: __assign({\n        fill: '#C5D4EB',\n        opacity: 0.3\n      }, maskAttrs)\n    });\n    return maskShape;\n  }; // 生成 mask 的路径\n\n\n  MaskBase.prototype.getMaskPath = function () {\n    return [];\n  };\n  /**\n   * 显示\n   */\n\n\n  MaskBase.prototype.show = function () {\n    if (this.maskShape) {\n      this.maskShape.show();\n      this.emitEvent('show');\n    }\n  };\n  /**\n   * 开始\n   */\n\n\n  MaskBase.prototype.start = function (arg) {\n    this.starting = true; // 开始时，保证移动结束\n\n    this.moving = false;\n    this.points = [this.getCurrentPoint()];\n\n    if (!this.maskShape) {\n      this.maskShape = this.createMask(); // 开始时设置 capture: false，可以避免创建、resize 时触发事件\n\n      this.maskShape.set('capture', false);\n    }\n\n    this.updateMask(arg === null || arg === void 0 ? void 0 : arg.maskStyle);\n    this.emitEvent('start');\n  };\n  /**\n   * 开始移动\n   */\n\n\n  MaskBase.prototype.moveStart = function () {\n    this.moving = true;\n    this.preMovePoint = this.getCurrentPoint();\n  };\n  /**\n   * 移动 mask\n   */\n\n\n  MaskBase.prototype.move = function () {\n    if (!this.moving || !this.maskShape) {\n      return;\n    }\n\n    var currentPoint = this.getCurrentPoint();\n    var preMovePoint = this.preMovePoint;\n    var dx = currentPoint.x - preMovePoint.x;\n    var dy = currentPoint.y - preMovePoint.y;\n    var points = this.points;\n    each(points, function (point) {\n      point.x += dx;\n      point.y += dy;\n    });\n    this.updateMask();\n    this.emitEvent('change');\n    this.preMovePoint = currentPoint;\n  };\n\n  MaskBase.prototype.updateMask = function (maskStyle) {\n    var attrs = deepMix({}, this.getMaskAttrs(), maskStyle);\n    this.maskShape.attr(attrs);\n  };\n  /**\n   * 结束移动\n   */\n\n\n  MaskBase.prototype.moveEnd = function () {\n    this.moving = false;\n    this.preMovePoint = null;\n  };\n  /**\n   * 结束\n   */\n\n\n  MaskBase.prototype.end = function () {\n    this.starting = false;\n    this.emitEvent('end');\n\n    if (this.maskShape) {\n      this.maskShape.set('capture', true);\n    }\n  };\n  /**\n   * 隐藏\n   */\n\n\n  MaskBase.prototype.hide = function () {\n    if (this.maskShape) {\n      this.maskShape.hide();\n      this.emitEvent('hide');\n    }\n  };\n  /**\n   * 大小变化\n   */\n\n\n  MaskBase.prototype.resize = function () {\n    // 只有进行中，才会允许大小变化\n    if (this.starting && this.maskShape) {\n      this.points.push(this.getCurrentPoint());\n      this.updateMask();\n      this.emitEvent('change');\n    }\n  };\n  /**\n   * 销毁\n   */\n\n\n  MaskBase.prototype.destroy = function () {\n    this.points = [];\n\n    if (this.maskShape) {\n      this.maskShape.remove();\n    }\n\n    this.maskShape = null;\n    this.preMovePoint = null;\n\n    _super.prototype.destroy.call(this);\n  };\n\n  return MaskBase;\n}(Action);\n\nexport default MaskBase;","map":{"version":3,"mappings":";AAAA,SAASA,OAAT,EAAkBC,IAAlB,QAA8B,YAA9B;AACA,OAAOC,MAAP,MAAmB,SAAnB;AAGA;;;;;AAIA;AAAA;AAAA;EAAgCC;;EAAhC;IAAA,sEACE;;;IACUC,kBAAY,IAAZ,CAFZ,CAGE;;IACUA,eAAS,EAAT,CAJZ,CAKE;;IACUA,iBAAW,KAAX,CANZ,CAOE;;IACUA,eAAS,KAAT;IACAA,qBAAe,IAAf;IAEAA,kBAAY,MAAZ;;EAgKX,CA3KD,CAYE;;;EACUC,qCAAV;IACE,IAAMC,KAAK,GAAG,KAAKC,OAAL,CAAaD,KAA3B;IACA,OAAO;MACLE,CAAC,EAAEF,KAAK,CAACE,CADJ;MAELC,CAAC,EAAEH,KAAK,CAACG;IAFJ,CAAP;EAID,CANS,CAbZ,CAoBE;;;EACUJ,+BAAV,UAAoBK,IAApB,EAAwB;IACtB,IAAMC,SAAS,GAAG,eAAQD,IAAR,CAAlB;IACA,IAAME,IAAI,GAAG,KAAKL,OAAL,CAAaK,IAA1B;IACA,IAAMN,KAAK,GAAG,KAAKC,OAAL,CAAaD,KAA3B;IACAM,IAAI,CAACC,IAAL,CAAUF,SAAV,EAAqB;MACnBG,MAAM,EAAE,KAAKC,SADM;MAEnBC,KAAK,EAAE,KAAKD,SAFO;MAGnBE,MAAM,EAAE,KAAKA,MAHM;MAInBT,CAAC,EAAEF,KAAK,CAACE,CAJU;MAKnBC,CAAC,EAAEH,KAAK,CAACG;IALU,CAArB;EAOD,CAXS,CArBZ,CAkCE;;;EACQJ,gCAAR;IACE,IAAMO,IAAI,GAAG,KAAKL,OAAL,CAAaK,IAA1B;IACA,IAAMM,SAAS,GAAG,KAAKC,YAAL,EAAlB;IACA,IAAMJ,SAAS,GAAGH,IAAI,CAACQ,eAAL,CAAqBC,QAArB,CAA8B;MAC9CX,IAAI,EAAE,KAAKY,SADmC;MAE9CC,IAAI,EAAE,MAFwC;MAG9CC,SAAS,EAAE,IAHmC;MAI9CC,KAAK;QACHC,IAAI,EAAE,SADH;QAEHC,OAAO,EAAE;MAFN,GAGAT,SAHA;IAJyC,CAA9B,CAAlB;IAUA,OAAOH,SAAP;EACD,CAdO,CAnCV,CAqDE;;;EACUV,iCAAV;IACE,OAAO,EAAP;EACD,CAFS;EAIV;;;;;EAGOA,0BAAP;IACE,IAAI,KAAKU,SAAT,EAAoB;MAClB,KAAKA,SAAL,CAAea,IAAf;MACA,KAAKC,SAAL,CAAe,MAAf;IACD;EACF,CALM;EAOP;;;;;EAGOxB,2BAAP,UAAayB,GAAb,EAA6C;IAC3C,KAAKC,QAAL,GAAgB,IAAhB,CAD2C,CAE3C;;IACA,KAAKC,MAAL,GAAc,KAAd;IACA,KAAKf,MAAL,GAAc,CAAC,KAAKgB,eAAL,EAAD,CAAd;;IACA,IAAI,CAAC,KAAKlB,SAAV,EAAqB;MACnB,KAAKA,SAAL,GAAiB,KAAKmB,UAAL,EAAjB,CADmB,CAEnB;;MACA,KAAKnB,SAAL,CAAeoB,GAAf,CAAmB,SAAnB,EAA8B,KAA9B;IACD;;IACD,KAAKC,UAAL,CAAgBN,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEO,SAArB;IACA,KAAKR,SAAL,CAAe,OAAf;EACD,CAZM;EAcP;;;;;EAGOxB,+BAAP;IACE,KAAK2B,MAAL,GAAc,IAAd;IACA,KAAKM,YAAL,GAAoB,KAAKL,eAAL,EAApB;EACD,CAHM;EAIP;;;;;EAGO5B,0BAAP;IACE,IAAI,CAAC,KAAK2B,MAAN,IAAgB,CAAC,KAAKjB,SAA1B,EAAqC;MACnC;IACD;;IACD,IAAMwB,YAAY,GAAG,KAAKN,eAAL,EAArB;IACA,IAAMK,YAAY,GAAG,KAAKA,YAA1B;IACA,IAAME,EAAE,GAAGD,YAAY,CAAC/B,CAAb,GAAiB8B,YAAY,CAAC9B,CAAzC;IACA,IAAMiC,EAAE,GAAGF,YAAY,CAAC9B,CAAb,GAAiB6B,YAAY,CAAC7B,CAAzC;IACA,IAAMQ,MAAM,GAAG,KAAKA,MAApB;IACAhB,IAAI,CAACgB,MAAD,EAAS,UAACyB,KAAD,EAAM;MACjBA,KAAK,CAAClC,CAAN,IAAWgC,EAAX;MACAE,KAAK,CAACjC,CAAN,IAAWgC,EAAX;IACD,CAHG,CAAJ;IAIA,KAAKL,UAAL;IACA,KAAKP,SAAL,CAAe,QAAf;IACA,KAAKS,YAAL,GAAoBC,YAApB;EACD,CAhBM;;EAkBGlC,gCAAV,UAAqBgC,SAArB,EAA4C;IAC1C,IAAMZ,KAAK,GAAGzB,OAAO,CAAC,EAAD,EAAK,KAAKmB,YAAL,EAAL,EAA0BkB,SAA1B,CAArB;IACA,KAAKtB,SAAL,CAAe4B,IAAf,CAAoBlB,KAApB;EACD,CAHS;EAKV;;;;;EAGOpB,6BAAP;IACE,KAAK2B,MAAL,GAAc,KAAd;IACA,KAAKM,YAAL,GAAoB,IAApB;EACD,CAHM;EAKP;;;;;EAGOjC,yBAAP;IACE,KAAK0B,QAAL,GAAgB,KAAhB;IACA,KAAKF,SAAL,CAAe,KAAf;;IACA,IAAI,KAAKd,SAAT,EAAoB;MAClB,KAAKA,SAAL,CAAeoB,GAAf,CAAmB,SAAnB,EAA8B,IAA9B;IACD;EACF,CANM;EAQP;;;;;EAGO9B,0BAAP;IACE,IAAI,KAAKU,SAAT,EAAoB;MAClB,KAAKA,SAAL,CAAe6B,IAAf;MACA,KAAKf,SAAL,CAAe,MAAf;IACD;EACF,CALM;EAOP;;;;;EAGOxB,4BAAP;IACE;IACA,IAAI,KAAK0B,QAAL,IAAiB,KAAKhB,SAA1B,EAAqC;MACnC,KAAKE,MAAL,CAAY4B,IAAZ,CAAiB,KAAKZ,eAAL,EAAjB;MACA,KAAKG,UAAL;MACA,KAAKP,SAAL,CAAe,QAAf;IACD;EACF,CAPM;EASP;;;;;EAGOxB,6BAAP;IACE,KAAKY,MAAL,GAAc,EAAd;;IACA,IAAI,KAAKF,SAAT,EAAoB;MAClB,KAAKA,SAAL,CAAe+B,MAAf;IACD;;IACD,KAAK/B,SAAL,GAAiB,IAAjB;IACA,KAAKuB,YAAL,GAAoB,IAApB;;IACAS,iBAAMC,OAAN,CAAaC,IAAb,CAAa,IAAb;EACD,CARM;;EAST;AAAC,CA3KD,CAAgC/C,MAAhC;;AA6KA,eAAeG,QAAf","names":["deepMix","each","Action","__extends","_this","MaskBase","event","context","x","y","type","eventName","view","emit","target","maskShape","shape","points","maskAttrs","getMaskAttrs","foregroundGroup","addShape","shapeType","name","draggable","attrs","fill","opacity","show","emitEvent","arg","starting","moving","getCurrentPoint","createMask","set","updateMask","maskStyle","preMovePoint","currentPoint","dx","dy","point","attr","hide","push","remove","_super","destroy","call"],"sourceRoot":"","sources":["../../../../src/interaction/action/mask/base.ts"],"sourcesContent":["import { deepMix, each } from '@antv/util';\nimport Action from '../base';\nimport { LooseObject } from '../../../interface';\n\n/**\n * @ignore\n * 辅助框 Action 的基类\n */\nabstract class MaskBase extends Action {\n  // mask 图形\n  protected maskShape = null;\n  // 组成 mask 的各个点\n  protected points = [];\n  // 开始 mask 的标记\n  protected starting = false;\n  // 开始移动的标记\n  protected moving = false;\n  protected preMovePoint = null;\n\n  protected shapeType = 'path';\n  // 获取当前的位置\n  protected getCurrentPoint() {\n    const event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y,\n    };\n  }\n  // 触发 mask 的事件\n  protected emitEvent(type) {\n    const eventName = `mask:${type}`;\n    const view = this.context.view;\n    const event = this.context.event;\n    view.emit(eventName, {\n      target: this.maskShape,\n      shape: this.maskShape,\n      points: this.points,\n      x: event.x,\n      y: event.y,\n    });\n  }\n\n  // 创建 mask\n  private createMask() {\n    const view = this.context.view;\n    const maskAttrs = this.getMaskAttrs();\n    const maskShape = view.foregroundGroup.addShape({\n      type: this.shapeType,\n      name: 'mask',\n      draggable: true,\n      attrs: {\n        fill: '#C5D4EB',\n        opacity: 0.3,\n        ...maskAttrs,\n      },\n    });\n    return maskShape;\n  }\n\n  protected abstract getMaskAttrs(): LooseObject;\n\n  // 生成 mask 的路径\n  protected getMaskPath() {\n    return [];\n  }\n\n  /**\n   * 显示\n   */\n  public show() {\n    if (this.maskShape) {\n      this.maskShape.show();\n      this.emitEvent('show');\n    }\n  }\n\n  /**\n   * 开始\n   */\n  public start(arg?: { maskStyle: LooseObject }) {\n    this.starting = true;\n    // 开始时，保证移动结束\n    this.moving = false;\n    this.points = [this.getCurrentPoint()];\n    if (!this.maskShape) {\n      this.maskShape = this.createMask();\n      // 开始时设置 capture: false，可以避免创建、resize 时触发事件\n      this.maskShape.set('capture', false);\n    }\n    this.updateMask(arg?.maskStyle);\n    this.emitEvent('start');\n  }\n\n  /**\n   * 开始移动\n   */\n  public moveStart() {\n    this.moving = true;\n    this.preMovePoint = this.getCurrentPoint();\n  }\n  /**\n   * 移动 mask\n   */\n  public move() {\n    if (!this.moving || !this.maskShape) {\n      return;\n    }\n    const currentPoint = this.getCurrentPoint();\n    const preMovePoint = this.preMovePoint;\n    const dx = currentPoint.x - preMovePoint.x;\n    const dy = currentPoint.y - preMovePoint.y;\n    const points = this.points;\n    each(points, (point) => {\n      point.x += dx;\n      point.y += dy;\n    });\n    this.updateMask();\n    this.emitEvent('change');\n    this.preMovePoint = currentPoint;\n  }\n\n  protected updateMask(maskStyle?: LooseObject) {\n    const attrs = deepMix({}, this.getMaskAttrs(), maskStyle);\n    this.maskShape.attr(attrs);\n  }\n\n  /**\n   * 结束移动\n   */\n  public moveEnd() {\n    this.moving = false;\n    this.preMovePoint = null;\n  }\n\n  /**\n   * 结束\n   */\n  public end() {\n    this.starting = false;\n    this.emitEvent('end');\n    if (this.maskShape) {\n      this.maskShape.set('capture', true);\n    }\n  }\n\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.maskShape) {\n      this.maskShape.hide();\n      this.emitEvent('hide');\n    }\n  }\n\n  /**\n   * 大小变化\n   */\n  public resize() {\n    // 只有进行中，才会允许大小变化\n    if (this.starting && this.maskShape) {\n      this.points.push(this.getCurrentPoint());\n      this.updateMask();\n      this.emitEvent('change');\n    }\n  }\n\n  /**\n   * 销毁\n   */\n  public destroy() {\n    this.points = [];\n    if (this.maskShape) {\n      this.maskShape.remove();\n    }\n    this.maskShape = null;\n    this.preMovePoint = null;\n    super.destroy();\n  }\n}\n\nexport default MaskBase;\n"]},"metadata":{},"sourceType":"module"}