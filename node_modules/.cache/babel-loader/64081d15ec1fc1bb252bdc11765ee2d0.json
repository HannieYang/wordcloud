{"ast":null,"code":"import { ext, vec2, vec3 } from '@antv/matrix-util';\nvar identityMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\nexport function getMatrixByAngle(point, angle, matrix) {\n  if (matrix === void 0) {\n    matrix = identityMatrix;\n  }\n\n  if (!angle) {\n    // 角度为 0 或者 null 时返回 null\n    return null;\n  }\n\n  var m = ext.transform(matrix, [['t', -point.x, -point.y], ['r', angle], ['t', point.x, point.y]]);\n  return m;\n}\nexport function getMatrixByTranslate(point, currentMatrix) {\n  if (!point.x && !point.y) {\n    // 0，0 或者 nan 的情况下返回 null\n    return null;\n  }\n\n  return ext.transform(currentMatrix || identityMatrix, [['t', point.x, point.y]]);\n} // 从矩阵获取旋转的角度\n\nexport function getAngleByMatrix(matrix) {\n  var xVector = [1, 0, 0];\n  var out = [0, 0, 0];\n  vec3.transformMat3(out, xVector, matrix);\n  return Math.atan2(out[1], out[0]);\n} // 矩阵 * 向量\n\nfunction multiplyVec2(matrix, v) {\n  var out = [0, 0];\n  vec2.transformMat3(out, v, matrix);\n  return out;\n}\n\nexport function applyMatrix2BBox(matrix, bbox) {\n  var topLeft = multiplyVec2(matrix, [bbox.minX, bbox.minY]);\n  var topRight = multiplyVec2(matrix, [bbox.maxX, bbox.minY]);\n  var bottomLeft = multiplyVec2(matrix, [bbox.minX, bbox.maxY]);\n  var bottomRight = multiplyVec2(matrix, [bbox.maxX, bbox.maxY]);\n  var minX = Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\n  var maxX = Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\n  var minY = Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\n  var maxY = Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\n  return {\n    x: minX,\n    y: minY,\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nexport function applyRotate(shape, rotate, x, y) {\n  if (rotate) {\n    var matrix = getMatrixByAngle({\n      x: x,\n      y: y\n    }, rotate, shape.getMatrix());\n    shape.setMatrix(matrix);\n  }\n}\nexport function applyTranslate(shape, x, y) {\n  var translateMatrix = getMatrixByTranslate({\n    x: x,\n    y: y\n  });\n  shape.attr('matrix', translateMatrix);\n}","map":{"version":3,"mappings":"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","names":["ext","vec2","vec3","identityMatrix","getMatrixByAngle","point","angle","matrix","m","transform","x","y","getMatrixByTranslate","currentMatrix","getAngleByMatrix","xVector","out","transformMat3","Math","atan2","multiplyVec2","v","applyMatrix2BBox","bbox","topLeft","minX","minY","topRight","maxX","bottomLeft","maxY","bottomRight","min","max","width","height","applyRotate","shape","rotate","getMatrix","setMatrix","applyTranslate","translateMatrix","attr"],"sourceRoot":"","sources":["../../src/util/matrix.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}