{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { isFunction, isString, isNil, get, isArray, isNumber, each, toString, isEmpty } from '@antv/util';\nimport { legend, animation, theme, state, annotation } from '../../adaptor/common';\nimport { getMappingFunction } from '../../adaptor/geometries/base';\nimport { interval } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { getLocale } from '../../core/locale';\nimport { flow, template, transformLabel, deepAssign, renderStatistic, processIllegalData } from '../../utils';\nimport { DEFAULT_OPTIONS } from './contants';\nimport { adaptOffset, getTotalValue, isAllZero } from './utils';\nimport { PIE_STATISTIC } from './interactions';\n/**\n * 字段\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      angleField = options.angleField,\n      colorField = options.colorField,\n      color = options.color,\n      pieStyle = options.pieStyle; // 处理不合法的数据\n\n  var processData = processIllegalData(data, angleField);\n\n  if (isAllZero(processData, angleField)) {\n    // 数据全 0 处理，调整 position 映射\n    var percentageField_1 = '$$percentage$$';\n    processData = processData.map(function (d) {\n      var _a;\n\n      return __assign(__assign({}, d), (_a = {}, _a[percentageField_1] = 1 / processData.length, _a));\n    });\n    chart.data(processData);\n    var p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: percentageField_1,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color: color,\n          style: pieStyle\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true\n        }\n      }\n    });\n    interval(p);\n  } else {\n    chart.data(processData);\n    var p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: angleField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color: color,\n          style: pieStyle\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true\n        }\n      }\n    });\n    interval(p);\n  }\n\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a;\n\n  var chart = params.chart,\n      options = params.options;\n  var meta = options.meta,\n      colorField = options.colorField; // meta 直接是 scale 的信息\n\n  var scales = deepAssign({}, meta);\n  chart.scale(scales, (_a = {}, _a[colorField] = {\n    type: 'cat'\n  }, _a));\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\n\n\nfunction coordinate(params) {\n  var chart = params.chart,\n      options = params.options;\n  var radius = options.radius,\n      innerRadius = options.innerRadius,\n      startAngle = options.startAngle,\n      endAngle = options.endAngle;\n  chart.coordinate({\n    type: 'theta',\n    cfg: {\n      radius: radius,\n      innerRadius: innerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    }\n  });\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      colorField = options.colorField,\n      angleField = options.angleField;\n  var geometry = chart.geometries[0]; // label 为 false, 空 则不显示 label\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    var labelCfg = transformLabel(cfg); // ① 提供模板字符串的 label content 配置\n\n    if (labelCfg.content) {\n      var content_1 = labelCfg.content;\n\n      labelCfg.content = function (data, dataum, index) {\n        var name = data[colorField];\n        var value = data[angleField]; // dymatic get scale, scale is ready this time\n\n        var angleScale = chart.getScaleByField(angleField);\n        var percent = angleScale === null || angleScale === void 0 ? void 0 : angleScale.scale(value);\n        return isFunction(content_1) ? // append percent (number) to data, users can get origin data from `dataum._origin`\n        content_1(__assign(__assign({}, data), {\n          percent: percent\n        }), dataum, index) : isString(content_1) ? template(content_1, {\n          value: value,\n          name: name,\n          // percentage (string), default keep 2\n          percentage: isNumber(percent) && !isNil(value) ? (percent * 100).toFixed(2) + \"%\" : null\n        }) : content_1;\n      };\n    }\n\n    var LABEL_LAYOUT_TYPE_MAP = {\n      inner: '',\n      outer: 'pie-outer',\n      spider: 'pie-spider'\n    };\n    var labelLayoutType = labelCfg.type ? LABEL_LAYOUT_TYPE_MAP[labelCfg.type] : 'pie-outer';\n    var labelLayoutCfg = labelCfg.layout ? !isArray(labelCfg.layout) ? [labelCfg.layout] : labelCfg.layout : [];\n    labelCfg.layout = (labelLayoutType ? [{\n      type: labelLayoutType\n    }] : []).concat(labelLayoutCfg);\n    geometry.label({\n      // fix: could not create scale, when field is undefined（attributes 中的 fields 定义都会被用来创建 scale）\n      fields: colorField ? [angleField, colorField] : [angleField],\n      callback: callback,\n      cfg: __assign(__assign({}, labelCfg), {\n        offset: adaptOffset(labelCfg.type, labelCfg.offset),\n        type: 'pie'\n      })\n    });\n  }\n\n  return params;\n}\n/**\n * statistic options 处理\n * 1. 默认继承 default options 的样式\n * 2. 默认使用 meta 的 formatter\n */\n\n\nexport function transformStatisticOptions(options) {\n  var innerRadius = options.innerRadius,\n      statistic = options.statistic,\n      angleField = options.angleField,\n      colorField = options.colorField,\n      meta = options.meta,\n      locale = options.locale;\n  var i18n = getLocale(locale);\n\n  if (innerRadius && statistic) {\n    var _a = deepAssign({}, DEFAULT_OPTIONS.statistic, statistic),\n        titleOpt_1 = _a.title,\n        contentOpt_1 = _a.content;\n\n    if (titleOpt_1 !== false) {\n      titleOpt_1 = deepAssign({}, {\n        formatter: function (datum) {\n          // 交互中, datum existed.\n          var text = datum ? datum[colorField] : !isNil(titleOpt_1.content) ? titleOpt_1.content : i18n.get(['statistic', 'total']);\n\n          var metaFormatter = get(meta, [colorField, 'formatter']) || function (v) {\n            return v;\n          };\n\n          return metaFormatter(text);\n        }\n      }, titleOpt_1);\n    }\n\n    if (contentOpt_1 !== false) {\n      contentOpt_1 = deepAssign({}, {\n        formatter: function (datum, data) {\n          var dataValue = datum ? datum[angleField] : getTotalValue(data, angleField);\n\n          var metaFormatter = get(meta, [angleField, 'formatter']) || function (v) {\n            return v;\n          }; // 交互中\n\n\n          if (datum) {\n            return metaFormatter(dataValue);\n          }\n\n          return !isNil(contentOpt_1.content) ? contentOpt_1.content : metaFormatter(dataValue);\n        }\n      }, contentOpt_1);\n    }\n\n    return deepAssign({}, {\n      statistic: {\n        title: titleOpt_1,\n        content: contentOpt_1\n      }\n    }, options);\n  }\n\n  return options;\n}\n/**\n * statistic 中心文本配置\n * @param params\n */\n\nexport function pieAnnotation(params) {\n  var chart = params.chart,\n      options = params.options;\n\n  var _a = transformStatisticOptions(options),\n      innerRadius = _a.innerRadius,\n      statistic = _a.statistic; // 先清空标注，再重新渲染\n\n\n  chart.getController('annotation').clear(true); // 先进行其他 annotations，再去渲染统计文本\n\n  flow(annotation())(params);\n  /** 中心文本 指标卡 */\n\n  if (innerRadius && statistic) {\n    renderStatistic(chart, {\n      statistic: statistic,\n      plotType: 'pie'\n    });\n  }\n\n  return params;\n}\n/**\n * 饼图 tooltip 配置\n * 1. 强制 tooltip.shared 为 false\n * @param params\n */\n\nfunction tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip,\n      colorField = options.colorField,\n      angleField = options.angleField,\n      data = options.data;\n\n  if (tooltip === false) {\n    chart.tooltip(tooltip);\n  } else {\n    chart.tooltip(deepAssign({}, tooltip, {\n      shared: false\n    })); // 主要解决 all zero， 对于非 all zero 不再适用\n\n    if (isAllZero(data, angleField)) {\n      var fields = get(tooltip, 'fields');\n      var formatter = get(tooltip, 'formatter');\n\n      if (isEmpty(get(tooltip, 'fields'))) {\n        fields = [colorField, angleField];\n\n        formatter = formatter || function (datum) {\n          return {\n            name: datum[colorField],\n            value: toString(datum[angleField])\n          };\n        };\n      }\n\n      chart.geometries[0].tooltip(fields.join('*'), getMappingFunction(fields, formatter));\n    }\n  }\n\n  return params;\n}\n/**\n * Interaction 配置 (饼图特殊的 interaction, 中心文本变更的时候，需要将一些配置参数传进去）\n * @param params\n */\n\n\nexport function interaction(params) {\n  var chart = params.chart,\n      options = params.options;\n\n  var _a = transformStatisticOptions(options),\n      interactions = _a.interactions,\n      statistic = _a.statistic,\n      annotations = _a.annotations;\n\n  each(interactions, function (i) {\n    var _a, _b;\n\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else if (i.type === 'pie-statistic-active') {\n      // 只针对 start 阶段的配置，进行添加参数信息\n      var startStages_1 = [];\n\n      if (!((_a = i.cfg) === null || _a === void 0 ? void 0 : _a.start)) {\n        startStages_1 = [{\n          trigger: 'element:mouseenter',\n          action: PIE_STATISTIC + \":change\",\n          arg: {\n            statistic: statistic,\n            annotations: annotations\n          }\n        }];\n      }\n\n      each((_b = i.cfg) === null || _b === void 0 ? void 0 : _b.start, function (stage) {\n        startStages_1.push(__assign(__assign({}, stage), {\n          arg: {\n            statistic: statistic,\n            annotations: annotations\n          }\n        }));\n      });\n      chart.interaction(i.type, deepAssign({}, i.cfg, {\n        start: startStages_1\n      }));\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n  return params;\n}\n/**\n * 饼图适配器\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(pattern('pieStyle'), geometry, meta, theme, coordinate, legend, tooltip, label, state,\n  /** 指标卡中心文本 放在下层 */\n  pieAnnotation, interaction, animation)(params);\n}","map":{"version":3,"mappings":"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","names":["isFunction","isString","isNil","get","isArray","isNumber","each","toString","isEmpty","legend","animation","theme","state","annotation","getMappingFunction","interval","pattern","getLocale","flow","template","transformLabel","deepAssign","renderStatistic","processIllegalData","DEFAULT_OPTIONS","adaptOffset","getTotalValue","isAllZero","PIE_STATISTIC","geometry","params","options","angleField","colorField","color","pieStyle","processData","data","percentageField_1","map","d","_a","length","chart","p","xField","yField","seriesField","isStack","style","args","zIndexReversed","sortZIndex","meta","scales","scale","type","coordinate","innerRadius","startAngle","endAngle","cfg","radius","label","geometries","labelCfg","content","dataum","index","name","value","angleScale","getScaleByField","percent","content_1","percentage","toFixed","LABEL_LAYOUT_TYPE_MAP","inner","outer","spider","labelLayoutType","labelLayoutCfg","layout","concat","fields","callback","offset","transformStatisticOptions","statistic","locale","i18n","titleOpt_1","contentOpt_1","formatter","datum","text","metaFormatter","v","dataValue","title","pieAnnotation","getController","clear","plotType","tooltip","shared","join","interaction","interactions","annotations","i","enable","removeInteraction","startStages_1","start","trigger","action","arg","_b","stage","push","__assign","adaptor"],"sourceRoot":"","sources":["../../../src/plots/pie/adaptor.ts"],"sourcesContent":["import { isFunction, isString, isNil, get, isArray, isNumber, each, toString, isEmpty } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { legend, animation, theme, state, annotation } from '../../adaptor/common';\nimport { getMappingFunction } from '../../adaptor/geometries/base';\nimport { interval } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { getLocale } from '../../core/locale';\nimport { Interaction } from '../../types/interaction';\nimport { flow, template, transformLabel, deepAssign, renderStatistic, processIllegalData } from '../../utils';\nimport { Data, Datum } from '../../types';\nimport { DEFAULT_OPTIONS } from './contants';\nimport { adaptOffset, getTotalValue, isAllZero } from './utils';\nimport { PIE_STATISTIC } from './interactions';\nimport { PieOptions } from './types';\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { data, angleField, colorField, color, pieStyle } = options;\n\n  // 处理不合法的数据\n  let processData = processIllegalData(data, angleField);\n\n  if (isAllZero(processData, angleField)) {\n    // 数据全 0 处理，调整 position 映射\n    const percentageField = '$$percentage$$';\n    processData = processData.map((d) => ({ ...d, [percentageField]: 1 / processData.length }));\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: percentageField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true,\n        },\n      },\n    });\n\n    interval(p);\n  } else {\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: angleField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true,\n        },\n      },\n    });\n\n    interval(p);\n  }\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { meta, colorField } = options;\n\n  // meta 直接是 scale 的信息\n  const scales = deepAssign({}, meta);\n  chart.scale(scales, {\n    [colorField]: { type: 'cat' },\n  });\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius, startAngle, endAngle } = options;\n\n  chart.coordinate({\n    type: 'theta',\n    cfg: {\n      radius,\n      innerRadius,\n      startAngle,\n      endAngle,\n    },\n  });\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { label, colorField, angleField } = options;\n\n  const geometry = chart.geometries[0];\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    const labelCfg = transformLabel(cfg);\n\n    // ① 提供模板字符串的 label content 配置\n    if (labelCfg.content) {\n      const { content } = labelCfg;\n      labelCfg.content = (data: object, dataum: any, index: number) => {\n        const name = data[colorField];\n        const value = data[angleField];\n        // dymatic get scale, scale is ready this time\n        const angleScale = chart.getScaleByField(angleField);\n        const percent = angleScale?.scale(value);\n        return isFunction(content)\n          ? // append percent (number) to data, users can get origin data from `dataum._origin`\n            content({ ...data, percent }, dataum, index)\n          : isString(content)\n          ? template(content as string, {\n              value,\n              name,\n              // percentage (string), default keep 2\n              percentage: isNumber(percent) && !isNil(value) ? `${(percent * 100).toFixed(2)}%` : null,\n            })\n          : content;\n      };\n    }\n\n    const LABEL_LAYOUT_TYPE_MAP = {\n      inner: '',\n      outer: 'pie-outer',\n      spider: 'pie-spider',\n    };\n    const labelLayoutType = labelCfg.type ? LABEL_LAYOUT_TYPE_MAP[labelCfg.type] : 'pie-outer';\n    const labelLayoutCfg = labelCfg.layout ? (!isArray(labelCfg.layout) ? [labelCfg.layout] : labelCfg.layout) : [];\n    labelCfg.layout = (labelLayoutType ? [{ type: labelLayoutType }] : []).concat(labelLayoutCfg);\n\n    geometry.label({\n      // fix: could not create scale, when field is undefined（attributes 中的 fields 定义都会被用来创建 scale）\n      fields: colorField ? [angleField, colorField] : [angleField],\n      callback,\n      cfg: {\n        ...labelCfg,\n        offset: adaptOffset(labelCfg.type, labelCfg.offset),\n        type: 'pie',\n      },\n    });\n  }\n  return params;\n}\n\n/**\n * statistic options 处理\n * 1. 默认继承 default options 的样式\n * 2. 默认使用 meta 的 formatter\n */\nexport function transformStatisticOptions(options: PieOptions): PieOptions {\n  const { innerRadius, statistic, angleField, colorField, meta, locale } = options;\n\n  const i18n = getLocale(locale);\n\n  if (innerRadius && statistic) {\n    let { title: titleOpt, content: contentOpt } = deepAssign({}, DEFAULT_OPTIONS.statistic, statistic);\n    if (titleOpt !== false) {\n      titleOpt = deepAssign(\n        {},\n        {\n          formatter: (datum: Datum) => {\n            // 交互中, datum existed.\n            const text = datum\n              ? datum[colorField]\n              : !isNil(titleOpt.content)\n              ? titleOpt.content\n              : i18n.get(['statistic', 'total']);\n            const metaFormatter = get(meta, [colorField, 'formatter']) || ((v) => v);\n            return metaFormatter(text);\n          },\n        },\n        titleOpt\n      );\n    }\n    if (contentOpt !== false) {\n      contentOpt = deepAssign(\n        {},\n        {\n          formatter: (datum: Datum, data: Data) => {\n            const dataValue = datum ? datum[angleField] : getTotalValue(data, angleField);\n            const metaFormatter = get(meta, [angleField, 'formatter']) || ((v) => v);\n            // 交互中\n            if (datum) {\n              return metaFormatter(dataValue);\n            }\n            return !isNil(contentOpt.content) ? contentOpt.content : metaFormatter(dataValue);\n          },\n        },\n        contentOpt\n      );\n    }\n\n    return deepAssign({}, { statistic: { title: titleOpt, content: contentOpt } }, options);\n  }\n  return options;\n}\n\n/**\n * statistic 中心文本配置\n * @param params\n */\nexport function pieAnnotation(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { innerRadius, statistic } = transformStatisticOptions(options);\n  // 先清空标注，再重新渲染\n  chart.getController('annotation').clear(true);\n\n  // 先进行其他 annotations，再去渲染统计文本\n  flow(annotation())(params);\n\n  /** 中心文本 指标卡 */\n  if (innerRadius && statistic) {\n    renderStatistic(chart, { statistic, plotType: 'pie' });\n  }\n\n  return params;\n}\n\n/**\n * 饼图 tooltip 配置\n * 1. 强制 tooltip.shared 为 false\n * @param params\n */\nfunction tooltip(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { tooltip, colorField, angleField, data } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(tooltip);\n  } else {\n    chart.tooltip(deepAssign({}, tooltip, { shared: false }));\n\n    // 主要解决 all zero， 对于非 all zero 不再适用\n    if (isAllZero(data, angleField)) {\n      let fields = get(tooltip, 'fields');\n      let formatter = get(tooltip, 'formatter');\n\n      if (isEmpty(get(tooltip, 'fields'))) {\n        fields = [colorField, angleField];\n        formatter = formatter || ((datum) => ({ name: datum[colorField], value: toString(datum[angleField]) }));\n      }\n      chart.geometries[0].tooltip(fields.join('*'), getMappingFunction(fields, formatter));\n    }\n  }\n\n  return params;\n}\n\n/**\n * Interaction 配置 (饼图特殊的 interaction, 中心文本变更的时候，需要将一些配置参数传进去）\n * @param params\n */\nexport function interaction(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { interactions, statistic, annotations } = transformStatisticOptions(options);\n\n  each(interactions, (i: Interaction) => {\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else if (i.type === 'pie-statistic-active') {\n      // 只针对 start 阶段的配置，进行添加参数信息\n      let startStages = [];\n      if (!i.cfg?.start) {\n        startStages = [\n          {\n            trigger: 'element:mouseenter',\n            action: `${PIE_STATISTIC}:change`,\n            arg: { statistic, annotations },\n          },\n        ];\n      }\n      each(i.cfg?.start, (stage) => {\n        startStages.push({ ...stage, arg: { statistic, annotations } });\n      });\n      chart.interaction(i.type, deepAssign({}, i.cfg, { start: startStages }));\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n\n  return params;\n}\n\n/**\n * 饼图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<PieOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow<Params<PieOptions>>(\n    pattern('pieStyle'),\n    geometry,\n    meta,\n    theme,\n    coordinate,\n    legend,\n    tooltip,\n    label,\n    state,\n    /** 指标卡中心文本 放在下层 */\n    pieAnnotation,\n    interaction,\n    animation\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}