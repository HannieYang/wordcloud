{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { get } from '@antv/util';\nimport { deepAssign, findGeometry } from '../../utils';\nimport { flow, transformLabel } from '../../utils';\nimport { tooltip, interaction, animation, theme, scale, annotation, state, pattern } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { getTooltipMapping } from '../../utils/tooltip';\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      type = options.type,\n      xField = options.xField,\n      yField = options.yField,\n      colorField = options.colorField,\n      sizeField = options.sizeField,\n      sizeRatio = options.sizeRatio,\n      shape = options.shape,\n      color = options.color,\n      tooltip = options.tooltip,\n      heatmapStyle = options.heatmapStyle;\n  chart.data(data);\n  var geometryType = 'polygon';\n\n  if (type === 'density') {\n    geometryType = 'heatmap';\n  }\n\n  var _a = getTooltipMapping(tooltip, [xField, yField, colorField]),\n      fields = _a.fields,\n      formatter = _a.formatter;\n  /**\n   * The ratio between the actual size and the max available size, must be in range `[0,1]`.\n   *\n   * If the `sizeRatio` attribute is undefined or it exceeds the range,\n   * `checkedSizeRatio` would be set to 1 as default.\n   */\n\n\n  var checkedSizeRatio = 1;\n\n  if (sizeRatio || sizeRatio === 0) {\n    if (!shape && !sizeField) {\n      console.warn('sizeRatio is not in effect: Must define shape or sizeField first');\n    } else if (sizeRatio < 0 || sizeRatio > 1) {\n      console.warn('sizeRatio is not in effect: It must be a number in [0,1]');\n    } else {\n      checkedSizeRatio = sizeRatio;\n    }\n  }\n\n  geometryAdaptor(deepAssign({}, params, {\n    options: {\n      type: geometryType,\n      colorField: colorField,\n      tooltipFields: fields,\n      shapeField: sizeField || '',\n      label: undefined,\n      mapping: {\n        tooltip: formatter,\n        shape: shape && (sizeField ? function (dautm) {\n          var field = data.map(function (row) {\n            return row[sizeField];\n          });\n          var min = Math.min.apply(Math, field);\n          var max = Math.max.apply(Math, field);\n          return [shape, (get(dautm, sizeField) - min) / (max - min), checkedSizeRatio];\n        } : function () {\n          return [shape, 1, checkedSizeRatio];\n        }),\n        color: color || colorField && chart.getTheme().sequenceColors.join('-'),\n        style: heatmapStyle\n      }\n    }\n  }));\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nfunction legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      colorField = options.colorField,\n      sizeField = options.sizeField,\n      sizeLegend = options.sizeLegend;\n  /** legend 不为 false, 则展示图例, 优先展示 color 分类图例 */\n\n  var showLegend = legend !== false;\n\n  if (colorField) {\n    chart.legend(colorField, showLegend ? legend : false);\n  } // 旧版本: 有 sizeField 就有 sizeLegend. 这里默认继承下 legend 配置\n\n\n  if (sizeField) {\n    chart.legend(sizeField, sizeLegend === undefined ? legend : sizeLegend);\n  }\n  /** 默认没有 sizeField，则隐藏连续图例 */\n\n\n  if (!showLegend && !sizeLegend) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * fixme 后续确认下，数据标签的逻辑为啥和通用的不一致\n * 数据标签\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      colorField = options.colorField,\n      type = options.type;\n  var geometry = findGeometry(chart, type === 'density' ? 'heatmap' : 'polygon');\n\n  if (!label) {\n    geometry.label(false);\n  } else if (colorField) {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    geometry.label({\n      fields: [colorField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n\n  return params;\n}\n/**\n * 极坐标\n * @param params\n */\n\n\nfunction coordinate(params) {\n  var chart = params.chart,\n      options = params.options;\n  var coordinate = options.coordinate,\n      reflect = options.reflect;\n\n  if (coordinate) {\n    chart.coordinate({\n      type: coordinate.type || 'rect',\n      cfg: coordinate.cfg\n    });\n  }\n\n  if (reflect) {\n    chart.coordinate().reflect(reflect);\n  }\n\n  return params;\n}\n/**\n * 热力图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, pattern('heatmapStyle'), meta, coordinate, geometry, axis, legend, tooltip, label, annotation(), interaction, animation, state)(params);\n}","map":{"version":3,"mappings":"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","names":["get","deepAssign","findGeometry","flow","transformLabel","tooltip","interaction","animation","theme","scale","annotation","state","pattern","geometry","geometryAdaptor","getTooltipMapping","params","options","type","xField","yField","colorField","sizeField","sizeRatio","shape","color","heatmapStyle","chart","data","geometryType","fields","formatter","checkedSizeRatio","console","warn","tooltipFields","shapeField","label","undefined","mapping","dautm","field","map","row","min","Math","apply","max","getTheme","sequenceColors","join","style","meta","yAxis","_a","xAxis","axis","legend","sizeLegend","showLegend","cfg","callback","coordinate","reflect","adaptor"],"sourceRoot":"","sources":["../../../src/plots/heatmap/adaptor.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, findGeometry } from '../../utils';\nimport { flow, transformLabel } from '../../utils';\nimport { tooltip, interaction, animation, theme, scale, annotation, state, pattern } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { HeatmapOptions } from './types';\n\nfunction geometry(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { data, type, xField, yField, colorField, sizeField, sizeRatio, shape, color, tooltip, heatmapStyle } = options;\n\n  chart.data(data);\n  let geometryType = 'polygon';\n  if (type === 'density') {\n    geometryType = 'heatmap';\n  }\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, colorField]);\n\n  /**\n   * The ratio between the actual size and the max available size, must be in range `[0,1]`.\n   *\n   * If the `sizeRatio` attribute is undefined or it exceeds the range,\n   * `checkedSizeRatio` would be set to 1 as default.\n   */\n  let checkedSizeRatio = 1;\n  if (sizeRatio || sizeRatio === 0) {\n    if (!shape && !sizeField) {\n      console.warn('sizeRatio is not in effect: Must define shape or sizeField first');\n    } else if (sizeRatio < 0 || sizeRatio > 1) {\n      console.warn('sizeRatio is not in effect: It must be a number in [0,1]');\n    } else {\n      checkedSizeRatio = sizeRatio;\n    }\n  }\n\n  geometryAdaptor(\n    deepAssign({}, params, {\n      options: {\n        type: geometryType,\n        colorField,\n        tooltipFields: fields,\n        shapeField: sizeField || '',\n        label: undefined,\n        mapping: {\n          tooltip: formatter,\n          shape:\n            shape &&\n            (sizeField\n              ? (dautm) => {\n                  const field = data.map((row) => row[sizeField]);\n                  const min = Math.min(...field);\n                  const max = Math.max(...field);\n                  return [shape, (get(dautm, sizeField) - min) / (max - min), checkedSizeRatio];\n                }\n              : () => [shape, 1, checkedSizeRatio]),\n          color: color || (colorField && chart.getTheme().sequenceColors.join('-')),\n          style: heatmapStyle,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nfunction legend(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { legend, colorField, sizeField, sizeLegend } = options;\n\n  /** legend 不为 false, 则展示图例, 优先展示 color 分类图例 */\n  const showLegend = legend !== false;\n\n  if (colorField) {\n    chart.legend(colorField, showLegend ? legend : false);\n  }\n\n  // 旧版本: 有 sizeField 就有 sizeLegend. 这里默认继承下 legend 配置\n  if (sizeField) {\n    chart.legend(sizeField, sizeLegend === undefined ? legend : sizeLegend);\n  }\n\n  /** 默认没有 sizeField，则隐藏连续图例 */\n  if (!showLegend && !sizeLegend) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * fixme 后续确认下，数据标签的逻辑为啥和通用的不一致\n * 数据标签\n * @param params\n */\nfunction label(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { label, colorField, type } = options;\n\n  const geometry = findGeometry(chart, type === 'density' ? 'heatmap' : 'polygon');\n\n  if (!label) {\n    geometry.label(false);\n  } else if (colorField) {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [colorField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 极坐标\n * @param params\n */\nfunction coordinate(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { coordinate, reflect } = options;\n\n  if (coordinate) {\n    chart.coordinate({\n      type: coordinate.type || 'rect',\n      cfg: coordinate.cfg,\n    });\n  }\n\n  if (reflect) {\n    chart.coordinate().reflect(reflect);\n  }\n\n  return params;\n}\n\n/**\n * 热力图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<HeatmapOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    theme,\n    pattern('heatmapStyle'),\n    meta,\n    coordinate,\n    geometry,\n    axis,\n    legend,\n    tooltip,\n    label,\n    annotation(),\n    interaction,\n    animation,\n    state\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}