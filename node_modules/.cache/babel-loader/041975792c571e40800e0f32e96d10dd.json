{"ast":null,"code":"import { get } from '@antv/util';\nexport var X_FIELD = 'x';\nexport var Y_FIELD = 'y';\nexport var NODE_COLOR_FIELD = 'name';\nexport var EDGE_COLOR_FIELD = 'source';\nexport var DEFAULT_OPTIONS = {\n  nodeStyle: {\n    opacity: 1,\n    fillOpacity: 1,\n    lineWidth: 1\n  },\n  edgeStyle: {\n    opacity: 0.5,\n    lineWidth: 2\n  },\n  label: {\n    fields: ['x', 'name'],\n    callback: function (x, name) {\n      var centerX = (x[0] + x[1]) / 2;\n      var offsetX = centerX > 0.5 ? -4 : 4;\n      return {\n        labelEmit: true,\n        style: {\n          fill: '#8c8c8c'\n        },\n        offsetX: offsetX,\n        content: name\n      };\n    }\n  },\n  tooltip: {\n    showTitle: false,\n    showMarkers: false,\n    fields: ['source', 'target', 'value', 'isNode'],\n    // 内置：node 不显示 tooltip (业务层自行处理)，edge 显示 tooltip\n    showContent: function (items) {\n      return !get(items, [0, 'data', 'isNode']);\n    },\n    formatter: function (datum) {\n      var source = datum.source,\n          target = datum.target,\n          value = datum.value;\n      return {\n        name: source + \" -> \" + target,\n        value: value\n      };\n    }\n  },\n  interactions: [{\n    type: 'element-active'\n  }],\n  weight: true,\n  nodePaddingRatio: 0.1,\n  nodeWidthRatio: 0.05\n};","map":{"version":3,"mappings":"AAAA,SAASA,GAAT,QAAoB,YAApB;AAGA,OAAO,IAAMC,OAAO,GAAG,GAAhB;AACP,OAAO,IAAMC,OAAO,GAAG,GAAhB;AACP,OAAO,IAAMC,gBAAgB,GAAG,MAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,QAAzB;AAEP,OAAO,IAAMC,eAAe,GAAG;EAC7BC,SAAS,EAAE;IACTC,OAAO,EAAE,CADA;IAETC,WAAW,EAAE,CAFJ;IAGTC,SAAS,EAAE;EAHF,CADkB;EAM7BC,SAAS,EAAE;IACTH,OAAO,EAAE,GADA;IAETE,SAAS,EAAE;EAFF,CANkB;EAU7BE,KAAK,EAAE;IACLC,MAAM,EAAE,CAAC,GAAD,EAAM,MAAN,CADH;IAELC,QAAQ,EAAE,UAACC,CAAD,EAAcC,IAAd,EAA0B;MAClC,IAAMC,OAAO,GAAG,CAACF,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAT,IAAgB,CAAhC;MACA,IAAMG,OAAO,GAAGD,OAAO,GAAG,GAAV,GAAgB,CAAC,CAAjB,GAAqB,CAArC;MACA,OAAO;QACLE,SAAS,EAAE,IADN;QAELC,KAAK,EAAE;UACLC,IAAI,EAAE;QADD,CAFF;QAKLH,OAAO,SALF;QAMLI,OAAO,EAAEN;MANJ,CAAP;IAQD;EAbI,CAVsB;EAyB7BO,OAAO,EAAE;IACPC,SAAS,EAAE,KADJ;IAEPC,WAAW,EAAE,KAFN;IAGPZ,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,QAA9B,CAHD;IAIP;IACAa,WAAW,EAAE,UAACC,KAAD,EAAM;MACjB,OAAO,CAAC1B,GAAG,CAAC0B,KAAD,EAAQ,CAAC,CAAD,EAAI,MAAJ,EAAY,QAAZ,CAAR,CAAX;IACD,CAPM;IAQPC,SAAS,EAAE,UAACC,KAAD,EAAa;MACd,UAAM,GAAoBA,KAAK,OAA/B;MAAA,IAAQC,MAAM,GAAYD,KAAK,OAA/B;MAAA,IAAgBE,KAAK,GAAKF,KAAK,MAA/B;MACR,OAAO;QACLb,IAAI,EAAKgB,MAAM,SAAN,GAAaF,MADjB;QAELC,KAAK;MAFA,CAAP;IAID;EAdM,CAzBoB;EAyC7BE,YAAY,EAAE,CACZ;IACEC,IAAI,EAAE;EADR,CADY,CAzCe;EA8C7BC,MAAM,EAAE,IA9CqB;EA+C7BC,gBAAgB,EAAE,GA/CW;EAgD7BC,cAAc,EAAE;AAhDa,CAAxB","names":["get","X_FIELD","Y_FIELD","NODE_COLOR_FIELD","EDGE_COLOR_FIELD","DEFAULT_OPTIONS","nodeStyle","opacity","fillOpacity","lineWidth","edgeStyle","label","fields","callback","x","name","centerX","offsetX","labelEmit","style","fill","content","tooltip","showTitle","showMarkers","showContent","items","formatter","datum","target","value","source","interactions","type","weight","nodePaddingRatio","nodeWidthRatio"],"sourceRoot":"","sources":["../../../src/plots/chord/constant.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { Datum } from '../../types';\n\nexport const X_FIELD = 'x';\nexport const Y_FIELD = 'y';\nexport const NODE_COLOR_FIELD = 'name';\nexport const EDGE_COLOR_FIELD = 'source';\n\nexport const DEFAULT_OPTIONS = {\n  nodeStyle: {\n    opacity: 1,\n    fillOpacity: 1,\n    lineWidth: 1,\n  },\n  edgeStyle: {\n    opacity: 0.5,\n    lineWidth: 2,\n  },\n  label: {\n    fields: ['x', 'name'],\n    callback: (x: number[], name: string) => {\n      const centerX = (x[0] + x[1]) / 2;\n      const offsetX = centerX > 0.5 ? -4 : 4;\n      return {\n        labelEmit: true,\n        style: {\n          fill: '#8c8c8c',\n        },\n        offsetX,\n        content: name,\n      };\n    },\n  },\n  tooltip: {\n    showTitle: false,\n    showMarkers: false,\n    fields: ['source', 'target', 'value', 'isNode'],\n    // 内置：node 不显示 tooltip (业务层自行处理)，edge 显示 tooltip\n    showContent: (items) => {\n      return !get(items, [0, 'data', 'isNode']);\n    },\n    formatter: (datum: Datum) => {\n      const { source, target, value } = datum;\n      return {\n        name: `${source} -> ${target}`,\n        value,\n      };\n    },\n  },\n  interactions: [\n    {\n      type: 'element-active',\n    },\n  ],\n  weight: true,\n  nodePaddingRatio: 0.1,\n  nodeWidthRatio: 0.05,\n};\n"]},"metadata":{},"sourceType":"module"}