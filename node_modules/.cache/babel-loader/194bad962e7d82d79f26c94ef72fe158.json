{"ast":null,"code":"import { __assign, __read } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style'; // 根据数据点生成 tick shape 的 6 个关键点\n\nfunction getTickPoints(pointInfo) {\n  var _a;\n\n  var x = pointInfo.x,\n      y = pointInfo.y,\n      y0 = pointInfo.y0,\n      size = pointInfo.size;\n  var yMin;\n  var yMax;\n\n  if (isArray(y)) {\n    _a = __read(y, 2), yMin = _a[0], yMax = _a[1];\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  var xMax = x + size / 2;\n  var xMin = x - size / 2; // tick 关键点顺序\n  // 4 - 1 - 5\n  //     |\n  // 2 - 0 - 3\n\n  return [{\n    x: x,\n    y: yMin\n  }, {\n    x: x,\n    y: yMax\n  }, {\n    x: xMin,\n    y: yMin\n  }, {\n    x: xMax,\n    y: yMin\n  }, {\n    x: xMin,\n    y: yMax\n  }, {\n    x: xMax,\n    y: yMax\n  }];\n} // 根据 tick 关键点绘制 path\n\n\nfunction getTickPath(points) {\n  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y]];\n}\n/** I 形状柱状图，常用于 error bar chart */\n\n\nregisterShape('interval', 'tick', {\n  getPoints: function (shapePoint) {\n    return getTickPoints(shapePoint);\n  },\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false);\n    var path = this.parsePath(getTickPath(cfg.points));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];\n      },\n      style: {\n        r: 5,\n        stroke: color\n      }\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["isArray","registerShape","getStyle","getTickPoints","pointInfo","y","y0","size","yMin","yMax","_a","xMax","x","xMin","getTickPath","points","getPoints","shapePoint","draw","cfg","container","style","path","parsePath","shape","addShape","attrs","name","getMarker","markerCfg","symbol","r","stroke","color"],"sourceRoot":"","sources":["../../../../src/geometry/shape/interval/tick.ts"],"sourcesContent":["import { isArray } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\n// 根据数据点生成 tick shape 的 6 个关键点\nfunction getTickPoints(pointInfo: ShapePoint): Point[] {\n  const { x, y, y0, size } = pointInfo;\n  let yMin;\n  let yMax;\n  if (isArray(y)) {\n    [yMin, yMax] = y;\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  const xMax = (x as number) + size / 2;\n  const xMin = (x as number) - size / 2;\n\n  // tick 关键点顺序\n  // 4 - 1 - 5\n  //     |\n  // 2 - 0 - 3\n  return [\n    { x: x as number, y: yMin },\n    { x: x as number, y: yMax },\n    { x: xMin, y: yMin },\n    { x: xMax, y: yMin },\n    { x: xMin, y: yMax },\n    { x: xMax, y: yMax },\n  ];\n}\n\n// 根据 tick 关键点绘制 path\nfunction getTickPath(points: Point[]) {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['M', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n  ];\n}\n\n/** I 形状柱状图，常用于 error bar chart */\nregisterShape('interval', 'tick', {\n  getPoints(shapePoint: ShapePoint) {\n    return getTickPoints(shapePoint);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false);\n    const path = this.parsePath(getTickPath(cfg.points as Point[]));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number) => {\n        return [\n          ['M', x - r / 2, y - r],\n          ['L', x + r / 2, y - r],\n          ['M', x, y - r],\n          ['L', x, y + r],\n          ['M', x - r / 2, y + r],\n          ['L', x + r / 2, y + r],\n        ];\n      },\n      style: {\n        r: 5,\n        stroke: color,\n      },\n    };\n  },\n});\n"]},"metadata":{},"sourceType":"module"}