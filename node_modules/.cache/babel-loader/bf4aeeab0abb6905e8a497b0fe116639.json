{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Event } from '../../../chart';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\nvar EVENTS;\n\n(function (EVENTS) {\n  EVENTS[\"BEFORE_HIGHLIGHT\"] = \"element-range-highlight:beforehighlight\";\n  EVENTS[\"AFTER_HIGHLIGHT\"] = \"element-range-highlight:afterhighlight\";\n  EVENTS[\"BEFORE_CLEAR\"] = \"element-range-highlight:beforeclear\";\n  EVENTS[\"AFTER_CLEAR\"] = \"element-range-highlight:afterclear\";\n})(EVENTS || (EVENTS = {}));\n\nexport { EVENTS as ELEMENT_RANGE_HIGHLIGHT_EVENTS };\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\n\nvar ElementRangeHighlight =\n/** @class */\nfunction (_super) {\n  __extends(ElementRangeHighlight, _super);\n\n  function ElementRangeHighlight() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.stateName = 'active';\n    return _this;\n  } // 清理掉所有的 active， unactive 状态\n\n\n  ElementRangeHighlight.prototype.clearViewState = function (view) {\n    clearHighlight(view);\n  };\n  /**\n   * 设置 highlight\n   */\n\n\n  ElementRangeHighlight.prototype.highlight = function () {\n    var _a = this.context,\n        view = _a.view,\n        event = _a.event;\n    var elements = this.getIntersectElements();\n    var payload = {\n      view: view,\n      event: event,\n      highlightElements: elements\n    };\n    view.emit(EVENTS.BEFORE_HIGHLIGHT, Event.fromData(view, EVENTS.BEFORE_HIGHLIGHT, payload));\n    this.setState();\n    view.emit(EVENTS.AFTER_HIGHLIGHT, Event.fromData(view, EVENTS.AFTER_HIGHLIGHT, payload));\n  };\n  /**\n   * @overrider 添加事件\n   */\n\n\n  ElementRangeHighlight.prototype.clear = function () {\n    var view = this.context.view;\n    view.emit(EVENTS.BEFORE_CLEAR, Event.fromData(view, EVENTS.BEFORE_CLEAR, {}));\n\n    _super.prototype.clear.call(this);\n\n    view.emit(EVENTS.AFTER_CLEAR, Event.fromData(view, EVENTS.AFTER_CLEAR, {}));\n  };\n\n  ElementRangeHighlight.prototype.setElementsState = function (elements, enable, allElements) {\n    setHighlightBy(allElements, function (el) {\n      return elements.indexOf(el) >= 0;\n    }, enable);\n  };\n\n  return ElementRangeHighlight;\n}(ElementRangeState);\n\nexport default ElementRangeHighlight;","map":{"version":3,"mappings":";AACA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,kBAA/C;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AAEA,IAAKC,MAAL;;AAAA,WAAKA,MAAL,EAAW;EACTA;EACAA;EACAA;EACAA;AACD,CALD,EAAKA,MAAM,KAANA,MAAM,MAAX;;AAOA,SAASA,MAAM,IAAIC,8BAAnB;AAEA;;;;;AAIA;AAAA;AAAA;EAAoCC;;EAApC;IAAA;;IACYC,kBAAoB,QAApB;;EAgCX,CAjCD,CAGE;;;EACUC,iDAAV,UAAyBC,IAAzB,EAA6B;IAC3BR,cAAc,CAACQ,IAAD,CAAd;EACD,CAFS;EAIV;;;;;EAGOD,4CAAP;IACQ,SAAkB,KAAKE,OAAvB;IAAA,IAAED,IAAI,UAAN;IAAA,IAAQE,KAAK,WAAb;IACN,IAAMC,QAAQ,GAAG,KAAKC,oBAAL,EAAjB;IACA,IAAMC,OAAO,GAAG;MAAEL,IAAI,MAAN;MAAQE,KAAK,OAAb;MAAeI,iBAAiB,EAAEH;IAAlC,CAAhB;IACAH,IAAI,CAACO,IAAL,CAAUZ,MAAM,CAACa,gBAAjB,EAAmCjB,KAAK,CAACkB,QAAN,CAAeT,IAAf,EAAqBL,MAAM,CAACa,gBAA5B,EAA8CH,OAA9C,CAAnC;IACA,KAAKK,QAAL;IACAV,IAAI,CAACO,IAAL,CAAUZ,MAAM,CAACgB,eAAjB,EAAkCpB,KAAK,CAACkB,QAAN,CAAeT,IAAf,EAAqBL,MAAM,CAACgB,eAA5B,EAA6CN,OAA7C,CAAlC;EACD,CAPM;EASP;;;;;EAGON,wCAAP;IACE,IAAMC,IAAI,GAAG,KAAKC,OAAL,CAAaD,IAA1B;IACAA,IAAI,CAACO,IAAL,CAAUZ,MAAM,CAACiB,YAAjB,EAA+BrB,KAAK,CAACkB,QAAN,CAAeT,IAAf,EAAqBL,MAAM,CAACiB,YAA5B,EAA0C,EAA1C,CAA/B;;IACAC,iBAAMC,KAAN,CAAWC,IAAX,CAAW,IAAX;;IACAf,IAAI,CAACO,IAAL,CAAUZ,MAAM,CAACqB,WAAjB,EAA8BzB,KAAK,CAACkB,QAAN,CAAeT,IAAf,EAAqBL,MAAM,CAACqB,WAA5B,EAAyC,EAAzC,CAA9B;EACD,CALM;;EAOGjB,mDAAV,UAA2BI,QAA3B,EAAgDc,MAAhD,EAAiEC,WAAjE,EAAuF;IACrFzB,cAAc,CAACyB,WAAD,EAAc,UAACC,EAAD,EAAG;MAAK,eAAQ,CAACC,OAAT,CAAiBD,EAAjB,KAAwB,CAAxB;IAAyB,CAA/C,EAAiDF,MAAjD,CAAd;EACD,CAFS;;EAGZ;AAAC,CAjCD,CAAoCvB,iBAApC;;AAmCA,eAAeK,qBAAf","names":["Event","clearHighlight","setHighlightBy","ElementRangeState","EVENTS","ELEMENT_RANGE_HIGHLIGHT_EVENTS","__extends","_this","ElementRangeHighlight","view","context","event","elements","getIntersectElements","payload","highlightElements","emit","BEFORE_HIGHLIGHT","fromData","setState","AFTER_HIGHLIGHT","BEFORE_CLEAR","_super","clear","call","AFTER_CLEAR","enable","allElements","el","indexOf"],"sourceRoot":"","sources":["../../../../src/interaction/action/element/range-highlight.ts"],"sourcesContent":["import Element from '../../../geometry/element';\nimport { Event } from '../../../chart';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\n\nenum EVENTS {\n  BEFORE_HIGHLIGHT = 'element-range-highlight:beforehighlight',\n  AFTER_HIGHLIGHT = 'element-range-highlight:afterhighlight',\n  BEFORE_CLEAR = 'element-range-highlight:beforeclear',\n  AFTER_CLEAR = 'element-range-highlight:afterclear',\n}\n\nexport { EVENTS as ELEMENT_RANGE_HIGHLIGHT_EVENTS };\n\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\nclass ElementRangeHighlight extends ElementRangeState {\n  protected stateName: string = 'active';\n\n  // 清理掉所有的 active， unactive 状态\n  protected clearViewState(view) {\n    clearHighlight(view);\n  }\n\n  /**\n   * 设置 highlight\n   */\n  public highlight() {\n    const { view, event } = this.context;\n    const elements = this.getIntersectElements();\n    const payload = { view, event, highlightElements: elements };\n    view.emit(EVENTS.BEFORE_HIGHLIGHT, Event.fromData(view, EVENTS.BEFORE_HIGHLIGHT, payload));\n    this.setState();\n    view.emit(EVENTS.AFTER_HIGHLIGHT, Event.fromData(view, EVENTS.AFTER_HIGHLIGHT, payload));\n  }\n\n  /**\n   * @overrider 添加事件\n   */\n  public clear() {\n    const view = this.context.view;\n    view.emit(EVENTS.BEFORE_CLEAR, Event.fromData(view, EVENTS.BEFORE_CLEAR, {}));\n    super.clear();\n    view.emit(EVENTS.AFTER_CLEAR, Event.fromData(view, EVENTS.AFTER_CLEAR, {}));\n  }\n\n  protected setElementsState(elements: Element[], enable: boolean, allElements: Element[]) {\n    setHighlightBy(allElements, (el) => elements.indexOf(el) >= 0, enable);\n  }\n}\n\nexport default ElementRangeHighlight;\n"]},"metadata":{},"sourceType":"module"}