{"ast":null,"code":"import { __assign, __rest, __spreadArrays } from \"tslib\";\nimport { isFunction, get, uniq } from '@antv/util';\nimport { polygon as polygonAdaptor } from '../../adaptor/geometries';\nimport { interaction as baseInteraction, animation, theme, annotation, scale, pattern, legend } from '../../adaptor/common';\nimport { flow, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { RAW_FIELDS, SUNBURST_ANCESTOR_FIELD, SUNBURST_PATH_FIELD, SUNBURST_Y_FIELD } from './constant';\nimport { transformData } from './utils';\n/**\n * geometry 配置处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var color = options.color,\n      _a = options.colorField,\n      colorField = _a === void 0 ? SUNBURST_ANCESTOR_FIELD : _a,\n      sunburstStyle = options.sunburstStyle,\n      _b = options.rawFields,\n      rawFields = _b === void 0 ? [] : _b;\n  var data = transformData(options);\n  chart.data(data); // 特殊处理下样式，如果没有设置 fillOpacity 的时候，默认根据层级进行填充透明度\n\n  var style;\n\n  if (sunburstStyle) {\n    style = function (datum) {\n      return deepAssign({}, {\n        fillOpacity: Math.pow(0.85, datum.depth)\n      }, isFunction(sunburstStyle) ? sunburstStyle(datum) : sunburstStyle);\n    };\n  } // geometry\n\n\n  polygonAdaptor(deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField,\n      rawFields: uniq(__spreadArrays(RAW_FIELDS, rawFields)),\n      polygon: {\n        color: color,\n        style: style\n      }\n    }\n  }));\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nexport function axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label;\n  var geometry = findGeometry(chart, 'polygon'); // 默认不展示，undefined 也不展示\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var _a = label.fields,\n        fields = _a === void 0 ? ['name'] : _a,\n        callback = label.callback,\n        cfg = __rest(label, [\"fields\", \"callback\"]);\n\n    geometry.label({\n      fields: fields,\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\n\n\nfunction coordinate(params) {\n  var chart = params.chart,\n      options = params.options;\n  var innerRadius = options.innerRadius,\n      radius = options.radius,\n      reflect = options.reflect;\n  var coord = chart.coordinate({\n    type: 'polar',\n    cfg: {\n      innerRadius: innerRadius,\n      radius: radius\n    }\n  });\n\n  if (reflect) {\n    coord.reflect(reflect);\n  }\n\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nexport function meta(params) {\n  var _a;\n\n  var options = params.options;\n  var hierarchyConfig = options.hierarchyConfig,\n      meta = options.meta;\n  return flow(scale({}, (_a = {}, _a[SUNBURST_Y_FIELD] = get(meta, get(hierarchyConfig, ['field'], 'value')), _a)))(params);\n}\n/**\n * tooltip 配置\n * @param params\n */\n\nexport function tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    var tooltipOptions = tooltip; // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign({}, {\n        customItems: function (items) {\n          return items.map(function (item) {\n            var scales = get(chart.getOptions(), 'scales');\n            var pathFormatter = get(scales, [SUNBURST_PATH_FIELD, 'formatter'], function (v) {\n              return v;\n            });\n            var valueFormatter = get(scales, [SUNBURST_Y_FIELD, 'formatter'], function (v) {\n              return v;\n            });\n            return __assign(__assign({}, item), {\n              name: pathFormatter(item.data[SUNBURST_PATH_FIELD]),\n              value: valueFormatter(item.data.value)\n            });\n          });\n        }\n      }, tooltipOptions);\n    }\n\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n\nfunction adaptorInteraction(options) {\n  var drilldown = options.drilldown,\n      _a = options.interactions,\n      interactions = _a === void 0 ? [] : _a;\n\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    return deepAssign({}, options, {\n      interactions: __spreadArrays(interactions, [{\n        type: 'drill-down',\n        cfg: {\n          drillDownConfig: drilldown,\n          transformData: transformData\n        }\n      }])\n    });\n  }\n\n  return options;\n}\n/**\n * 交互配置\n * @param params\n * @returns\n */\n\n\nfunction interaction(params) {\n  var chart = params.chart,\n      options = params.options;\n  var drilldown = options.drilldown;\n  baseInteraction({\n    chart: chart,\n    options: adaptorInteraction(options)\n  }); // 适应下钻交互面包屑\n\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    // 为面包屑留出 25px 的空间\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n\n  return params;\n}\n/**\n * 旭日图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, pattern('sunburstStyle'), geometry, axis, meta, legend, coordinate, tooltip, label, interaction, animation, annotation())(params);\n}","map":{"version":3,"mappings":"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","names":["isFunction","get","uniq","polygon","polygonAdaptor","interaction","baseInteraction","animation","theme","annotation","scale","pattern","legend","flow","findGeometry","transformLabel","deepAssign","getAdjustAppendPadding","RAW_FIELDS","SUNBURST_ANCESTOR_FIELD","SUNBURST_PATH_FIELD","SUNBURST_Y_FIELD","transformData","geometry","params","options","_a","colorField","sunburstStyle","_b","rawFields","data","chart","style","datum","fillOpacity","Math","depth","xField","yField","seriesField","color","axis","label","callback","cfg","fields","coordinate","radius","reflect","coord","type","innerRadius","meta","hierarchyConfig","tooltip","tooltipOptions","customItems","items","map","item","scales","getOptions","pathFormatter","v","valueFormatter","name","value","adaptorInteraction","interactions","drilldown","enabled","drillDownConfig","appendPadding","adaptor"],"sourceRoot":"","sources":["../../../src/plots/sunburst/adaptor.ts"],"sourcesContent":["import { isFunction, get, uniq } from '@antv/util';\nimport { Types } from '@antv/g2';\nimport { Params } from '../../core/adaptor';\nimport { polygon as polygonAdaptor } from '../../adaptor/geometries';\nimport {\n  interaction as baseInteraction,\n  animation,\n  theme,\n  annotation,\n  scale,\n  pattern,\n  legend,\n} from '../../adaptor/common';\nimport { flow, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { Datum } from '../../types';\nimport { RAW_FIELDS, SUNBURST_ANCESTOR_FIELD, SUNBURST_PATH_FIELD, SUNBURST_Y_FIELD } from './constant';\nimport { transformData } from './utils';\nimport { SunburstOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { color, colorField = SUNBURST_ANCESTOR_FIELD, sunburstStyle, rawFields = [] } = options;\n  const data = transformData(options);\n  chart.data(data);\n\n  // 特殊处理下样式，如果没有设置 fillOpacity 的时候，默认根据层级进行填充透明度\n  let style;\n  if (sunburstStyle) {\n    style = (datum: Datum) => {\n      return deepAssign(\n        {},\n        {\n          fillOpacity: 0.85 ** datum.depth,\n        },\n        isFunction(sunburstStyle) ? sunburstStyle(datum) : sunburstStyle\n      );\n    };\n  }\n\n  // geometry\n  polygonAdaptor(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        rawFields: uniq([...RAW_FIELDS, ...rawFields]),\n        polygon: {\n          color,\n          style,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { label } = options;\n\n  const geometry = findGeometry(chart, 'polygon');\n\n  // 默认不展示，undefined 也不展示\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { fields = ['name'], callback, ...cfg } = label;\n    geometry.label({\n      fields,\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { innerRadius, radius, reflect } = options;\n\n  const coord = chart.coordinate({\n    type: 'polar',\n    cfg: {\n      innerRadius,\n      radius,\n    },\n  });\n  if (reflect) {\n    coord.reflect(reflect);\n  }\n\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { options } = params;\n  const { hierarchyConfig, meta } = options;\n\n  return flow(\n    scale(\n      {},\n      {\n        [SUNBURST_Y_FIELD]: get(meta, get(hierarchyConfig, ['field'], 'value')),\n      }\n    )\n  )(params);\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    let tooltipOptions = tooltip;\n    // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign(\n        {},\n        {\n          customItems: (items: Types.TooltipItem[]) =>\n            items.map((item) => {\n              const scales = get(chart.getOptions(), 'scales');\n              const pathFormatter = get(scales, [SUNBURST_PATH_FIELD, 'formatter'], (v) => v);\n              const valueFormatter = get(scales, [SUNBURST_Y_FIELD, 'formatter'], (v) => v);\n              return {\n                ...item,\n                name: pathFormatter(item.data[SUNBURST_PATH_FIELD]),\n                value: valueFormatter(item.data.value),\n              };\n            }),\n        },\n        tooltipOptions\n      );\n    }\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n\nfunction adaptorInteraction(options: SunburstOptions): SunburstOptions {\n  const { drilldown, interactions = [] } = options;\n\n  if (drilldown?.enabled) {\n    return deepAssign({}, options, {\n      interactions: [\n        ...interactions,\n        {\n          type: 'drill-down',\n          cfg: { drillDownConfig: drilldown, transformData },\n        },\n      ],\n    });\n  }\n  return options;\n}\n\n/**\n * 交互配置\n * @param params\n * @returns\n */\nfunction interaction(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n\n  const { drilldown } = options;\n\n  baseInteraction({\n    chart,\n    options: adaptorInteraction(options),\n  });\n\n  // 适应下钻交互面包屑\n  if (drilldown?.enabled) {\n    // 为面包屑留出 25px 的空间\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n\n  return params;\n}\n\n/**\n * 旭日图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<SunburstOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    theme,\n    pattern('sunburstStyle'),\n    geometry,\n    axis,\n    meta,\n    legend,\n    coordinate,\n    tooltip,\n    label,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}