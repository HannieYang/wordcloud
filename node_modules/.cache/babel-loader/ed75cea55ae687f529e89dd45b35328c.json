{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { isNumber } from '@antv/util';\nimport { flow, deepAssign, pick } from '../../utils';\nimport { point } from '../../adaptor/geometries';\nimport { brushInteraction } from '../../adaptor/brush';\nimport { interaction, animation, theme, scale, annotation, slider, scrollbar } from '../../adaptor/common';\nimport { findGeometry, transformLabel } from '../../utils';\nimport { getQuadrantDefaultConfig, getPath, getMeta } from './util';\n/**\n * 散点图默认美观\n * ① data.length === 1 ② 所有数据 y 值相等 ③ 所有数据 x 值相等\n * @param params\n * @returns params\n */\n\nexport function transformOptions(options) {\n  var _a = options.data,\n      data = _a === void 0 ? [] : _a,\n      xField = options.xField,\n      yField = options.yField;\n\n  if (data.length) {\n    // x y 字段知否只有一个值，如果只有一个值，则进行优化\n    var isOneX = true;\n    var isOneY = true;\n    var prev = data[0];\n    var curr = void 0;\n\n    for (var i = 1; i < data.length; i++) {\n      curr = data[i];\n\n      if (prev[xField] !== curr[xField]) {\n        isOneX = false;\n      }\n\n      if (prev[yField] !== curr[yField]) {\n        isOneY = false;\n      } // 如果都不是 oneValue，那么可提前跳出循环\n\n\n      if (!isOneX && !isOneY) {\n        break;\n      }\n\n      prev = curr;\n    }\n\n    var keys = [];\n    isOneX && keys.push(xField);\n    isOneY && keys.push(yField);\n    var meta_1 = pick(getMeta(options), keys);\n    return deepAssign({}, options, {\n      meta: meta_1\n    });\n  }\n\n  return options;\n}\n/**\n * 字段\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      type = options.type,\n      color = options.color,\n      shape = options.shape,\n      pointStyle = options.pointStyle,\n      shapeField = options.shapeField,\n      colorField = options.colorField,\n      xField = options.xField,\n      yField = options.yField,\n      sizeField = options.sizeField;\n  var size = options.size;\n  var tooltip = options.tooltip;\n\n  if (sizeField) {\n    if (!size) {\n      size = [2, 8];\n    }\n\n    if (isNumber(size)) {\n      size = [size, size];\n    }\n  }\n\n  if (tooltip && !tooltip.fields) {\n    tooltip = __assign(__assign({}, tooltip), {\n      fields: [xField, yField, colorField, sizeField, shapeField]\n    });\n  } // 数据\n\n\n  chart.data(data); // geometry\n\n  point(deepAssign({}, params, {\n    options: {\n      seriesField: colorField,\n      point: {\n        color: color,\n        shape: shape,\n        size: size,\n        style: pointStyle\n      },\n      tooltip: tooltip\n    }\n  }));\n  var geometry = findGeometry(chart, 'point'); // 数据调整\n\n  if (type) {\n    geometry.adjust(type);\n  }\n\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nexport function meta(params) {\n  var _a;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  var newOptions = transformOptions(options);\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(deepAssign({}, params, {\n    options: newOptions\n  }));\n}\n/**\n * axis 配置\n * @param params\n */\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  chart.axis(xField, xAxis);\n  chart.axis(yField, yAxis);\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nfunction legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      colorField = options.colorField,\n      shapeField = options.shapeField,\n      sizeField = options.sizeField,\n      shapeLegend = options.shapeLegend,\n      sizeLegend = options.sizeLegend;\n  /** legend 不为 false, 则展示图例, 优先展示 color 分类图例 */\n\n  var showLegend = legend !== false;\n\n  if (colorField) {\n    chart.legend(colorField, showLegend ? legend : false);\n  } // 优先取 shapeLegend, 否则取 legend\n\n\n  if (shapeField) {\n    if (shapeLegend) {\n      chart.legend(shapeField, shapeLegend);\n    } else {\n      chart.legend(shapeField, shapeLegend === false ? false : legend);\n    }\n  }\n\n  if (sizeField) {\n    chart.legend(sizeField, sizeLegend ? sizeLegend : false);\n  }\n  /** 默认不展示 shape 图例，当 shapeLegend 为 undefined 也不展示图例 */\n\n  /** 默认没有 sizeField，则隐藏连续图例 */\n\n\n  if (!showLegend && !shapeLegend && !sizeLegend) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField;\n  var scatterGeometry = findGeometry(chart, 'point'); // label 为 false, 空 则不显示 label\n\n  if (!label) {\n    scatterGeometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    scatterGeometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n\n  return params;\n}\n/**\n * annotation 配置\n * - 特殊 annotation: quadrant(四象限)\n * @param params\n */\n\n\nfunction scatterAnnotation(params) {\n  var options = params.options;\n  var quadrant = options.quadrant;\n  var annotationOptions = [];\n\n  if (quadrant) {\n    var _a = quadrant.xBaseline,\n        xBaseline = _a === void 0 ? 0 : _a,\n        _b = quadrant.yBaseline,\n        yBaseline = _b === void 0 ? 0 : _b,\n        labels_1 = quadrant.labels,\n        regionStyle_1 = quadrant.regionStyle,\n        lineStyle = quadrant.lineStyle;\n    var defaultConfig_1 = getQuadrantDefaultConfig(xBaseline, yBaseline); // 仅支持四象限\n\n    var quadrants = new Array(4).join(',').split(',');\n    quadrants.forEach(function (_, index) {\n      annotationOptions.push(__assign(__assign({\n        type: 'region',\n        top: false\n      }, defaultConfig_1.regionStyle[index].position), {\n        style: deepAssign({}, defaultConfig_1.regionStyle[index].style, regionStyle_1 === null || regionStyle_1 === void 0 ? void 0 : regionStyle_1[index])\n      }), __assign({\n        type: 'text',\n        top: true\n      }, deepAssign({}, defaultConfig_1.labelStyle[index], labels_1 === null || labels_1 === void 0 ? void 0 : labels_1[index])));\n    }); // 生成坐标轴\n\n    annotationOptions.push({\n      type: 'line',\n      top: false,\n      start: ['min', yBaseline],\n      end: ['max', yBaseline],\n      style: deepAssign({}, defaultConfig_1.lineStyle, lineStyle)\n    }, {\n      type: 'line',\n      top: false,\n      start: [xBaseline, 'min'],\n      end: [xBaseline, 'max'],\n      style: deepAssign({}, defaultConfig_1.lineStyle, lineStyle)\n    });\n  }\n\n  return flow(annotation(annotationOptions))(params);\n} // 趋势线\n\n\nfunction regressionLine(params) {\n  var options = params.options,\n      chart = params.chart;\n  var regressionLine = options.regressionLine;\n\n  if (regressionLine) {\n    var style_1 = regressionLine.style,\n        _a = regressionLine.top,\n        top_1 = _a === void 0 ? false : _a;\n    var defaultStyle_1 = {\n      stroke: '#9ba29a',\n      lineWidth: 2,\n      opacity: 0.5\n    };\n    chart.annotation().shape({\n      top: top_1,\n      render: function (container, view) {\n        var group = container.addGroup({\n          id: chart.id + \"-regression-line\",\n          name: 'regression-line-group'\n        });\n        var path = getPath({\n          view: view,\n          options: options\n        });\n        group.addShape('path', {\n          name: 'regression-line',\n          attrs: __assign(__assign({\n            path: path\n          }, defaultStyle_1), style_1)\n        });\n      }\n    });\n  }\n\n  return params;\n}\n/**\n * tooltip 配置\n * @param params\n */\n\n\nexport function tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip;\n\n  if (tooltip) {\n    chart.tooltip(tooltip);\n  } else if (tooltip === false) {\n    chart.tooltip(false);\n  }\n\n  return params;\n}\n/**\n * 散点图适配器\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, axis, legend, tooltip, label, // 需要在 interaction 前面\n  brushInteraction, slider, scrollbar, interaction, scatterAnnotation, animation, theme, regressionLine)(params);\n}","map":{"version":3,"mappings":"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","names":["isNumber","flow","deepAssign","pick","point","brushInteraction","interaction","animation","theme","scale","annotation","slider","scrollbar","findGeometry","transformLabel","getQuadrantDefaultConfig","getPath","getMeta","transformOptions","options","_a","xField","yField","data","length","isOneX","isOneY","prev","curr","i","keys","push","meta_1","meta","geometry","params","type","color","shape","pointStyle","shapeField","colorField","sizeField","size","tooltip","fields","chart","seriesField","style","adjust","yAxis","newOptions","xAxis","axis","legend","shapeLegend","sizeLegend","showLegend","label","scatterGeometry","cfg","callback","scatterAnnotation","annotationOptions","quadrant","_b","yBaseline","labels_1","regionStyle_1","lineStyle","defaultConfig_1","xBaseline","quadrants","Array","join","split","forEach","_","index","__assign","top","regionStyle","position","labelStyle","start","end","regressionLine","top_1","defaultStyle_1","stroke","lineWidth","opacity","render","container","view","group","addGroup","id","name","path","addShape","attrs","style_1","adaptor"],"sourceRoot":"","sources":["../../../src/plots/scatter/adaptor.ts"],"sourcesContent":["import { isNumber } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { flow, deepAssign, pick } from '../../utils';\nimport { point } from '../../adaptor/geometries';\nimport { brushInteraction } from '../../adaptor/brush';\nimport { interaction, animation, theme, scale, annotation, slider, scrollbar } from '../../adaptor/common';\nimport { findGeometry, transformLabel } from '../../utils';\nimport { getQuadrantDefaultConfig, getPath, getMeta } from './util';\nimport { ScatterOptions } from './types';\n\n/**\n * 散点图默认美观\n * ① data.length === 1 ② 所有数据 y 值相等 ③ 所有数据 x 值相等\n * @param params\n * @returns params\n */\nexport function transformOptions(options: ScatterOptions): ScatterOptions {\n  const { data = [], xField, yField } = options;\n\n  if (data.length) {\n    // x y 字段知否只有一个值，如果只有一个值，则进行优化\n    let isOneX = true;\n    let isOneY = true;\n\n    let prev = data[0];\n    let curr;\n\n    for (let i = 1; i < data.length; i++) {\n      curr = data[i];\n\n      if (prev[xField] !== curr[xField]) {\n        isOneX = false;\n      }\n\n      if (prev[yField] !== curr[yField]) {\n        isOneY = false;\n      }\n\n      // 如果都不是 oneValue，那么可提前跳出循环\n      if (!isOneX && !isOneY) {\n        break;\n      }\n\n      prev = curr;\n    }\n\n    const keys = [];\n    isOneX && keys.push(xField);\n    isOneY && keys.push(yField);\n\n    const meta = pick(getMeta(options), keys);\n\n    return deepAssign({}, options, { meta });\n  }\n\n  return options;\n}\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<ScatterOptions>): Params<ScatterOptions> {\n  const { chart, options } = params;\n  const { data, type, color, shape, pointStyle, shapeField, colorField, xField, yField, sizeField } = options;\n  let { size } = options;\n\n  let { tooltip } = options;\n\n  if (sizeField) {\n    if (!size) {\n      size = [2, 8];\n    }\n    if (isNumber(size)) {\n      size = [size, size];\n    }\n  }\n\n  if (tooltip && !tooltip.fields) {\n    tooltip = {\n      ...tooltip,\n      fields: [xField, yField, colorField, sizeField, shapeField],\n    };\n  }\n  // 数据\n  chart.data(data);\n\n  // geometry\n  point(\n    deepAssign({}, params, {\n      options: {\n        seriesField: colorField,\n        point: {\n          color,\n          shape,\n          size,\n          style: pointStyle,\n        },\n        tooltip,\n      },\n    })\n  );\n\n  const geometry = findGeometry(chart, 'point');\n\n  // 数据调整\n  if (type) {\n    geometry.adjust(type);\n  }\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<ScatterOptions>): Params<ScatterOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  const newOptions = transformOptions(options);\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(deepAssign({}, params, { options: newOptions }));\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<ScatterOptions>): Params<ScatterOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  chart.axis(xField, xAxis);\n  chart.axis(yField, yAxis);\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nfunction legend(params: Params<ScatterOptions>): Params<ScatterOptions> {\n  const { chart, options } = params;\n  const { legend, colorField, shapeField, sizeField, shapeLegend, sizeLegend } = options;\n\n  /** legend 不为 false, 则展示图例, 优先展示 color 分类图例 */\n  const showLegend = legend !== false;\n\n  if (colorField) {\n    chart.legend(colorField, showLegend ? legend : false);\n  }\n\n  // 优先取 shapeLegend, 否则取 legend\n  if (shapeField) {\n    if (shapeLegend) {\n      chart.legend(shapeField, shapeLegend);\n    } else {\n      chart.legend(shapeField, shapeLegend === false ? false : legend);\n    }\n  }\n\n  if (sizeField) {\n    chart.legend(sizeField, sizeLegend ? sizeLegend : false);\n  }\n\n  /** 默认不展示 shape 图例，当 shapeLegend 为 undefined 也不展示图例 */\n  /** 默认没有 sizeField，则隐藏连续图例 */\n  if (!showLegend && !shapeLegend && !sizeLegend) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<ScatterOptions>): Params<ScatterOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const scatterGeometry = findGeometry(chart, 'point');\n\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    scatterGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    scatterGeometry.label({\n      fields: [yField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * annotation 配置\n * - 特殊 annotation: quadrant(四象限)\n * @param params\n */\nfunction scatterAnnotation(params: Params<ScatterOptions>): Params<ScatterOptions> {\n  const { options } = params;\n  const { quadrant } = options;\n\n  const annotationOptions = [];\n\n  if (quadrant) {\n    const { xBaseline = 0, yBaseline = 0, labels, regionStyle, lineStyle } = quadrant;\n    const defaultConfig = getQuadrantDefaultConfig(xBaseline, yBaseline);\n    // 仅支持四象限\n    const quadrants = new Array(4).join(',').split(',');\n    quadrants.forEach((_: string, index: number) => {\n      annotationOptions.push(\n        {\n          type: 'region',\n          top: false,\n          ...defaultConfig.regionStyle[index].position,\n          style: deepAssign({}, defaultConfig.regionStyle[index].style, regionStyle?.[index]),\n        },\n        {\n          type: 'text',\n          top: true,\n          ...deepAssign({}, defaultConfig.labelStyle[index], labels?.[index]),\n        }\n      );\n    });\n    // 生成坐标轴\n    annotationOptions.push(\n      {\n        type: 'line',\n        top: false,\n        start: ['min', yBaseline],\n        end: ['max', yBaseline],\n        style: deepAssign({}, defaultConfig.lineStyle, lineStyle),\n      },\n      {\n        type: 'line',\n        top: false,\n        start: [xBaseline, 'min'],\n        end: [xBaseline, 'max'],\n        style: deepAssign({}, defaultConfig.lineStyle, lineStyle),\n      }\n    );\n  }\n\n  return flow(annotation(annotationOptions))(params);\n}\n\n// 趋势线\nfunction regressionLine(params: Params<ScatterOptions>): Params<ScatterOptions> {\n  const { options, chart } = params;\n  const { regressionLine } = options;\n  if (regressionLine) {\n    const { style, top = false } = regressionLine;\n    const defaultStyle = {\n      stroke: '#9ba29a',\n      lineWidth: 2,\n      opacity: 0.5,\n    };\n    chart.annotation().shape({\n      top,\n      render: (container, view) => {\n        const group = container.addGroup({\n          id: `${chart.id}-regression-line`,\n          name: 'regression-line-group',\n        });\n        const path = getPath({\n          view,\n          options,\n        });\n        group.addShape('path', {\n          name: 'regression-line',\n          attrs: {\n            path,\n            ...defaultStyle,\n            ...style,\n          },\n        });\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<ScatterOptions>): Params<ScatterOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n\n  if (tooltip) {\n    chart.tooltip(tooltip);\n  } else if (tooltip === false) {\n    chart.tooltip(false);\n  }\n\n  return params;\n}\n\n/**\n * 散点图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<ScatterOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    geometry,\n    meta,\n    axis,\n    legend,\n    tooltip,\n    label,\n    // 需要在 interaction 前面\n    brushInteraction,\n    slider,\n    scrollbar,\n    interaction,\n    scatterAnnotation,\n    animation,\n    theme,\n    regressionLine\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}