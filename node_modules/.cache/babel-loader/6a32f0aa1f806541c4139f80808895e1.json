{"ast":null,"code":"import { getMaxLabelWidth } from '../../util/label';\nimport { getAngleByMatrix } from '../../util/matrix';\nimport { near } from '../../util/util'; // 文本是否旋转\n\nfunction isRotate(label) {\n  var matrix = label.attr('matrix');\n  return matrix && matrix[0] !== 1; // 仅在这个场景下判定\n}\n\nfunction getRotateAngle(label) {\n  var angle = isRotate(label) ? getAngleByMatrix(label.attr('matrix')) : 0;\n  return angle % 360;\n} // autohide 不再考虑超出限制\n// function isOutLimit(isVertical: boolean, label: IElement, limitLength: number) {\n//   if (!limitLength) {\n//     // 如果没限制 limitLength 则直接返回 false\n//     return false;\n//   }\n//   const canvasBBox = label.getCanvasBBox();\n//   let isOut = false;\n//   if (isVertical) {\n//     isOut = canvasBBox.width > limitLength;\n//   } else {\n//     isOut = canvasBBox.height > limitLength;\n//   }\n//   return isOut;\n// }\n// 是否重叠\n\n\nfunction isOverlap(isVertical, first, second, minGap) {\n  var overlap = false;\n  var angle = getRotateAngle(first);\n  var distance = isVertical ? Math.abs(second.attr('y') - first.attr('y')) : Math.abs(second.attr('x') - first.attr('x'));\n  var prevBBox = (isVertical ? second.attr('y') > first.attr('y') : second.attr('x') > first.attr('x')) ? first.getBBox() : second.getBBox();\n\n  if (isVertical) {\n    var ratio = Math.abs(Math.cos(angle));\n\n    if (near(ratio, 0, Math.PI / 180)) {\n      overlap = prevBBox.width + minGap > distance;\n    } else {\n      overlap = prevBBox.height / ratio + minGap > distance;\n    }\n  } else {\n    var ratio = Math.abs(Math.sin(angle));\n\n    if (near(ratio, 0, Math.PI / 180)) {\n      overlap = prevBBox.width + minGap > distance;\n    } else {\n      overlap = prevBBox.height / ratio + minGap > distance;\n    }\n  }\n\n  return overlap;\n} // 保留第一个或者最后一个\n\n\nfunction reserveOne(isVertical, labelsGroup, reversed, autoHideCfg) {\n  var minGap = (autoHideCfg === null || autoHideCfg === void 0 ? void 0 : autoHideCfg.minGap) || 0;\n  var labels = labelsGroup.getChildren().slice() // 复制数组\n  .filter(function (item) {\n    return item.get('visible');\n  });\n\n  if (!labels.length) {\n    return false;\n  }\n\n  var hasHide = false;\n\n  if (reversed) {\n    // 翻转\n    labels.reverse();\n  }\n\n  var count = labels.length;\n  var first = labels[0];\n  var prev = first;\n\n  for (var i = 1; i < count; i++) {\n    var label = labels[i];\n    var curBBox = label.getBBox(); // 不再考虑超出限制，而仅仅根据是否重叠进行隐藏 isOutLimit(isVertical, label, limitLength) ||\n\n    var isHide = isOverlap(isVertical, prev, label, minGap);\n\n    if (isHide) {\n      label.hide();\n      hasHide = true;\n    } else {\n      prev = label;\n    }\n  }\n\n  return hasHide;\n} // 均匀抽样隐藏标签，注意这里假设 label/tick 是均匀的\n\n\nfunction parityHide(isVertical, labelsGroup, autoHideCfg) {\n  var minGap = (autoHideCfg === null || autoHideCfg === void 0 ? void 0 : autoHideCfg.minGap) || 0;\n  var labels = labelsGroup.getChildren().slice(); // 复制数组\n\n  if (labels.length < 2) {\n    // 如果数量小于 2 则直接返回，等于 2 时可能也会重合\n    return false;\n  }\n\n  var hasHide = false;\n  var first = labels[0];\n  var firstBBox = first.getBBox();\n  var second = labels[1];\n  var count = labels.length;\n  var angle = getRotateAngle(first);\n  var distance = isVertical ? Math.abs(second.attr('y') - first.attr('y')) : Math.abs(second.attr('x') - first.attr('x'));\n  var interval = 0; // 不重叠的坐标文本间距个数\n\n  if (isVertical) {\n    // 垂直的坐标轴计算垂直方向的间距\n    var ratio = Math.abs(Math.cos(angle));\n\n    if (near(ratio, 0, Math.PI / 180)) {\n      var maxWidth = getMaxLabelWidth(labels);\n      interval = (maxWidth + minGap) / distance;\n    } else {\n      interval = (firstBBox.height / ratio + minGap) / distance;\n    }\n  } else {\n    // 水平坐标轴\n    var ratio = Math.abs(Math.sin(angle));\n\n    if (near(ratio, 0, Math.PI / 180)) {\n      var maxWidth = getMaxLabelWidth(labels);\n      interval = (maxWidth + minGap) / distance;\n    } else {\n      interval = (firstBBox.height / ratio + minGap) / distance;\n    }\n  } // interval > 1 时需要对 label 进行隐藏\n\n\n  if (interval > 1) {\n    interval = Math.ceil(interval);\n\n    for (var i = 0; i < count; i++) {\n      if (i % interval !== 0) {\n        // 仅保留被整除的 label\n        labels[i].hide();\n        hasHide = true;\n      }\n    }\n  }\n\n  return hasHide;\n}\n\nexport function getDefault() {\n  return equidistance;\n}\n/**\n * 保证首个 label 可见，即使超过 limitLength 也不隐藏\n * @param {boolean} isVertical  是否垂直\n * @param {IGroup}  labelsGroup label 的分组\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\n\nexport function reserveFirst(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  return reserveOne(isVertical, labelsGroup, false, autoHideCfg);\n}\n/**\n * 保证最后一个 label 可见，即使超过 limitLength 也不隐藏\n * @param {boolean} isVertical  是否垂直\n * @param {IGroup}  labelsGroup label 的分组\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\n\nexport function reserveLast(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  return reserveOne(isVertical, labelsGroup, true, autoHideCfg);\n}\n/**\n * 保证第一个最后一个 label 可见，即使超过 limitLength 也不隐藏\n * @param {boolean} isVertical  是否垂直\n * @param {IGroup}  labelsGroup label 的分组\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\n\nexport function reserveBoth(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  var minGap = (autoHideCfg === null || autoHideCfg === void 0 ? void 0 : autoHideCfg.minGap) || 0;\n  var labels = labelsGroup.getChildren().slice(); // 复制数组\n\n  if (labels.length <= 2) {\n    // 如果数量小于或等于 2 则直接返回\n    return false;\n  }\n\n  var hasHide = false;\n  var count = labels.length;\n  var first = labels[0];\n  var last = labels[count - 1];\n  var preLabel = first; // 按照先保存第一个的逻辑循环一遍，最后一个不参与循环\n\n  for (var i = 1; i < count - 1; i++) {\n    var label = labels[i];\n    var curBBox = label.getBBox(); // 废弃 isOutLimit(isVertical, label, limitLength) ||\n\n    var isHide = isOverlap(isVertical, preLabel, label, minGap);\n\n    if (isHide) {\n      label.hide();\n      hasHide = true;\n    } else {\n      preLabel = label;\n    }\n  }\n\n  var overlap = isOverlap(isVertical, preLabel, last, minGap);\n\n  if (overlap) {\n    // 发生冲突，则隐藏前一个保留后一个\n    preLabel.hide();\n    hasHide = true;\n  }\n\n  return hasHide;\n}\n/**\n * 保证 label 均匀显示 和 不出现重叠，主要解决文本层叠的问题，对于 limitLength 不处理\n * @param {boolean} isVertical  是否垂直\n * @param {IGroup}  labelsGroup label 的分组\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\n\nexport function equidistance(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  var hasHide = parityHide(isVertical, labelsGroup, autoHideCfg); // 处理  timeCat 类型的 tick，在均匀的基础上，再次检查出现重叠的进行隐藏\n\n  if (reserveOne(isVertical, labelsGroup, false)) {\n    hasHide = true;\n  }\n\n  return hasHide;\n}\n/**\n * 同 equidistance， 首先会保证 labels 均匀显示，然后会保留首尾\n * @param isVertical\n * @param labelsGroup\n * @param {number} limitLength 另一个方向的长度限制，autoHide 不关心\n * @param {AxisLabelAutoHideCfg} autoHideCfg autoHide overlap 的可选配置参数\n */\n\nexport function equidistanceWithReverseBoth(isVertical, labelsGroup, limitLength, autoHideCfg) {\n  var labels = labelsGroup.getChildren().slice(); // 复制数组\n\n  var hasHide = parityHide(isVertical, labelsGroup, autoHideCfg);\n\n  if (labels.length > 2) {\n    var first = labels[0];\n    var last = labels[labels.length - 1]; // 如果第一个被隐藏了\n\n    if (!first.get('visible')) {\n      first.show();\n\n      if (reserveOne(isVertical, labelsGroup, false, autoHideCfg)) {\n        hasHide = true;\n      }\n    } // 如果最后一个被隐藏了\n\n\n    if (!last.get('visible')) {\n      last.show();\n\n      if (reserveOne(isVertical, labelsGroup, true, autoHideCfg)) {\n        hasHide = true;\n      }\n    }\n  }\n\n  return hasHide;\n}","map":{"version":3,"mappings":"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","names":["getMaxLabelWidth","getAngleByMatrix","near","isRotate","label","matrix","attr","getRotateAngle","angle","isOverlap","isVertical","first","second","minGap","overlap","distance","Math","abs","prevBBox","getBBox","ratio","cos","PI","width","height","sin","reserveOne","labelsGroup","reversed","autoHideCfg","labels","getChildren","slice","filter","item","get","length","hasHide","reverse","count","prev","i","curBBox","isHide","hide","parityHide","firstBBox","interval","maxWidth","ceil","getDefault","equidistance","reserveFirst","limitLength","reserveLast","reserveBoth","last","preLabel","equidistanceWithReverseBoth","show"],"sourceRoot":"","sources":["../../../src/axis/overlap/auto-hide.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}