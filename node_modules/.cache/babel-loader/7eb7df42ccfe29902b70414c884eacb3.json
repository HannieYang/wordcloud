{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport { transformData } from './utils';\n/**\n * 瀑布图\n */\n\nvar Waterfall =\n/** @class */\nfunction (_super) {\n  __extends(Waterfall, _super);\n\n  function Waterfall() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'waterfall';\n    return _this;\n  }\n  /**\n   * 获取 瀑布图 默认配置项\n   * 供外部使用\n   */\n\n\n  Waterfall.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  Waterfall.prototype.changeData = function (data) {\n    var _a = this.options,\n        xField = _a.xField,\n        yField = _a.yField,\n        total = _a.total;\n    this.updateOption({\n      data: data\n    });\n    this.chart.changeData(transformData(data, xField, yField, total));\n  };\n  /**\n   * 获取 瀑布图 的适配器\n   */\n\n\n  Waterfall.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 获取 瀑布图 的默认配置\n   */\n\n\n  Waterfall.prototype.getDefaultOptions = function () {\n    return Waterfall.getDefaultOptions();\n  };\n\n  return Waterfall;\n}(Plot);\n\nexport { Waterfall };","map":{"version":3,"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;AAGA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,aAAT,QAA8B,SAA9B;AAIA;;;;AAGA;AAAA;AAAA;EAA+BC;;EAA/B;IAAA;IASE;;;IACgBC,aAAe,WAAf;;EAyBjB;EAlCC;;;;;;EAIOC,8BAAP;IACE,OAAOJ,eAAP;EACD,CAFM;EAOP;;;;;;EAIOI,iCAAP,UAAkBC,IAAlB,EAAsB;IACd,SAA4B,KAAKC,OAAjC;IAAA,IAAEC,MAAM,YAAR;IAAA,IAAUC,MAAM,YAAhB;IAAA,IAAkBC,KAAK,WAAvB;IACN,KAAKC,YAAL,CAAkB;MAAEL,IAAI;IAAN,CAAlB;IACA,KAAKM,KAAL,CAAWC,UAAX,CAAsBX,aAAa,CAACI,IAAD,EAAOE,MAAP,EAAeC,MAAf,EAAuBC,KAAvB,CAAnC;EACD,CAJM;EAMP;;;;;EAGUL,uCAAV;IACE,OAAOL,OAAP;EACD,CAFS;EAIV;;;;;EAGUK,wCAAV;IACE,OAAOA,SAAS,CAACS,iBAAV,EAAP;EACD,CAFS;;EAGZ;AAAC,CAnCD,CAA+Bf,IAA/B","names":["Plot","adaptor","DEFAULT_OPTIONS","transformData","__extends","_this","Waterfall","data","options","xField","yField","total","updateOption","chart","changeData","getDefaultOptions"],"sourceRoot":"","sources":["../../../src/plots/waterfall/index.ts"],"sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { WaterfallOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport { transformData } from './utils';\n\nexport type { WaterfallOptions };\n\n/**\n * 瀑布图\n */\nexport class Waterfall extends Plot<WaterfallOptions> {\n  /**\n   * 获取 瀑布图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<WaterfallOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public readonly type: string = 'waterfall';\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data) {\n    const { xField, yField, total } = this.options;\n    this.updateOption({ data });\n    this.chart.changeData(transformData(data, xField, yField, total));\n  }\n\n  /**\n   * 获取 瀑布图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<WaterfallOptions> {\n    return adaptor;\n  }\n\n  /**\n   * 获取 瀑布图 的默认配置\n   */\n  protected getDefaultOptions(): Partial<WaterfallOptions> {\n    return Waterfall.getDefaultOptions();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}