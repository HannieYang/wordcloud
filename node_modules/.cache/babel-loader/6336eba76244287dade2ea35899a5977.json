{"ast":null,"code":"import { __assign, __spreadArrays } from \"tslib\";\nimport { get } from '@antv/util';\nimport { point } from '../../adaptor/geometries/point';\nimport { interaction as baseInteraction, animation, theme, legend, annotation, scale, pattern } from '../../adaptor/common';\nimport { flow, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding, resolveAllPadding } from '../../utils/padding';\nimport { transformData, resolvePaddingForCircle } from './utils';\nimport { RAW_FIELDS } from './constant';\n/**\n * 获取默认 option\n * @param params\n */\n\nfunction defaultOptions(params) {\n  var chart = params.chart;\n  var diameter = Math.min(chart.viewBBox.width, chart.viewBBox.height);\n  return deepAssign({\n    options: {\n      size: function (_a) {\n        var r = _a.r;\n        return r * diameter;\n      }\n    }\n  }, params);\n}\n/**\n * padding 配置\n * @param params\n */\n\n\nfunction padding(params) {\n  var options = params.options,\n      chart = params.chart; // 通过改变 padding，修改 coordinate 的绘制区域\n\n  var containerSize = chart.viewBBox;\n  var padding = options.padding,\n      appendPadding = options.appendPadding,\n      drilldown = options.drilldown;\n  var tempAppendPadding = appendPadding;\n\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    var appendPaddingByDrilldown = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n    tempAppendPadding = resolveAllPadding([appendPaddingByDrilldown, appendPadding]);\n  }\n\n  var finalPadding = resolvePaddingForCircle(padding, tempAppendPadding, containerSize).finalPadding;\n  chart.padding = finalPadding;\n  chart.appendPadding = 0;\n  return params;\n}\n/**\n * 字段\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var padding = chart.padding,\n      appendPadding = chart.appendPadding;\n  var color = options.color,\n      colorField = options.colorField,\n      pointStyle = options.pointStyle,\n      hierarchyConfig = options.hierarchyConfig,\n      sizeField = options.sizeField,\n      _a = options.rawFields,\n      rawFields = _a === void 0 ? [] : _a,\n      drilldown = options.drilldown;\n  var data = transformData({\n    data: options.data,\n    hierarchyConfig: hierarchyConfig,\n    enableDrillDown: drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled,\n    rawFields: rawFields\n  });\n  chart.data(data);\n  var containerSize = chart.viewBBox;\n  var finalSize = resolvePaddingForCircle(padding, appendPadding, containerSize).finalSize; // 有sizeField的时候，例如 value ，可以选择映射 size 函数，自己计算出映射的半径\n\n  var circleSize = function (_a) {\n    var r = _a.r;\n    return r * finalSize;\n  }; // 默认配置\n\n\n  if (sizeField) {\n    circleSize = function (d) {\n      return d[sizeField] * finalSize;\n    }; // 目前只有 r 通道映射效果会正常\n\n  } // geometry\n\n\n  point(deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField,\n      sizeField: sizeField,\n      rawFields: __spreadArrays(RAW_FIELDS, rawFields),\n      point: {\n        color: color,\n        style: pointStyle,\n        shape: 'circle',\n        size: circleSize\n      }\n    }\n  }));\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nexport function meta(params) {\n  return flow(scale({}, {\n    // 必须强制为 nice\n    x: {\n      min: 0,\n      max: 1,\n      minLimit: 0,\n      maxLimit: 1,\n      nice: true\n    },\n    y: {\n      min: 0,\n      max: 1,\n      minLimit: 0,\n      maxLimit: 1,\n      nice: true\n    }\n  }))(params);\n}\n/**\n * tooltip 配置\n * @param params\n */\n\nfunction tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    var tooltipOptions = tooltip; // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign({}, {\n        customItems: function (items) {\n          return items.map(function (item) {\n            var scales = get(chart.getOptions(), 'scales');\n            var nameFormatter = get(scales, ['name', 'formatter'], function (v) {\n              return v;\n            });\n            var valueFormatter = get(scales, ['value', 'formatter'], function (v) {\n              return v;\n            });\n            return __assign(__assign({}, item), {\n              name: nameFormatter(item.data.name),\n              value: valueFormatter(item.data.value)\n            });\n          });\n        }\n      }, tooltipOptions);\n    }\n\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n/**\n * 坐标轴, 默认关闭\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\n\nfunction adaptorInteraction(options) {\n  var drilldown = options.drilldown,\n      _a = options.interactions,\n      interactions = _a === void 0 ? [] : _a;\n\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    return deepAssign({}, options, {\n      interactions: __spreadArrays(interactions, [{\n        type: 'drill-down',\n        cfg: {\n          drillDownConfig: drilldown,\n          transformData: transformData,\n          enableDrillDown: true\n        }\n      }])\n    });\n  }\n\n  return options;\n}\n/**\n * 交互配置\n * @param params\n * @returns\n */\n\n\nfunction interaction(params) {\n  var chart = params.chart,\n      options = params.options;\n  baseInteraction({\n    chart: chart,\n    options: adaptorInteraction(options)\n  });\n  return params;\n}\n/**\n * 矩形树图\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  return flow(pattern('pointStyle'), defaultOptions, padding, theme, meta, geometry, axis, legend, tooltip, interaction, animation, annotation())(params);\n}","map":{"version":3,"mappings":"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","names":["get","point","interaction","baseInteraction","animation","theme","legend","annotation","scale","pattern","flow","deepAssign","getAdjustAppendPadding","resolveAllPadding","transformData","resolvePaddingForCircle","RAW_FIELDS","defaultOptions","params","diameter","Math","min","chart","viewBBox","width","height","options","size","_a","r","padding","containerSize","appendPadding","drilldown","tempAppendPadding","enabled","appendPaddingByDrilldown","finalPadding","geometry","colorField","pointStyle","hierarchyConfig","sizeField","rawFields","data","enableDrillDown","finalSize","circleSize","d","xField","yField","seriesField","color","style","shape","meta","x","max","minLimit","maxLimit","nice","y","tooltip","tooltipOptions","customItems","items","map","item","scales","getOptions","nameFormatter","v","valueFormatter","name","value","axis","adaptorInteraction","interactions","type","cfg","drillDownConfig","adaptor"],"sourceRoot":"","sources":["../../../src/plots/circle-packing/adaptor.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { Types } from '@antv/g2';\nimport { point } from '../../adaptor/geometries/point';\nimport { Params } from '../../core/adaptor';\nimport {\n  interaction as baseInteraction,\n  animation,\n  theme,\n  legend,\n  annotation,\n  scale,\n  pattern,\n} from '../../adaptor/common';\nimport { flow, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding, resolveAllPadding } from '../../utils/padding';\nimport { transformData, resolvePaddingForCircle } from './utils';\nimport { CirclePackingOptions } from './types';\nimport { RAW_FIELDS } from './constant';\n\n/**\n * 获取默认 option\n * @param params\n */\nfunction defaultOptions(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart } = params;\n  const diameter = Math.min(chart.viewBBox.width, chart.viewBBox.height);\n\n  return deepAssign(\n    {\n      options: {\n        size: ({ r }) => r * diameter, // 当autofit：false时，默认给固定半径\n      },\n    },\n    params\n  );\n}\n\n/**\n * padding 配置\n * @param params\n */\nfunction padding(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { options, chart } = params;\n  // 通过改变 padding，修改 coordinate 的绘制区域\n  const containerSize = chart.viewBBox;\n  const { padding, appendPadding, drilldown } = options;\n\n  let tempAppendPadding = appendPadding;\n  if (drilldown?.enabled) {\n    const appendPaddingByDrilldown = getAdjustAppendPadding(\n      chart.appendPadding,\n      get(drilldown, ['breadCrumb', 'position'])\n    );\n    tempAppendPadding = resolveAllPadding([appendPaddingByDrilldown, appendPadding]);\n  }\n\n  const { finalPadding } = resolvePaddingForCircle(padding, tempAppendPadding, containerSize);\n  chart.padding = finalPadding;\n  chart.appendPadding = 0;\n\n  return params;\n}\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart, options } = params;\n  const { padding, appendPadding } = chart;\n  const { color, colorField, pointStyle, hierarchyConfig, sizeField, rawFields = [], drilldown } = options;\n\n  const data = transformData({\n    data: options.data,\n    hierarchyConfig,\n    enableDrillDown: drilldown?.enabled,\n    rawFields,\n  });\n  chart.data(data);\n\n  const containerSize = chart.viewBBox;\n  const { finalSize } = resolvePaddingForCircle(padding, appendPadding, containerSize);\n  // 有sizeField的时候，例如 value ，可以选择映射 size 函数，自己计算出映射的半径\n  let circleSize = ({ r }) => r * finalSize; // 默认配置\n\n  if (sizeField) {\n    circleSize = (d) => d[sizeField] * finalSize; // 目前只有 r 通道映射效果会正常\n  }\n\n  // geometry\n  point(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        sizeField,\n        rawFields: [...RAW_FIELDS, ...rawFields],\n        point: {\n          color,\n          style: pointStyle,\n          shape: 'circle',\n          size: circleSize,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  return flow(\n    scale(\n      {},\n      {\n        // 必须强制为 nice\n        x: { min: 0, max: 1, minLimit: 0, maxLimit: 1, nice: true },\n        y: { min: 0, max: 1, minLimit: 0, maxLimit: 1, nice: true },\n      }\n    )\n  )(params);\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nfunction tooltip(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    let tooltipOptions = tooltip;\n    // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign(\n        {},\n        {\n          customItems: (items: Types.TooltipItem[]) =>\n            items.map((item) => {\n              const scales = get(chart.getOptions(), 'scales');\n              const nameFormatter = get(scales, ['name', 'formatter'], (v) => v);\n              const valueFormatter = get(scales, ['value', 'formatter'], (v) => v);\n              return {\n                ...item,\n                name: nameFormatter(item.data.name),\n                value: valueFormatter(item.data.value),\n              };\n            }),\n        },\n        tooltipOptions\n      );\n    }\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n\n/**\n * 坐标轴, 默认关闭\n * @param params\n */\nfunction axis(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\nfunction adaptorInteraction(options: CirclePackingOptions): CirclePackingOptions {\n  const { drilldown, interactions = [] } = options;\n\n  if (drilldown?.enabled) {\n    return deepAssign({}, options, {\n      interactions: [\n        ...interactions,\n        {\n          type: 'drill-down',\n          cfg: { drillDownConfig: drilldown, transformData, enableDrillDown: true },\n        },\n      ],\n    });\n  }\n  return options;\n}\n\n/**\n * 交互配置\n * @param params\n * @returns\n */\nfunction interaction(params: Params<CirclePackingOptions>): Params<CirclePackingOptions> {\n  const { chart, options } = params;\n\n  baseInteraction({\n    chart,\n    options: adaptorInteraction(options),\n  });\n\n  return params;\n}\n\n/**\n * 矩形树图\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<CirclePackingOptions>) {\n  return flow(\n    pattern('pointStyle'),\n    defaultOptions,\n    padding,\n    theme,\n    meta,\n    geometry,\n    axis,\n    legend,\n    tooltip,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}