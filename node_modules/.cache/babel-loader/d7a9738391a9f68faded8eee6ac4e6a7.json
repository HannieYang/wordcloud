{"ast":null,"code":"import { __assign, __extends, __values } from \"tslib\";\nimport { each, head, isEqual, last, get, flatten, isArray, uniq, isNil } from '@antv/util';\nimport { findItemsFromViewRecurisive } from '../../util/tooltip';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\nvar DEFAULT_REGION_PATH_STYLE = {\n  fill: '#CCD6EC',\n  opacity: 0.3\n};\nexport function getItemsOfView(view, point, tooltipCfg) {\n  var e_1, _a, e_2, _b, e_3, _c;\n\n  var items = findItemsFromViewRecurisive(view, point, tooltipCfg);\n\n  if (items.length) {\n    // 三层\n    items = flatten(items);\n\n    try {\n      for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n        var itemArr = items_1_1.value;\n\n        try {\n          for (var itemArr_1 = (e_2 = void 0, __values(itemArr)), itemArr_1_1 = itemArr_1.next(); !itemArr_1_1.done; itemArr_1_1 = itemArr_1.next()) {\n            var item = itemArr_1_1.value;\n            var _d = item.mappingData,\n                x = _d.x,\n                y = _d.y;\n            item.x = isArray(x) ? x[x.length - 1] : x;\n            item.y = isArray(y) ? y[y.length - 1] : y;\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (itemArr_1_1 && !itemArr_1_1.done && (_b = itemArr_1.return)) _b.call(itemArr_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    var shared = tooltipCfg.shared; // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n\n    if (shared === false && items.length > 1) {\n      var snapItem = items[0];\n      var min = Math.abs(point.y - snapItem[0].y);\n\n      try {\n        for (var items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n          var aItem = items_2_1.value;\n          var yDistance = Math.abs(point.y - aItem[0].y);\n\n          if (yDistance <= min) {\n            snapItem = aItem;\n            min = yDistance;\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (items_2_1 && !items_2_1.done && (_c = items_2.return)) _c.call(items_2);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n\n      items = [snapItem];\n    }\n\n    return uniq(flatten(items));\n  }\n\n  return [];\n}\n/**\n * 背景框的 Action. 只作用于 interval 和 schema geometry\n * @ignore\n */\n\nvar ActiveRegion =\n/** @class */\nfunction (_super) {\n  __extends(ActiveRegion, _super);\n\n  function ActiveRegion() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 显示\n   * @param {ShapeAttrs} style region-path 的样式\n   * @param {number} appendRatio 适用于笛卡尔坐标系. 对于 x 轴非 linear 类型: 默认：0.25, x 轴 linear 类型: 默认 0\n   * @param {number} appendWidth  适用于笛卡尔坐标系. 像素级别，优先级 > appendRatio\n   */\n\n\n  ActiveRegion.prototype.show = function (args) {\n    var view = this.context.view;\n    var ev = this.context.event;\n    var tooltipCfg = view.getController('tooltip').getTooltipCfg();\n    var tooltipItems = getItemsOfView(view, {\n      x: ev.x,\n      y: ev.y\n    }, tooltipCfg);\n\n    if (isEqual(tooltipItems, this.items)) {\n      // 如果拾取数据同上次相同，则不重复绘制\n      return;\n    }\n\n    this.items = tooltipItems;\n\n    if (tooltipItems.length) {\n      var xField_1 = view.getXScale().field;\n      var xValue_1 = tooltipItems[0].data[xField_1]; // 根据 x 对应的值查找 elements\n\n      var elements_1 = [];\n      var geometries = view.geometries;\n      each(geometries, function (geometry) {\n        if (geometry.type === 'interval' || geometry.type === 'schema') {\n          var result = geometry.getElementsBy(function (ele) {\n            var eleData = ele.getData();\n            return eleData[xField_1] === xValue_1;\n          });\n          elements_1 = elements_1.concat(result);\n        }\n      }); // 根据 bbox 计算背景框的面积区域\n\n      if (elements_1.length) {\n        var coordinate_1 = view.getCoordinate();\n        var firstBBox_1 = elements_1[0].shape.getCanvasBBox();\n        var lastBBox_1 = elements_1[0].shape.getCanvasBBox();\n        var groupBBox_1 = firstBBox_1;\n        each(elements_1, function (ele) {\n          var bbox = ele.shape.getCanvasBBox();\n\n          if (coordinate_1.isTransposed) {\n            if (bbox.minY < firstBBox_1.minY) {\n              firstBBox_1 = bbox;\n            }\n\n            if (bbox.maxY > lastBBox_1.maxY) {\n              lastBBox_1 = bbox;\n            }\n          } else {\n            if (bbox.minX < firstBBox_1.minX) {\n              firstBBox_1 = bbox;\n            }\n\n            if (bbox.maxX > lastBBox_1.maxX) {\n              lastBBox_1 = bbox;\n            }\n          }\n\n          groupBBox_1.x = Math.min(bbox.minX, groupBBox_1.minX);\n          groupBBox_1.y = Math.min(bbox.minY, groupBBox_1.minY);\n          groupBBox_1.width = Math.max(bbox.maxX, groupBBox_1.maxX) - groupBBox_1.x;\n          groupBBox_1.height = Math.max(bbox.maxY, groupBBox_1.maxY) - groupBBox_1.y;\n        });\n        var backgroundGroup = view.backgroundGroup,\n            coordinateBBox = view.coordinateBBox;\n        var path = void 0;\n\n        if (coordinate_1.isRect) {\n          var xScale = view.getXScale();\n\n          var _a = args || {},\n              appendRatio = _a.appendRatio,\n              appendWidth = _a.appendWidth;\n\n          if (isNil(appendWidth)) {\n            appendRatio = isNil(appendRatio) ? xScale.isLinear ? 0 : 0.25 : appendRatio; // 如果 x 轴是数值类型，如直方图，默认不需要加额外的宽度\n\n            appendWidth = coordinate_1.isTransposed ? appendRatio * lastBBox_1.height : appendRatio * firstBBox_1.width;\n          }\n\n          var minX = void 0;\n          var minY = void 0;\n          var width = void 0;\n          var height = void 0;\n\n          if (coordinate_1.isTransposed) {\n            minX = coordinateBBox.minX;\n            minY = Math.min(lastBBox_1.minY, firstBBox_1.minY) - appendWidth;\n            width = coordinateBBox.width;\n            height = groupBBox_1.height + appendWidth * 2;\n          } else {\n            minX = Math.min(firstBBox_1.minX, lastBBox_1.minX) - appendWidth; // 直角坐标系 非转置：最小值直接取 坐标系 minY\n\n            minY = coordinateBBox.minY;\n            width = groupBBox_1.width + appendWidth * 2;\n            height = coordinateBBox.height;\n          }\n\n          path = [['M', minX, minY], ['L', minX + width, minY], ['L', minX + width, minY + height], ['L', minX, minY + height], ['Z']];\n        } else {\n          var firstElement = head(elements_1);\n          var lastElement = last(elements_1);\n          var startAngle = getAngle(firstElement.getModel(), coordinate_1).startAngle;\n          var endAngle = getAngle(lastElement.getModel(), coordinate_1).endAngle;\n          var center = coordinate_1.getCenter();\n          var radius = coordinate_1.getRadius();\n          var innterRadius = coordinate_1.innerRadius * radius;\n          path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n        }\n\n        if (this.regionPath) {\n          this.regionPath.attr('path', path);\n          this.regionPath.show();\n        } else {\n          var style = get(args, 'style', DEFAULT_REGION_PATH_STYLE);\n          this.regionPath = backgroundGroup.addShape({\n            type: 'path',\n            name: 'active-region',\n            capture: false,\n            attrs: __assign(__assign({}, style), {\n              path: path\n            })\n          });\n        }\n      }\n    }\n  };\n  /**\n   * 隐藏\n   */\n\n\n  ActiveRegion.prototype.hide = function () {\n    if (this.regionPath) {\n      this.regionPath.hide();\n    } // this.regionPath = null;\n\n\n    this.items = null;\n  };\n  /**\n   * 销毁\n   */\n\n\n  ActiveRegion.prototype.destroy = function () {\n    this.hide();\n\n    if (this.regionPath) {\n      this.regionPath.remove(true);\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  return ActiveRegion;\n}(Action);\n\nexport default ActiveRegion;","map":{"version":3,"mappings":"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","names":["each","head","isEqual","last","get","flatten","isArray","uniq","isNil","findItemsFromViewRecurisive","getAngle","getSectorPath","Action","DEFAULT_REGION_PATH_STYLE","fill","opacity","getItemsOfView","view","point","tooltipCfg","items","length","items_1_1","itemArr","itemArr_1_1","item","mappingData","x","y","shared","snapItem","min","Math","abs","items_2_1","aItem","yDistance","__extends","ActiveRegion","args","context","ev","event","getController","getTooltipCfg","tooltipItems","xField_1","getXScale","field","xValue_1","data","elements_1","geometries","geometry","type","result","getElementsBy","ele","eleData","getData","concat","coordinate_1","getCoordinate","firstBBox_1","shape","getCanvasBBox","lastBBox_1","groupBBox_1","bbox","isTransposed","minY","maxY","minX","maxX","width","max","height","coordinateBBox","path","isRect","xScale","appendRatio","appendWidth","isLinear","firstElement","lastElement","getModel","startAngle","endAngle","center","getCenter","radius","getRadius","innterRadius","innerRadius","regionPath","attr","show","style","backgroundGroup","addShape","name","capture","attrs","hide","remove","_super","destroy","call"],"sourceRoot":"","sources":["../../../src/interaction/action/active-region.ts"],"sourcesContent":["import { each, head, isEqual, last, get, flatten, isArray, uniq, isNil } from '@antv/util';\nimport { View } from 'src/chart';\nimport { findItemsFromViewRecurisive } from '../../util/tooltip';\nimport { IShape, Point, ShapeAttrs } from '../../dependents';\nimport Element from '../../geometry/element';\nimport { LooseObject, TooltipCfg } from '../../interface';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\n\nconst DEFAULT_REGION_PATH_STYLE = {\n  fill: '#CCD6EC',\n  opacity: 0.3,\n};\n\nexport function getItemsOfView(view: View, point: Point, tooltipCfg: TooltipCfg) {\n  let items = findItemsFromViewRecurisive(view, point, tooltipCfg);\n  if (items.length) {\n    // 三层\n    items = flatten(items);\n    for (const itemArr of items) {\n      for (const item of itemArr) {\n        const { x, y } = item.mappingData;\n        item.x = isArray(x) ? x[x.length - 1] : x;\n        item.y = isArray(y) ? y[y.length - 1] : y;\n      }\n    }\n\n    const { shared } = tooltipCfg;\n    // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n    if (shared === false && items.length > 1) {\n      let snapItem = items[0];\n      let min = Math.abs(point.y - snapItem[0].y);\n      for (const aItem of items) {\n        const yDistance = Math.abs(point.y - aItem[0].y);\n        if (yDistance <= min) {\n          snapItem = aItem;\n          min = yDistance;\n        }\n      }\n      items = [snapItem];\n    }\n\n    return uniq(flatten(items));\n  }\n\n  return [];\n}\n\n/**\n * 背景框的 Action. 只作用于 interval 和 schema geometry\n * @ignore\n */\nclass ActiveRegion extends Action {\n  private items: any[];\n  private regionPath: IShape;\n  /**\n   * 显示\n   * @param {ShapeAttrs} style region-path 的样式\n   * @param {number} appendRatio 适用于笛卡尔坐标系. 对于 x 轴非 linear 类型: 默认：0.25, x 轴 linear 类型: 默认 0\n   * @param {number} appendWidth  适用于笛卡尔坐标系. 像素级别，优先级 > appendRatio\n   */\n  public show(args?: { style: ShapeAttrs; appendRatio?: number; appendWidth?: number }) {\n    const view = this.context.view;\n    const ev = this.context.event;\n\n    const tooltipCfg = view.getController('tooltip').getTooltipCfg();\n    const tooltipItems = getItemsOfView(\n      view,\n      {\n        x: ev.x,\n        y: ev.y,\n      },\n      tooltipCfg\n    );\n\n    if (isEqual(tooltipItems, this.items)) {\n      // 如果拾取数据同上次相同，则不重复绘制\n      return;\n    }\n    this.items = tooltipItems;\n    if (tooltipItems.length) {\n      const xField = view.getXScale().field;\n      const xValue = tooltipItems[0].data[xField];\n      // 根据 x 对应的值查找 elements\n      let elements: Element[] = [];\n      const geometries = view.geometries;\n      each(geometries, (geometry) => {\n        if (geometry.type === 'interval' || geometry.type === 'schema') {\n          const result = geometry.getElementsBy((ele) => {\n            const eleData = ele.getData();\n            return eleData[xField] === xValue;\n          });\n\n          elements = elements.concat(result);\n        }\n      });\n\n      // 根据 bbox 计算背景框的面积区域\n      if (elements.length) {\n        const coordinate = view.getCoordinate();\n\n        let firstBBox = elements[0].shape.getCanvasBBox();\n        let lastBBox = elements[0].shape.getCanvasBBox();\n        const groupBBox: LooseObject = firstBBox;\n\n        each(elements, (ele: Element) => {\n          const bbox = ele.shape.getCanvasBBox();\n          if (coordinate.isTransposed) {\n            if (bbox.minY < firstBBox.minY) {\n              firstBBox = bbox;\n            }\n            if (bbox.maxY > lastBBox.maxY) {\n              lastBBox = bbox;\n            }\n          } else {\n            if (bbox.minX < firstBBox.minX) {\n              firstBBox = bbox;\n            }\n            if (bbox.maxX > lastBBox.maxX) {\n              lastBBox = bbox;\n            }\n          }\n\n          groupBBox.x = Math.min(bbox.minX, groupBBox.minX);\n          groupBBox.y = Math.min(bbox.minY, groupBBox.minY);\n          groupBBox.width = Math.max(bbox.maxX, groupBBox.maxX) - groupBBox.x;\n          groupBBox.height = Math.max(bbox.maxY, groupBBox.maxY) - groupBBox.y;\n        });\n\n        const { backgroundGroup, coordinateBBox } = view;\n        let path;\n        if (coordinate.isRect) {\n          const xScale = view.getXScale();\n\n          let { appendRatio, appendWidth } = args || {};\n          if (isNil(appendWidth)) {\n            appendRatio = isNil(appendRatio) ? (xScale.isLinear ? 0 : 0.25) : appendRatio; // 如果 x 轴是数值类型，如直方图，默认不需要加额外的宽度\n            appendWidth = coordinate.isTransposed ? appendRatio * lastBBox.height : appendRatio * firstBBox.width;\n          }\n\n          let minX: number;\n          let minY: number;\n          let width: number;\n          let height: number;\n          if (coordinate.isTransposed) {\n            minX = coordinateBBox.minX;\n            minY = Math.min(lastBBox.minY, firstBBox.minY) - appendWidth;\n            width = coordinateBBox.width;\n            height = groupBBox.height + appendWidth * 2;\n          } else {\n            minX = Math.min(firstBBox.minX, lastBBox.minX) - appendWidth;\n            // 直角坐标系 非转置：最小值直接取 坐标系 minY\n            minY = coordinateBBox.minY;\n            width = groupBBox.width + appendWidth * 2;\n            height = coordinateBBox.height;\n          }\n\n          path = [\n            ['M', minX, minY],\n            ['L', minX + width, minY],\n            ['L', minX + width, minY + height],\n            ['L', minX, minY + height],\n            ['Z'],\n          ];\n        } else {\n          const firstElement = head(elements);\n          const lastElement = last(elements);\n          const { startAngle } = getAngle(firstElement.getModel(), coordinate);\n          const { endAngle } = getAngle(lastElement.getModel(), coordinate);\n          const center = coordinate.getCenter();\n          const radius = coordinate.getRadius();\n          const innterRadius = coordinate.innerRadius * radius;\n          path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n        }\n\n        if (this.regionPath) {\n          this.regionPath.attr('path', path);\n          this.regionPath.show();\n        } else {\n          const style = get(args, 'style', DEFAULT_REGION_PATH_STYLE);\n          this.regionPath = backgroundGroup.addShape({\n            type: 'path',\n            name: 'active-region',\n            capture: false,\n            attrs: {\n              ...style,\n              path,\n            },\n          });\n        }\n      }\n    }\n  }\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.regionPath) {\n      this.regionPath.hide();\n    }\n    // this.regionPath = null;\n    this.items = null;\n  }\n  /**\n   * 销毁\n   */\n  public destroy() {\n    this.hide();\n    if (this.regionPath) {\n      this.regionPath.remove(true);\n    }\n    super.destroy();\n  }\n}\n\nexport default ActiveRegion;\n"]},"metadata":{},"sourceType":"module"}