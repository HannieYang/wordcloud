{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '@antv/g2';\nimport { reduce, isNumber, mix } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\nvar DURATION = 5000;\n/**\n * 一个线性映射的函数\n * @param min\n * @param max\n * @param factor\n */\n\nfunction lerp(min, max, factor) {\n  return min + (max - min) * factor;\n}\n/**\n * 波浪的 attrs\n * @param cfg\n */\n\n\nfunction getFillAttrs(cfg) {\n  var attrs = __assign({\n    opacity: 1\n  }, cfg.style);\n\n  if (cfg.color && !attrs.fill) {\n    attrs.fill = cfg.color;\n  }\n\n  return attrs;\n}\n/**\n * shape 的 attrs\n * @param cfg\n */\n\n\nfunction getLineAttrs(cfg) {\n  var defaultAttrs = {\n    fill: '#fff',\n    fillOpacity: 0,\n    lineWidth: 4\n  };\n  var attrs = mix({}, defaultAttrs, cfg.style);\n\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = cfg.color;\n  }\n\n  if (isNumber(cfg.opacity)) {\n    attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n  }\n\n  return attrs;\n}\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param x          x position of the left-most point (a)\n * @param stage      0-3, stating which part of the wave it is\n * @param waveLength wave length of the sine wave\n * @param amplitude  wave amplitude\n * @return 正弦片段曲线\n */\n\n\nfunction getWaterWavePositions(x, stage, waveLength, amplitude) {\n  if (stage === 0) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, amplitude], [x + waveLength / 4, amplitude]];\n  }\n\n  if (stage === 1) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), amplitude / 2], [x + waveLength / 4, 0]];\n  }\n\n  if (stage === 2) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, -amplitude], [x + waveLength / 4, -amplitude]];\n  }\n\n  return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), -amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), -amplitude / 2], [x + waveLength / 4, 0]];\n}\n/**\n * 获取水波路径\n * @param radius          半径\n * @param waterLevel      水位\n * @param waveLength      波长\n * @param phase           相位\n * @param amplitude       震幅\n * @param cx              圆心x\n * @param cy              圆心y\n * @return path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\n\n\nfunction getWaterWavePath(radius, waterLevel, waveLength, phase, amplitude, cx, cy) {\n  var curves = Math.ceil(2 * radius / waveLength * 4) * 4;\n  var path = [];\n  var _phase = phase; // map phase to [-Math.PI * 2, 0]\n\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n\n  _phase = _phase / Math.PI / 2 * waveLength;\n  var left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n\n  path.push(['M', left, waterLevel]);\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n\n  var waveRight = 0;\n\n  for (var c = 0; c < curves; ++c) {\n    var stage = c % 4;\n    var pos = getWaterWavePositions(c * waveLength / 4, stage, waveLength, amplitude);\n    path.push(['C', pos[0][0] + left, -pos[0][1] + waterLevel, pos[1][0] + left, -pos[1][1] + waterLevel, pos[2][0] + left, -pos[2][1] + waterLevel]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n\n\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['Z']); // path.push(['L', left, waterLevel]);\n\n  return path;\n}\n/**\n * 添加水波\n * @param x           中心x\n * @param y           中心y\n * @param level       水位等级 0～1\n * @param waveCount   水波数\n * @param waveAttrs      色值\n * @param group       图组\n * @param clip        用于剪切的图形\n * @param radius      绘制图形的高度\n * @param waveLength  波的长度\n */\n\n\nexport function addWaterWave(x, y, level, waveCount, waveAttrs, group, clip, radius, waveLength, animation) {\n  // 盒子属性 颜色 宽高\n  var fill = waveAttrs.fill,\n      opacity = waveAttrs.opacity;\n  var bbox = clip.getBBox();\n  var width = bbox.maxX - bbox.minX;\n  var height = bbox.maxY - bbox.minY; // 循环 waveCount 个数\n\n  for (var idx = 0; idx < waveCount; idx++) {\n    var factor = waveCount <= 1 ? 0 : idx / (waveCount - 1); // 画波\n\n    var wave = group.addShape('path', {\n      name: \"waterwave-path\",\n      attrs: {\n        // 波形路径配置\n        path: getWaterWavePath(radius, bbox.minY + height * level, waveLength, 0, width / 32, // 波幅高度\n        x, y),\n        fill: fill,\n        opacity: lerp(0.2, 0.9, factor) * opacity\n      }\n    });\n\n    try {\n      // 默认 underfind 开启动画\n      if (animation === false) return;\n      var matrix = transform([['t', waveLength, 0]]);\n      wave.stopAnimate();\n      wave.animate({\n        matrix: matrix\n      }, {\n        duration: lerp(0.5 * DURATION, DURATION, factor),\n        repeat: true\n      });\n    } catch (e) {\n      // TODO off-screen canvas 中动画会找不到 canvas\n      console.warn('off-screen group animate error!');\n    }\n  }\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\nfunction pin(x, y, width, height) {\n  var w = width * 2 / 3;\n  var h = Math.max(w, height);\n  var r = w / 2; // attrs of the upper circle\n\n  var cx = x;\n  var cy = r + y - h / 2;\n  var theta = Math.asin(r / ((h - r) * 0.85));\n  var dy = Math.sin(theta) * r;\n  var dx = Math.cos(theta) * r; // the start point of the path\n\n  var x0 = cx - dx;\n  var y0 = cy + dy; // control point\n\n  var cpX = x;\n  var cpY = cy + r / Math.sin(theta);\n  return \"\\n      M \" + x0 + \" \" + y0 + \"\\n      A \" + r + \" \" + r + \" 0 1 1 \" + (x0 + dx * 2) + \" \" + y0 + \"\\n      Q \" + cpX + \" \" + cpY + \" \" + x + \" \" + (y + h / 2) + \"\\n      Q \" + cpX + \" \" + cpY + \" \" + x0 + \" \" + y0 + \"\\n      Z \\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\n\nfunction circle(x, y, width, height) {\n  var rx = width / 2;\n  var ry = height / 2;\n  return \"\\n      M \" + x + \" \" + (y - ry) + \" \\n      a \" + rx + \" \" + ry + \" 0 1 0 0 \" + ry * 2 + \"\\n      a \" + rx + \" \" + ry + \" 0 1 0 0 \" + -ry * 2 + \"\\n      Z\\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\n\nfunction diamond(x, y, width, height) {\n  var h = height / 2;\n  var w = width / 2;\n  return \"\\n      M \" + x + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + y + \"\\n      L \" + x + \" \" + (y + h) + \"\\n      L \" + (x - w) + \" \" + y + \"\\n      Z\\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\n\nfunction triangle(x, y, width, height) {\n  var h = height / 2;\n  var w = width / 2;\n  return \"\\n      M \" + x + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + (y + h) + \"\\n      L \" + (x - w) + \" \" + (y + h) + \"\\n      Z\\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\n\nfunction rect(x, y, width, height) {\n  var GOLDEN_SECTION_RATIO = 0.618;\n  var h = height / 2;\n  var w = width / 2 * GOLDEN_SECTION_RATIO;\n  return \"\\n      M \" + (x - w) + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + (y + h) + \"\\n      L \" + (x - w) + \" \" + (y + h) + \"\\n      Z\\n    \";\n}\n\nvar builtInShapeByName = {\n  pin: pin,\n  circle: circle,\n  diamond: diamond,\n  triangle: triangle,\n  rect: rect\n};\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw: function (cfg, container) {\n    var cx = 0.5;\n    var cy = 0.5;\n    var customInfo = cfg.customInfo;\n    var _a = customInfo,\n        radio = _a.radius,\n        shape = _a.shape,\n        background = _a.background,\n        animation = _a.animation;\n    var outline = customInfo.outline;\n    var wave = customInfo.wave;\n    var border = outline.border,\n        distance = outline.distance;\n    var waveCount = wave.count,\n        waveLength = wave.length; // 获取最小 minX\n\n    var minX = reduce(cfg.points, function (r, p) {\n      return Math.min(r, p.x);\n    }, Infinity);\n    var center = this.parsePoint({\n      x: cx,\n      y: cy\n    });\n    var minXPoint = this.parsePoint({\n      x: minX,\n      y: cy\n    });\n    var halfWidth = center.x - minXPoint.x; // 保证半径是 画布宽高最小值的 radius 值\n\n    var radius = Math.min(halfWidth, minXPoint.y * radio);\n    var waveAttrs = getFillAttrs(cfg);\n    var outlineAttrs = getLineAttrs(mix({}, cfg, outline));\n    var innerRadius = radius - border / 2;\n    var buildPath = typeof shape === 'function' ? shape : builtInShapeByName[shape] || builtInShapeByName['circle'];\n    var shapePath = buildPath(center.x, center.y, innerRadius * 2, innerRadius * 2); // 1. 绘制一个波\n\n    var waves = container.addGroup({\n      name: 'waves'\n    }); // 3. 波对应的 clip 裁剪形状\n\n    var clipPath = waves.setClip({\n      type: 'path',\n      attrs: {\n        path: shapePath\n      }\n    }); // 4. 绘制波形\n\n    addWaterWave(center.x, center.y, 1 - cfg.points[1].y, waveCount, waveAttrs, waves, clipPath, radius * 2, waveLength, animation); // 2. 绘制一个 distance 宽的 border\n\n    container.addShape('path', {\n      name: 'distance',\n      attrs: {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border + distance * 2,\n        stroke: background === 'transparent' ? '#fff' : background\n      }\n    }); // 3. 绘制一个 border 宽的 border\n\n    container.addShape('path', {\n      name: 'wrap',\n      attrs: mix(outlineAttrs, {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border\n      })\n    });\n    return container;\n  }\n});","map":{"version":3,"mappings":"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","names":["registerShape","reduce","isNumber","mix","transform","DURATION","lerp","min","max","factor","getFillAttrs","cfg","attrs","opacity","style","color","fill","getLineAttrs","defaultAttrs","fillOpacity","lineWidth","stroke","strokeOpacity","getWaterWavePositions","x","stage","waveLength","amplitude","Math","PI","getWaterWavePath","radius","waterLevel","phase","cx","cy","curves","ceil","path","_phase","left","push","waveRight","c","pos","addWaterWave","y","level","waveCount","waveAttrs","group","clip","animation","bbox","getBBox","width","maxX","minX","height","maxY","minY","idx","wave","addShape","name","matrix","stopAnimate","animate","duration","repeat","e","console","warn","pin","w","h","r","theta","asin","dy","sin","dx","cos","x0","y0","cpX","cpY","circle","rx","ry","diamond","triangle","rect","GOLDEN_SECTION_RATIO","builtInShapeByName","draw","container","customInfo","radio","shape","background","outline","distance","points","p","Infinity","center","parsePoint","minXPoint","halfWidth","outlineAttrs","innerRadius","border","buildPath","shapePath","waves","addGroup","clipPath","setClip","type"],"sourceRoot":"","sources":["../../../../src/plots/liquid/shapes/liquid.ts"],"sourcesContent":["import { registerShape } from '@antv/g2';\nimport { IGroup, IShape } from '@antv/g-base';\nimport { reduce, isNumber, mix } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\nimport { Point, ShapeStyle } from '../../../types';\nimport { LiquidOptions, CustomInfo } from '../types';\n\nconst DURATION = 5000;\n\n/**\n * 一个线性映射的函数\n * @param min\n * @param max\n * @param factor\n */\nfunction lerp(min: number, max: number, factor: number) {\n  return min + (max - min) * factor;\n}\n\n/**\n * 波浪的 attrs\n * @param cfg\n */\nfunction getFillAttrs(cfg: ShapeStyle) {\n  const attrs = { opacity: 1, ...cfg.style };\n\n  if (cfg.color && !attrs.fill) {\n    attrs.fill = cfg.color;\n  }\n\n  return attrs;\n}\n\n/**\n * shape 的 attrs\n * @param cfg\n */\nfunction getLineAttrs(cfg: ShapeStyle) {\n  const defaultAttrs = {\n    fill: '#fff',\n    fillOpacity: 0,\n    lineWidth: 4,\n  };\n  const attrs = mix({}, defaultAttrs, cfg.style);\n\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = cfg.color;\n  }\n  if (isNumber(cfg.opacity)) {\n    attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n  }\n\n  return attrs;\n}\n\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param x          x position of the left-most point (a)\n * @param stage      0-3, stating which part of the wave it is\n * @param waveLength wave length of the sine wave\n * @param amplitude  wave amplitude\n * @return 正弦片段曲线\n */\nfunction getWaterWavePositions(x: number, stage: number, waveLength: number, amplitude: number) {\n  if (stage === 0) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, amplitude],\n      [x + waveLength / 4, amplitude],\n    ];\n  }\n  if (stage === 1) {\n    return [\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), amplitude],\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), amplitude / 2],\n      [x + waveLength / 4, 0],\n    ];\n  }\n  if (stage === 2) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, -amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, -amplitude],\n      [x + waveLength / 4, -amplitude],\n    ];\n  }\n  return [\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), -amplitude],\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), -amplitude / 2],\n    [x + waveLength / 4, 0],\n  ];\n}\n/**\n * 获取水波路径\n * @param radius          半径\n * @param waterLevel      水位\n * @param waveLength      波长\n * @param phase           相位\n * @param amplitude       震幅\n * @param cx              圆心x\n * @param cy              圆心y\n * @return path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\nfunction getWaterWavePath(\n  radius: number,\n  waterLevel: number,\n  waveLength: number,\n  phase: number,\n  amplitude: number,\n  cx: number,\n  cy: number\n) {\n  const curves = Math.ceil(((2 * radius) / waveLength) * 4) * 4;\n  const path = [];\n  let _phase = phase;\n\n  // map phase to [-Math.PI * 2, 0]\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n  _phase = (_phase / Math.PI / 2) * waveLength;\n\n  const left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n  path.push(['M', left, waterLevel]);\n\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n  let waveRight = 0;\n  for (let c = 0; c < curves; ++c) {\n    const stage = c % 4;\n    const pos = getWaterWavePositions((c * waveLength) / 4, stage, waveLength, amplitude);\n    path.push([\n      'C',\n      pos[0][0] + left,\n      -pos[0][1] + waterLevel,\n      pos[1][0] + left,\n      -pos[1][1] + waterLevel,\n      pos[2][0] + left,\n      -pos[2][1] + waterLevel,\n    ]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['Z']);\n  // path.push(['L', left, waterLevel]);\n  return path;\n}\n\n/**\n * 添加水波\n * @param x           中心x\n * @param y           中心y\n * @param level       水位等级 0～1\n * @param waveCount   水波数\n * @param waveAttrs      色值\n * @param group       图组\n * @param clip        用于剪切的图形\n * @param radius      绘制图形的高度\n * @param waveLength  波的长度\n */\nexport function addWaterWave(\n  x: number,\n  y: number,\n  level: number,\n  waveCount: number,\n  waveAttrs: ShapeStyle,\n  group: IGroup,\n  clip: IShape,\n  radius: number,\n  waveLength: number,\n  animation: LiquidOptions['animation']\n) {\n  // 盒子属性 颜色 宽高\n  const { fill, opacity } = waveAttrs;\n  const bbox = clip.getBBox();\n  const width = bbox.maxX - bbox.minX;\n  const height = bbox.maxY - bbox.minY;\n\n  // 循环 waveCount 个数\n  for (let idx = 0; idx < waveCount; idx++) {\n    const factor = waveCount <= 1 ? 0 : idx / (waveCount - 1);\n\n    // 画波\n    const wave = group.addShape('path', {\n      name: `waterwave-path`,\n      attrs: {\n        // 波形路径配置\n        path: getWaterWavePath(\n          radius,\n          bbox.minY + height * level,\n          waveLength,\n          0,\n          width / 32, // 波幅高度\n          x,\n          y\n        ),\n        fill,\n        opacity: lerp(0.2, 0.9, factor) * opacity,\n      },\n    });\n\n    try {\n      // 默认 underfind 开启动画\n      if (animation === false) return;\n      const matrix = transform([['t', waveLength, 0]]);\n\n      wave.stopAnimate();\n      wave.animate(\n        { matrix },\n        {\n          duration: lerp(0.5 * DURATION, DURATION, factor),\n          repeat: true,\n        }\n      );\n    } catch (e) {\n      // TODO off-screen canvas 中动画会找不到 canvas\n      console.warn('off-screen group animate error!');\n    }\n  }\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction pin(x: number, y: number, width: number, height: number) {\n  const w = (width * 2) / 3;\n  const h = Math.max(w, height);\n  const r = w / 2;\n\n  // attrs of the upper circle\n  const cx = x;\n  const cy = r + y - h / 2;\n  const theta = Math.asin(r / ((h - r) * 0.85));\n  const dy = Math.sin(theta) * r;\n  const dx = Math.cos(theta) * r;\n\n  // the start point of the path\n  const x0 = cx - dx;\n  const y0 = cy + dy;\n\n  // control point\n  const cpX = x;\n  const cpY = cy + r / Math.sin(theta);\n\n  return `\n      M ${x0} ${y0}\n      A ${r} ${r} 0 1 1 ${x0 + dx * 2} ${y0}\n      Q ${cpX} ${cpY} ${x} ${y + h / 2}\n      Q ${cpX} ${cpY} ${x0} ${y0}\n      Z \n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction circle(x: number, y: number, width: number, height: number) {\n  const rx = width / 2;\n  const ry = height / 2;\n  return `\n      M ${x} ${y - ry} \n      a ${rx} ${ry} 0 1 0 0 ${ry * 2}\n      a ${rx} ${ry} 0 1 0 0 ${-ry * 2}\n      Z\n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction diamond(x: number, y: number, width: number, height: number) {\n  const h = height / 2;\n  const w = width / 2;\n  return `\n      M ${x} ${y - h}\n      L ${x + w} ${y}\n      L ${x} ${y + h}\n      L ${x - w} ${y}\n      Z\n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction triangle(x: number, y: number, width: number, height: number) {\n  const h = height / 2;\n  const w = width / 2;\n  return `\n      M ${x} ${y - h}\n      L ${x + w} ${y + h}\n      L ${x - w} ${y + h}\n      Z\n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction rect(x: number, y: number, width: number, height: number) {\n  const GOLDEN_SECTION_RATIO = 0.618;\n  const h = height / 2;\n  const w = (width / 2) * GOLDEN_SECTION_RATIO;\n  return `\n      M ${x - w} ${y - h}\n      L ${x + w} ${y - h}\n      L ${x + w} ${y + h}\n      L ${x - w} ${y + h}\n      Z\n    `;\n}\n\nconst builtInShapeByName = {\n  pin,\n  circle,\n  diamond,\n  triangle,\n  rect,\n};\n\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw(cfg: any, container: IGroup) {\n    const cx = 0.5;\n    const cy = 0.5;\n\n    const { customInfo } = cfg;\n    const { radius: radio, shape, background, animation } = customInfo as CustomInfo;\n    const outline: LiquidOptions['outline'] = customInfo.outline;\n    const wave: LiquidOptions['wave'] = customInfo.wave;\n    const { border, distance } = outline;\n    const { count: waveCount, length: waveLength } = wave;\n\n    // 获取最小 minX\n    const minX = reduce(\n      cfg.points as Point[],\n      (r: number, p: Point) => {\n        return Math.min(r, p.x);\n      },\n      Infinity\n    );\n\n    const center = this.parsePoint({ x: cx, y: cy });\n    const minXPoint = this.parsePoint({ x: minX, y: cy });\n    const halfWidth = center.x - minXPoint.x;\n\n    // 保证半径是 画布宽高最小值的 radius 值\n    const radius = Math.min(halfWidth, minXPoint.y * radio);\n    const waveAttrs = getFillAttrs(cfg);\n    const outlineAttrs = getLineAttrs(mix({}, cfg, outline));\n    const innerRadius = radius - border / 2;\n\n    const buildPath = typeof shape === 'function' ? shape : builtInShapeByName[shape] || builtInShapeByName['circle'];\n    const shapePath = buildPath(center.x, center.y, innerRadius * 2, innerRadius * 2);\n\n    // 1. 绘制一个波\n    const waves = container.addGroup({\n      name: 'waves',\n    });\n\n    // 3. 波对应的 clip 裁剪形状\n    const clipPath = waves.setClip({\n      type: 'path',\n      attrs: {\n        path: shapePath,\n      },\n    });\n\n    // 4. 绘制波形\n    addWaterWave(\n      center.x,\n      center.y,\n      1 - (cfg.points[1] as Point).y,\n      waveCount,\n      waveAttrs,\n      waves,\n      clipPath,\n      radius * 2,\n      waveLength,\n      animation\n    );\n\n    // 2. 绘制一个 distance 宽的 border\n    container.addShape('path', {\n      name: 'distance',\n      attrs: {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border + distance * 2,\n        stroke: background === 'transparent' ? '#fff' : background,\n      },\n    });\n\n    // 3. 绘制一个 border 宽的 border\n    container.addShape('path', {\n      name: 'wrap',\n      attrs: mix(outlineAttrs, {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border,\n      }),\n    });\n\n    return container;\n  },\n});\n"]},"metadata":{},"sourceType":"module"}