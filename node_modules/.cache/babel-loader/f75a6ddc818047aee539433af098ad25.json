{"ast":null,"code":"import { each, every, isString } from '@antv/util';\nimport { processIllegalData } from '../../utils';\n/**\n * 获取总计值\n * @param data\n * @param field\n */\n\nexport function getTotalValue(data, field) {\n  var total = null;\n  each(data, function (item) {\n    if (typeof item[field] === 'number') {\n      total += item[field];\n    }\n  });\n  return total;\n}\n/**\n * pie label offset adaptor\n */\n\nexport function adaptOffset(type, offset) {\n  var defaultOffset;\n\n  switch (type) {\n    case 'inner':\n      defaultOffset = '-30%';\n\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 > 0 ? defaultOffset : offset;\n      }\n\n      return offset < 0 ? offset : defaultOffset;\n\n    case 'outer':\n      defaultOffset = 12;\n\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 < 0 ? defaultOffset : offset;\n      }\n\n      return offset > 0 ? offset : defaultOffset;\n\n    default:\n      return offset;\n  }\n}\n/**\n * 判断数据是否全部为 0\n * @param data\n * @param angleField\n */\n\nexport function isAllZero(data, angleField) {\n  return every(processIllegalData(data, angleField), function (d) {\n    return d[angleField] === 0;\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,QAAsC,YAAtC;AAEA,SAASC,kBAAT,QAAmC,aAAnC;AAGA;;;;;;AAKA,OAAM,SAAUC,aAAV,CAAwBC,IAAxB,EAAoCC,KAApC,EAAiD;EACrD,IAAIC,KAAK,GAAG,IAAZ;EACAP,IAAI,CAACK,IAAD,EAAO,UAACG,IAAD,EAAK;IACd,IAAI,OAAOA,IAAI,CAACF,KAAD,CAAX,KAAuB,QAA3B,EAAqC;MACnCC,KAAK,IAAIC,IAAI,CAACF,KAAD,CAAb;IACD;EACF,CAJG,CAAJ;EAKA,OAAOC,KAAP;AACD;AAED;;;;AAGA,OAAM,SAAUE,WAAV,CAAsBC,IAAtB,EAAoCC,MAApC,EAA4D;EAChE,IAAIC,aAAJ;;EACA,QAAQF,IAAR;IACE,KAAK,OAAL;MACEE,aAAa,GAAG,MAAhB;;MACA,IAAIV,QAAQ,CAACS,MAAD,CAAR,IAAoBA,MAAM,CAACE,QAAP,CAAgB,GAAhB,CAAxB,EAA8C;QAC5C,OAAOC,UAAU,CAACH,MAAD,CAAV,GAAqB,IAArB,GAA4B,CAA5B,GAAgCC,aAAhC,GAAgDD,MAAvD;MACD;;MACD,OAAOA,MAAM,GAAG,CAAT,GAAaA,MAAb,GAAsBC,aAA7B;;IACF,KAAK,OAAL;MACEA,aAAa,GAAG,EAAhB;;MACA,IAAIV,QAAQ,CAACS,MAAD,CAAR,IAAoBA,MAAM,CAACE,QAAP,CAAgB,GAAhB,CAAxB,EAA8C;QAC5C,OAAOC,UAAU,CAACH,MAAD,CAAV,GAAqB,IAArB,GAA4B,CAA5B,GAAgCC,aAAhC,GAAgDD,MAAvD;MACD;;MACD,OAAOA,MAAM,GAAG,CAAT,GAAaA,MAAb,GAAsBC,aAA7B;;IACF;MACE,OAAOD,MAAP;EAdJ;AAgBD;AAED;;;;;;AAKA,OAAM,SAAUI,SAAV,CAAoBV,IAApB,EAA8CW,UAA9C,EAAgE;EACpE,OAAOf,KAAK,CAACE,kBAAkB,CAACE,IAAD,EAAOW,UAAP,CAAnB,EAAuC,UAACC,CAAD,EAAE;IAAK,QAAC,CAACD,UAAD,CAAD,KAAkB,CAAlB;EAAmB,CAAjE,CAAZ;AACD","names":["each","every","isString","processIllegalData","getTotalValue","data","field","total","item","adaptOffset","type","offset","defaultOffset","endsWith","parseFloat","isAllZero","angleField","d"],"sourceRoot":"","sources":["../../../src/plots/pie/utils.ts"],"sourcesContent":["import { each, every, isString } from '@antv/util';\nimport { Data } from '../../types';\nimport { processIllegalData } from '../../utils';\nimport { PieOptions } from './types';\n\n/**\n * 获取总计值\n * @param data\n * @param field\n */\nexport function getTotalValue(data: Data, field: string) {\n  let total = null;\n  each(data, (item) => {\n    if (typeof item[field] === 'number') {\n      total += item[field];\n    }\n  });\n  return total;\n}\n\n/**\n * pie label offset adaptor\n */\nexport function adaptOffset(type: string, offset?: string | number): string | number {\n  let defaultOffset;\n  switch (type) {\n    case 'inner':\n      defaultOffset = '-30%';\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 > 0 ? defaultOffset : offset;\n      }\n      return offset < 0 ? offset : defaultOffset;\n    case 'outer':\n      defaultOffset = 12;\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 < 0 ? defaultOffset : offset;\n      }\n      return offset > 0 ? offset : defaultOffset;\n    default:\n      return offset;\n  }\n}\n\n/**\n * 判断数据是否全部为 0\n * @param data\n * @param angleField\n */\nexport function isAllZero(data: PieOptions['data'], angleField: string): boolean {\n  return every(processIllegalData(data, angleField), (d) => d[angleField] === 0);\n}\n"]},"metadata":{},"sourceType":"module"}