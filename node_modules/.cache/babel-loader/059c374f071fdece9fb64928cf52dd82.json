{"ast":null,"code":"import { get } from '@antv/util';\nimport { template } from '../utils';\nimport { GLOBAL } from './global';\nvar LocaleMap = {};\n/**\n * register a locale\n * @param locale\n * @param localeObj\n */\n\nexport function registerLocale(locale, localeObj) {\n  LocaleMap[locale] = localeObj;\n}\n/**\n * get locale of specific language\n * @param lang\n * @returns\n */\n\nexport function getLocale(locale) {\n  return {\n    get: function (key, obj) {\n      return template(get(LocaleMap[locale], key) || get(LocaleMap[GLOBAL.locale], key) || get(LocaleMap['en-US'], key) || key, obj);\n    }\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,GAAT,QAAoB,YAApB;AAEA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,IAAMC,SAAS,GAAG,EAAlB;AAEA;;;;;;AAKA,OAAM,SAAUC,cAAV,CAAyBC,MAAzB,EAAyCC,SAAzC,EAA0D;EAC9DH,SAAS,CAACE,MAAD,CAAT,GAAoBC,SAApB;AACD;AAED;;;;;;AAKA,OAAM,SAAUC,SAAV,CAAoBF,MAApB,EAAkC;EACtC,OAAO;IACLL,GAAG,EAAE,UAACQ,GAAD,EAAyBC,GAAzB,EAAkD;MACrD,OAAOR,QAAQ,CACbD,GAAG,CAACG,SAAS,CAACE,MAAD,CAAV,EAAoBG,GAApB,CAAH,IAA+BR,GAAG,CAACG,SAAS,CAACD,MAAM,CAACG,MAAR,CAAV,EAA2BG,GAA3B,CAAlC,IAAqER,GAAG,CAACG,SAAS,CAAC,OAAD,CAAV,EAAqBK,GAArB,CAAxE,IAAqGA,GADxF,EAEbC,GAFa,CAAf;IAID;EANI,CAAP;AAQD","names":["get","template","GLOBAL","LocaleMap","registerLocale","locale","localeObj","getLocale","key","obj"],"sourceRoot":"","sources":["../../src/core/locale.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { Locale } from '../types/locale';\nimport { template } from '../utils';\nimport { GLOBAL } from './global';\n\nconst LocaleMap = {};\n\n/**\n * register a locale\n * @param locale\n * @param localeObj\n */\nexport function registerLocale(locale: string, localeObj: Locale) {\n  LocaleMap[locale] = localeObj;\n}\n\n/**\n * get locale of specific language\n * @param lang\n * @returns\n */\nexport function getLocale(locale: string) {\n  return {\n    get: (key: string | string[], obj?: Record<string, any>) => {\n      return template(\n        get(LocaleMap[locale], key) || get(LocaleMap[GLOBAL.locale], key) || get(LocaleMap['en-US'], key) || key,\n        obj\n      );\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}