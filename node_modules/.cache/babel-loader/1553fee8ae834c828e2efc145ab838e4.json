{"ast":null,"code":"/** @ignore */\nexport var MarkerSymbols = {\n  hexagon: function (x, y, r) {\n    var diffX = r / 2 * Math.sqrt(3);\n    return [['M', x, y - r], ['L', x + diffX, y - r / 2], ['L', x + diffX, y + r / 2], ['L', x, y + r], ['L', x - diffX, y + r / 2], ['L', x - diffX, y - r / 2], ['Z']];\n  },\n  bowtie: function (x, y, r) {\n    var diffY = r - 1.5;\n    return [['M', x - r, y - diffY], ['L', x + r, y + diffY], ['L', x + r, y - diffY], ['L', x - r, y + diffY], ['Z']];\n  },\n  cross: function (x, y, r) {\n    return [['M', x - r, y - r], ['L', x + r, y + r], ['M', x + r, y - r], ['L', x - r, y + r]];\n  },\n  tick: function (x, y, r) {\n    return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];\n  },\n  plus: function (x, y, r) {\n    return [['M', x - r, y], ['L', x + r, y], ['M', x, y - r], ['L', x, y + r]];\n  },\n  hyphen: function (x, y, r) {\n    return [['M', x - r, y], ['L', x + r, y]];\n  },\n  line: function (x, y, r) {\n    return [['M', x, y - r], ['L', x, y + r]];\n  }\n};","map":{"version":3,"mappings":"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","names":["MarkerSymbols","hexagon","x","y","r","diffX","Math","sqrt","bowtie","diffY","cross","tick","plus","hyphen","line"],"sourceRoot":"","sources":["../../src/util/marker.ts"],"sourcesContent":["/** @ignore */\nexport const MarkerSymbols = {\n  hexagon: (x: number, y: number, r: number) => {\n    const diffX = (r / 2) * Math.sqrt(3);\n    return [\n      ['M', x, y - r],\n      ['L', x + diffX, y - r / 2],\n      ['L', x + diffX, y + r / 2],\n      ['L', x, y + r],\n      ['L', x - diffX, y + r / 2],\n      ['L', x - diffX, y - r / 2],\n      ['Z'],\n    ];\n  },\n  bowtie: (x: number, y: number, r: number) => {\n    const diffY = r - 1.5;\n    return [['M', x - r, y - diffY], ['L', x + r, y + diffY], ['L', x + r, y - diffY], ['L', x - r, y + diffY], ['Z']];\n  },\n  cross: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y - r],\n      ['L', x + r, y + r],\n      ['M', x + r, y - r],\n      ['L', x - r, y + r],\n    ];\n  },\n  tick: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r / 2, y - r],\n      ['L', x + r / 2, y - r],\n      ['M', x, y - r],\n      ['L', x, y + r],\n      ['M', x - r / 2, y + r],\n      ['L', x + r / 2, y + r],\n    ];\n  },\n  plus: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y],\n      ['L', x + r, y],\n      ['M', x, y - r],\n      ['L', x, y + r],\n    ];\n  },\n  hyphen: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y],\n      ['L', x + r, y],\n    ];\n  },\n  line: (x: number, y: number, r: number) => {\n    return [\n      ['M', x, y - r],\n      ['L', x, y + r],\n    ];\n  },\n};\n"]},"metadata":{},"sourceType":"module"}