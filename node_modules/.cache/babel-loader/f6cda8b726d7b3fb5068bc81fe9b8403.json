{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { get, last, isNil, size } from '@antv/util';\nimport { deepAssign } from '../../utils/deep-assign'; // 面包屑文字和分割符'/'之间的距离\n\nvar PADDING = 4; // 面包屑位置距离树图的距离\n\nvar PADDING_LEFT = 0; // 面包屑位置距离树图的顶部距离\n\nexport var PADDING_TOP = 5;\n/** Group name of breadCrumb: 面包屑 */\n\nexport var BREAD_CRUMB_NAME = 'drilldown-bread-crumb'; // 面包屑默认配置\n\nexport var DEFAULT_BREAD_CRUMB_CONFIG = {\n  /** 位置，默认：左上角 */\n  position: 'top-left',\n  dividerText: '/',\n  textStyle: {\n    fontSize: 12,\n    fill: 'rgba(0, 0, 0, 0.65)',\n    cursor: 'pointer'\n  },\n  activeTextStyle: {\n    fill: '#87B5FF'\n  }\n};\n/**\n * hierarchy 数据转换的参数\n */\n\nexport var HIERARCHY_DATA_TRANSFORM_PARAMS = 'hierarchy-data-transform-params';\n/**\n * @description 下钻交互的 action\n * @author liuzhenying\n *\n * 适用于：hierarchy plot\n */\n\nvar DrillDownAction =\n/** @class */\nfunction (_super) {\n  __extends(DrillDownAction, _super);\n\n  function DrillDownAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** Action name */\n\n\n    _this.name = 'drill-down'; // 存储历史下钻数据\n\n    _this.historyCache = []; // 面包屑 group\n\n    _this.breadCrumbGroup = null; // 面包屑基础配置\n\n    _this.breadCrumbCfg = DEFAULT_BREAD_CRUMB_CONFIG;\n    return _this;\n  }\n  /**\n   * 点击事件, 下钻数据，并绘制面包屑\n   */\n\n\n  DrillDownAction.prototype.click = function () {\n    var data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n    this.drill(data);\n    this.drawBreadCrumb();\n  };\n  /**\n   * 重置位置，初始化及触发 chart  afterchangesize 回调时使用\n   */\n\n\n  DrillDownAction.prototype.resetPosition = function () {\n    // 当在第一层级未绘制面包屑，此时 changedata 触发 resetPosition 函数，需判断 this.breadCrumbGroup 是否存在\n    if (!this.breadCrumbGroup) return;\n    var coordinate = this.context.view.getCoordinate();\n    var breadCrumbGroup = this.breadCrumbGroup;\n    var bbox = breadCrumbGroup.getBBox();\n    var position = this.getButtonCfg().position; // @todo 后续抽取一个函数来处理，以及增加 margin 或者 padding 的设置\n    // 非 polar 的，需要使用 coordinate，除却图表组件\n\n    var point = {\n      x: coordinate.start.x,\n      y: coordinate.end.y - (bbox.height + PADDING_TOP * 2)\n    };\n\n    if (coordinate.isPolar) {\n      // 默认，左上角直接出发\n      point = {\n        x: 0,\n        y: 0\n      };\n    }\n\n    if (position === 'bottom-left') {\n      // 涉及到坐标反转的问题\n      point = {\n        x: coordinate.start.x,\n        y: coordinate.start.y\n      };\n    }\n    /** PADDING_LEFT, PADDING_TOP 与画布边缘的距离 */\n\n\n    var matrix = Util.transform(null, [['t', point.x + PADDING_LEFT, point.y + bbox.height + PADDING_TOP]]);\n    breadCrumbGroup.setMatrix(matrix);\n  };\n  /**\n   * 返回上一层\n   */\n\n\n  DrillDownAction.prototype.back = function () {\n    if (size(this.historyCache)) {\n      this.backTo(this.historyCache.slice(0, -1));\n    }\n  };\n  /**\n   * 重置\n   */\n\n\n  DrillDownAction.prototype.reset = function () {\n    if (this.historyCache[0]) {\n      this.backTo(this.historyCache.slice(0, 1));\n    } // 清空\n\n\n    this.historyCache = [];\n    this.hideCrumbGroup();\n  };\n  /**\n   * 下钻数据并更新 view 显示层\n   * @param nodeInfo 下钻数据\n   */\n\n\n  DrillDownAction.prototype.drill = function (nodeInfo) {\n    var view = this.context.view;\n    var transformData = get(view, ['interactions', 'drill-down', 'cfg', 'transformData'], function (v) {\n      return v;\n    }); // 重新 update 数据\n\n    var drillData = transformData(__assign({\n      data: nodeInfo.data\n    }, nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS]));\n    view.changeData(drillData); // 存储历史记录\n\n    var historyCache = [];\n    var node = nodeInfo;\n\n    while (node) {\n      var nodeData = node.data;\n      historyCache.unshift({\n        id: nodeData.name + \"_\" + node.height + \"_\" + node.depth,\n        name: nodeData.name,\n        // children 是实际数据\n        children: transformData(__assign({\n          data: nodeData\n        }, nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS]))\n      });\n      node = node.parent;\n    }\n\n    this.historyCache = (this.historyCache || []).slice(0, -1).concat(historyCache);\n  };\n  /**\n   * 回退事件，点击面包屑时触发\n   * @param historyCache 当前要回退到的历史\n   */\n\n\n  DrillDownAction.prototype.backTo = function (historyCache) {\n    if (!historyCache || historyCache.length <= 0) {\n      return;\n    }\n\n    var view = this.context.view;\n    var data = last(historyCache).children; // 处理后的数组\n\n    view.changeData(data);\n\n    if (historyCache.length > 1) {\n      this.historyCache = historyCache;\n      this.drawBreadCrumb();\n    } else {\n      // 清空\n      this.historyCache = [];\n      this.hideCrumbGroup();\n    }\n  };\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n\n\n  DrillDownAction.prototype.getButtonCfg = function () {\n    var view = this.context.view;\n    var drillDownConfig = get(view, ['interactions', 'drill-down', 'cfg', 'drillDownConfig']);\n    return deepAssign(this.breadCrumbCfg, drillDownConfig === null || drillDownConfig === void 0 ? void 0 : drillDownConfig.breadCrumb, this.cfg);\n  };\n  /**\n   * 显示面包屑\n   */\n\n\n  DrillDownAction.prototype.drawBreadCrumb = function () {\n    this.drawBreadCrumbGroup();\n    this.resetPosition();\n    this.breadCrumbGroup.show();\n  };\n  /**\n   * 绘制 Button 和 文本\n   */\n\n\n  DrillDownAction.prototype.drawBreadCrumbGroup = function () {\n    var _this = this;\n\n    var config = this.getButtonCfg();\n    var cache = this.historyCache; // 初始化面包屑 group\n\n    if (!this.breadCrumbGroup) {\n      this.breadCrumbGroup = this.context.view.foregroundGroup.addGroup({\n        name: BREAD_CRUMB_NAME\n      });\n    } else {\n      this.breadCrumbGroup.clear();\n    } // 绘制面包屑\n\n\n    var left = 0;\n    cache.forEach(function (record, index) {\n      // 添加文本\n      var textShape = _this.breadCrumbGroup.addShape({\n        type: 'text',\n        id: record.id,\n        name: BREAD_CRUMB_NAME + \"_\" + record.name + \"_text\",\n        attrs: __assign(__assign({\n          text: index === 0 && !isNil(config.rootText) ? config.rootText : record.name\n        }, config.textStyle), {\n          x: left,\n          y: 0\n        })\n      });\n\n      var textShapeBox = textShape.getBBox();\n      left += textShapeBox.width + PADDING; // 增加文本事件\n\n      textShape.on('click', function (event) {\n        var _a;\n\n        var targetId = event.target.get('id');\n\n        if (targetId !== ((_a = last(cache)) === null || _a === void 0 ? void 0 : _a.id)) {\n          var newHistoryCache = cache.slice(0, cache.findIndex(function (d) {\n            return d.id === targetId;\n          }) + 1);\n\n          _this.backTo(newHistoryCache);\n        }\n      }); // active 效果内置\n\n      textShape.on('mouseenter', function (event) {\n        var _a;\n\n        var targetId = event.target.get('id');\n\n        if (targetId !== ((_a = last(cache)) === null || _a === void 0 ? void 0 : _a.id)) {\n          textShape.attr(config.activeTextStyle);\n        } else {\n          textShape.attr({\n            cursor: 'default'\n          });\n        }\n      });\n      textShape.on('mouseleave', function () {\n        textShape.attr(config.textStyle);\n      });\n\n      if (index < cache.length - 1) {\n        // 添加反斜杠\n        var dividerShape = _this.breadCrumbGroup.addShape({\n          type: 'text',\n          name: config.name + \"_\" + record.name + \"_divider\",\n          attrs: __assign(__assign({\n            text: config.dividerText\n          }, config.textStyle), {\n            x: left,\n            y: 0\n          })\n        });\n\n        var dividerBox = dividerShape.getBBox();\n        left += dividerBox.width + PADDING;\n      }\n    });\n  };\n  /**\n   * 隐藏面包屑\n   */\n\n\n  DrillDownAction.prototype.hideCrumbGroup = function () {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.hide();\n    }\n  };\n  /**\n   * @override\n   * destroy: 销毁资源\n   */\n\n\n  DrillDownAction.prototype.destroy = function () {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.remove();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  return DrillDownAction;\n}(Action);\n\nexport { DrillDownAction };","map":{"version":3,"mappings":"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","names":["Action","Util","get","last","isNil","size","deepAssign","PADDING","PADDING_LEFT","PADDING_TOP","BREAD_CRUMB_NAME","DEFAULT_BREAD_CRUMB_CONFIG","position","dividerText","textStyle","fontSize","fill","cursor","activeTextStyle","HIERARCHY_DATA_TRANSFORM_PARAMS","__extends","_this","DrillDownAction","data","context","drill","drawBreadCrumb","breadCrumbGroup","coordinate","view","getCoordinate","bbox","getBBox","getButtonCfg","point","x","start","y","end","height","isPolar","matrix","transform","setMatrix","historyCache","backTo","slice","hideCrumbGroup","nodeInfo","transformData","v","drillData","changeData","node","nodeData","unshift","id","name","depth","children","parent","concat","length","drillDownConfig","breadCrumbCfg","breadCrumb","cfg","drawBreadCrumbGroup","resetPosition","show","config","cache","foregroundGroup","addGroup","clear","left","forEach","record","index","textShape","addShape","type","attrs","text","rootText","textShapeBox","width","on","event","targetId","target","_a","newHistoryCache","findIndex","d","attr","dividerShape","dividerBox","hide","remove","_super","destroy","call"],"sourceRoot":"","sources":["../../../src/interactions/actions/drill-down.ts"],"sourcesContent":["import { Action, IGroup, Util } from '@antv/g2';\nimport { get, last, isNil, size } from '@antv/util';\nimport { Data } from '../../types';\nimport { DrillDownCfg } from '../../types/drill-down';\nimport { deepAssign } from '../../utils/deep-assign';\n\n// 面包屑文字和分割符'/'之间的距离\nconst PADDING = 4;\n// 面包屑位置距离树图的距离\nconst PADDING_LEFT = 0;\n// 面包屑位置距离树图的顶部距离\nexport const PADDING_TOP = 5;\n\n/** Group name of breadCrumb: 面包屑 */\nexport const BREAD_CRUMB_NAME = 'drilldown-bread-crumb';\n\n// 面包屑默认配置\nexport const DEFAULT_BREAD_CRUMB_CONFIG: DrillDownCfg['breadCrumb'] = {\n  /** 位置，默认：左上角 */\n  position: 'top-left',\n  dividerText: '/',\n  textStyle: {\n    fontSize: 12,\n    fill: 'rgba(0, 0, 0, 0.65)',\n    cursor: 'pointer',\n  },\n  activeTextStyle: {\n    fill: '#87B5FF',\n  },\n};\n\n/**\n * hierarchy 数据转换的参数\n */\nexport const HIERARCHY_DATA_TRANSFORM_PARAMS = 'hierarchy-data-transform-params';\n\n/**\n * Hierarchy plot 节点的数据\n */\nexport type HierarchyNode<N = any /** 节点 */> = {\n  /** 节点的原始数据，树型结构（todo 是否更正 key 为 origin） */\n  data: { name: string; value?: any; children: { name: string; value?: any }[] };\n  /** 在构建节点数据时候，增加的扩展配置, 用于存储 transformData 的入参配置 */\n  [HIERARCHY_DATA_TRANSFORM_PARAMS]: object;\n  /** 当前的层级结构，每一次下钻都会更新. 不是 unique */\n  depth: number;\n  /** 当前所处高度，depth + height = 总的层级 */\n  height: number;\n  parent: N;\n  children: N[];\n};\n\ntype HistoryCache = {\n  name: string;\n  id: string;\n  children: Data;\n}[];\n\n/**\n * @description 下钻交互的 action\n * @author liuzhenying\n *\n * 适用于：hierarchy plot\n */\nexport class DrillDownAction extends Action {\n  /** Action name */\n  public name = 'drill-down';\n\n  // 存储历史下钻数据\n  protected historyCache: HistoryCache = [];\n  // 面包屑 group\n  private breadCrumbGroup: IGroup = null;\n  // 面包屑基础配置\n  private breadCrumbCfg: DrillDownCfg['breadCrumb'] = DEFAULT_BREAD_CRUMB_CONFIG;\n\n  /**\n   * 点击事件, 下钻数据，并绘制面包屑\n   */\n  public click() {\n    const data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n\n    this.drill(data);\n    this.drawBreadCrumb();\n  }\n\n  /**\n   * 重置位置，初始化及触发 chart  afterchangesize 回调时使用\n   */\n  public resetPosition() {\n    // 当在第一层级未绘制面包屑，此时 changedata 触发 resetPosition 函数，需判断 this.breadCrumbGroup 是否存在\n    if (!this.breadCrumbGroup) return;\n    const coordinate = this.context.view.getCoordinate();\n    const breadCrumbGroup = this.breadCrumbGroup;\n    const bbox = breadCrumbGroup.getBBox();\n\n    const { position } = this.getButtonCfg();\n\n    // @todo 后续抽取一个函数来处理，以及增加 margin 或者 padding 的设置\n    // 非 polar 的，需要使用 coordinate，除却图表组件\n    let point = { x: coordinate.start.x, y: coordinate.end.y - (bbox.height + PADDING_TOP * 2) };\n    if (coordinate.isPolar) {\n      // 默认，左上角直接出发\n      point = { x: 0, y: 0 };\n    }\n    if (position === 'bottom-left') {\n      // 涉及到坐标反转的问题\n      point = { x: coordinate.start.x, y: coordinate.start.y };\n    }\n    /** PADDING_LEFT, PADDING_TOP 与画布边缘的距离 */\n    const matrix = Util.transform(null, [['t', point.x + PADDING_LEFT, point.y + bbox.height + PADDING_TOP]]);\n    breadCrumbGroup.setMatrix(matrix);\n  }\n\n  /**\n   * 返回上一层\n   */\n  public back(): void {\n    if (size(this.historyCache)) {\n      this.backTo(this.historyCache.slice(0, -1));\n    }\n  }\n\n  /**\n   * 重置\n   */\n  public reset(): void {\n    if (this.historyCache[0]) {\n      this.backTo(this.historyCache.slice(0, 1));\n    }\n    // 清空\n    this.historyCache = [];\n    this.hideCrumbGroup();\n  }\n\n  /**\n   * 下钻数据并更新 view 显示层\n   * @param nodeInfo 下钻数据\n   */\n  protected drill(nodeInfo: HierarchyNode) {\n    const { view } = this.context;\n    const transformData = get(view, ['interactions', 'drill-down', 'cfg', 'transformData'], (v) => v);\n\n    // 重新 update 数据\n    const drillData = transformData({ data: nodeInfo.data, ...nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] });\n    view.changeData(drillData);\n\n    // 存储历史记录\n    const historyCache: HistoryCache = [];\n\n    let node = nodeInfo;\n    while (node) {\n      const nodeData = node.data;\n      historyCache.unshift({\n        id: `${nodeData.name}_${node.height}_${node.depth}`,\n        name: nodeData.name,\n        // children 是实际数据\n        children: transformData({ data: nodeData, ...nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] }),\n      });\n      node = node.parent;\n    }\n\n    this.historyCache = (this.historyCache || []).slice(0, -1).concat(historyCache);\n  }\n\n  /**\n   * 回退事件，点击面包屑时触发\n   * @param historyCache 当前要回退到的历史\n   */\n  protected backTo(historyCache: HistoryCache) {\n    if (!historyCache || historyCache.length <= 0) {\n      return;\n    }\n\n    const { view } = this.context;\n    const data = last(historyCache).children; // 处理后的数组\n    view.changeData(data);\n\n    if (historyCache.length > 1) {\n      this.historyCache = historyCache;\n      this.drawBreadCrumb();\n    } else {\n      // 清空\n      this.historyCache = [];\n      this.hideCrumbGroup();\n    }\n  }\n\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n  private getButtonCfg() {\n    const { view } = this.context;\n    const drillDownConfig: DrillDownCfg = get(view, ['interactions', 'drill-down', 'cfg', 'drillDownConfig']);\n\n    return deepAssign(this.breadCrumbCfg, drillDownConfig?.breadCrumb, this.cfg);\n  }\n\n  /**\n   * 显示面包屑\n   */\n  private drawBreadCrumb() {\n    this.drawBreadCrumbGroup();\n    this.resetPosition();\n    this.breadCrumbGroup.show();\n  }\n\n  /**\n   * 绘制 Button 和 文本\n   */\n  private drawBreadCrumbGroup() {\n    const config = this.getButtonCfg();\n    const cache = this.historyCache;\n\n    // 初始化面包屑 group\n    if (!this.breadCrumbGroup) {\n      this.breadCrumbGroup = this.context.view.foregroundGroup.addGroup({\n        name: BREAD_CRUMB_NAME,\n      });\n    } else {\n      this.breadCrumbGroup.clear();\n    }\n\n    // 绘制面包屑\n    let left = 0;\n    cache.forEach((record, index) => {\n      // 添加文本\n      const textShape = this.breadCrumbGroup.addShape({\n        type: 'text',\n        id: record.id,\n        name: `${BREAD_CRUMB_NAME}_${record.name}_text`,\n        attrs: {\n          text: index === 0 && !isNil(config.rootText) ? config.rootText : record.name,\n          ...config.textStyle,\n          x: left,\n          y: 0,\n        },\n      });\n\n      const textShapeBox = textShape.getBBox();\n      left += textShapeBox.width + PADDING;\n\n      // 增加文本事件\n      textShape.on('click', (event) => {\n        const targetId = event.target.get('id');\n        if (targetId !== last(cache)?.id) {\n          const newHistoryCache = cache.slice(0, cache.findIndex((d) => d.id === targetId) + 1);\n          this.backTo(newHistoryCache);\n        }\n      });\n      // active 效果内置\n      textShape.on('mouseenter', (event) => {\n        const targetId = event.target.get('id');\n        if (targetId !== last(cache)?.id) {\n          textShape.attr(config.activeTextStyle);\n        } else {\n          textShape.attr({ cursor: 'default' });\n        }\n      });\n      textShape.on('mouseleave', () => {\n        textShape.attr(config.textStyle);\n      });\n\n      if (index < cache.length - 1) {\n        // 添加反斜杠\n        const dividerShape = this.breadCrumbGroup.addShape({\n          type: 'text',\n          name: `${config.name}_${record.name}_divider`,\n          attrs: {\n            text: config.dividerText,\n            ...config.textStyle,\n            x: left,\n            y: 0,\n          },\n        });\n\n        const dividerBox = dividerShape.getBBox();\n        left += dividerBox.width + PADDING;\n      }\n    });\n  }\n\n  /**\n   * 隐藏面包屑\n   */\n  private hideCrumbGroup() {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.hide();\n    }\n  }\n\n  /**\n   * @override\n   * destroy: 销毁资源\n   */\n  public destroy() {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.remove();\n    }\n    super.destroy();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}