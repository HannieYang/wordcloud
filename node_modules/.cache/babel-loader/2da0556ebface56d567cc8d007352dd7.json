{"ast":null,"code":"import { assign } from '@antv/util';\n/**\n * Action 的基类\n */\n\nvar Action =\n/** @class */\nfunction () {\n  function Action(context, cfg) {\n    this.context = context;\n    this.cfg = cfg;\n    context.addAction(this);\n  }\n  /**\n   * 设置配置项传入的值\n   * @param cfg\n   */\n\n\n  Action.prototype.applyCfg = function (cfg) {\n    assign(this, cfg);\n  };\n  /**\n   * Inits action，提供给子类用于继承\n   */\n\n\n  Action.prototype.init = function () {\n    this.applyCfg(this.cfg);\n  };\n  /**\n   * Destroys action\n   */\n\n\n  Action.prototype.destroy = function () {\n    // 移除 action\n    this.context.removeAction(this); // 清空\n\n    this.context = null;\n  };\n\n  return Action;\n}();\n\nexport default Action;","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB;AAGA;;;;AAGA;AAAA;AAAA;EAUE,gBAAYC,OAAZ,EAA0CC,GAA1C,EAAiD;IAC/C,KAAKD,OAAL,GAAeA,OAAf;IACA,KAAKC,GAAL,GAAWA,GAAX;IACAD,OAAO,CAACE,SAAR,CAAkB,IAAlB;EACD;EAED;;;;;;EAIUC,4BAAV,UAAmBF,GAAnB,EAAsB;IACpBF,MAAM,CAAC,IAAD,EAAOE,GAAP,CAAN;EACD,CAFS;EAIV;;;;;EAGOE,wBAAP;IACE,KAAKC,QAAL,CAAc,KAAKH,GAAnB;EACD,CAFM;EAIP;;;;;EAGOE,2BAAP;IACE;IACA,KAAKH,OAAL,CAAaK,YAAb,CAA0B,IAA1B,EAFF,CAGE;;IACA,KAAKL,OAAL,GAAe,IAAf;EACD,CALM;;EAMT;AAAC,CAxCD;;AA0CA,eAAeG,MAAf","names":["assign","context","cfg","addAction","Action","applyCfg","removeAction"],"sourceRoot":"","sources":["../../../src/interaction/action/base.ts"],"sourcesContent":["import { assign } from '@antv/util';\nimport { IAction, IInteractionContext, LooseObject } from '../../interface';\n\n/**\n * Action 的基类\n */\nabstract class Action<T = LooseObject> implements IAction {\n  /** Action 名字 */\n  public name;\n  /** 上下文对象 */\n  public context: IInteractionContext;\n  /** Action 配置 */\n  protected cfg: T;\n  /** 配置项的字段，自动负值到 this 上 */\n  protected cfgFields: string[];\n\n  constructor(context: IInteractionContext, cfg?: T) {\n    this.context = context;\n    this.cfg = cfg;\n    context.addAction(this);\n  }\n\n  /**\n   * 设置配置项传入的值\n   * @param cfg\n   */\n  protected applyCfg(cfg) {\n    assign(this, cfg);\n  }\n\n  /**\n   * Inits action，提供给子类用于继承\n   */\n  public init() {\n    this.applyCfg(this.cfg);\n  }\n\n  /**\n   * Destroys action\n   */\n  public destroy() {\n    // 移除 action\n    this.context.removeAction(this);\n    // 清空\n    this.context = null;\n  }\n}\n\nexport default Action;\n"]},"metadata":{},"sourceType":"module"}