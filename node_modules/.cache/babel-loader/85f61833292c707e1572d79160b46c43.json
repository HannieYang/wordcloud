{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as _ from '@antv/util';\nimport Adjust from './adjust';\nvar Cache = _.Cache;\n\nvar Stack =\n/** @class */\nfunction (_super) {\n  __extends(Stack, _super);\n\n  function Stack(cfg) {\n    var _this = _super.call(this, cfg) || this;\n\n    var _a = cfg.adjustNames,\n        adjustNames = _a === void 0 ? ['y'] : _a,\n        _b = cfg.height,\n        height = _b === void 0 ? NaN : _b,\n        _c = cfg.size,\n        size = _c === void 0 ? 10 : _c,\n        _d = cfg.reverseOrder,\n        reverseOrder = _d === void 0 ? false : _d;\n    _this.adjustNames = adjustNames;\n    _this.height = height;\n    _this.size = size;\n    _this.reverseOrder = reverseOrder;\n    return _this;\n  }\n  /**\n   * 方法入参是经过数据分组、数据数字化之后的二维数组\n   * @param groupDataArray 分组之后的数据\n   */\n\n\n  Stack.prototype.process = function (groupDataArray) {\n    var _a = this,\n        yField = _a.yField,\n        reverseOrder = _a.reverseOrder; // 如果有指定 y 字段，那么按照 y 字段来 stack\n    // 否则，按照高度均分\n\n\n    var d = yField ? this.processStack(groupDataArray) : this.processOneDimStack(groupDataArray);\n    return reverseOrder ? this.reverse(d) : d;\n  };\n\n  Stack.prototype.reverse = function (groupedDataArray) {\n    return groupedDataArray.slice(0).reverse();\n  };\n\n  Stack.prototype.processStack = function (groupDataArray) {\n    var _a = this,\n        xField = _a.xField,\n        yField = _a.yField,\n        reverseOrder = _a.reverseOrder; // 层叠顺序翻转\n\n\n    var groupedDataArray = reverseOrder ? this.reverse(groupDataArray) : groupDataArray; // 用来缓存，正数和负数的堆叠问题\n\n    var positive = new Cache();\n    var negative = new Cache();\n    return groupedDataArray.map(function (dataArray) {\n      return dataArray.map(function (data) {\n        var _a;\n\n        var x = _.get(data, xField, 0);\n\n        var y = _.get(data, [yField]);\n\n        var xKey = x.toString(); // todo 是否应该取 _origin？因为 y 可能取到的值不正确，比如先 symmetric，再 stack！\n\n        y = _.isArray(y) ? y[1] : y;\n\n        if (!_.isNil(y)) {\n          var cache = y >= 0 ? positive : negative;\n\n          if (!cache.has(xKey)) {\n            cache.set(xKey, 0);\n          }\n\n          var xValue = cache.get(xKey);\n          var newXValue = y + xValue; // 存起来\n\n          cache.set(xKey, newXValue);\n          return __assign(__assign({}, data), (_a = {}, _a[yField] = [xValue, newXValue], _a));\n        } // 没有修改，则直接返回\n\n\n        return data;\n      });\n    });\n  };\n\n  Stack.prototype.processOneDimStack = function (groupDataArray) {\n    var _this = this;\n\n    var _a = this,\n        xField = _a.xField,\n        height = _a.height,\n        reverseOrder = _a.reverseOrder;\n\n    var yField = 'y'; // 如果层叠的顺序翻转\n\n    var groupedDataArray = reverseOrder ? this.reverse(groupDataArray) : groupDataArray; // 缓存累加数据\n\n    var cache = new Cache();\n    return groupedDataArray.map(function (dataArray) {\n      return dataArray.map(function (data) {\n        var _a;\n\n        var size = _this.size;\n        var xValue = data[xField]; // todo 没有看到这个 stack 计算原理\n\n        var stackHeight = size * 2 / height;\n\n        if (!cache.has(xValue)) {\n          cache.set(xValue, stackHeight / 2); // 初始值大小\n        }\n\n        var stackValue = cache.get(xValue); // 增加一层 stackHeight\n\n        cache.set(xValue, stackValue + stackHeight);\n        return __assign(__assign({}, data), (_a = {}, _a[yField] = stackValue, _a));\n      });\n    });\n  };\n\n  return Stack;\n}(Adjust);\n\nexport default Stack;","map":{"version":3,"mappings":"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","names":["_","Adjust","Cache","__extends","cfg","_super","_a","_b","height","NaN","_c","size","_d","reverseOrder","_this","adjustNames","Stack","groupDataArray","yField","d","processStack","processOneDimStack","reverse","groupedDataArray","slice","xField","positive","negative","map","dataArray","data","x","get","y","xKey","toString","isArray","isNil","cache","has","set","xValue","newXValue","stackHeight","stackValue"],"sourceRoot":"","sources":["../../src/adjusts/stack.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}