{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n/** 线条形 marker symbol */\n\nvar STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\n\nfunction handleUserMarkerStyle(markerStyle, style) {\n  if (isFunction(style)) {\n    return style(markerStyle);\n  }\n\n  return deepMix({}, markerStyle, style);\n}\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\n\n\nfunction adpatorMarkerStyle(marker, color) {\n  var symbol = marker.symbol;\n\n  if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n    var markerStyle = get(marker, 'style', {});\n    var lineWidth = get(markerStyle, 'lineWidth', 1);\n    var stroke = markerStyle.stroke || markerStyle.fill || color;\n    marker.style = deepMix({}, marker.style, {\n      lineWidth: lineWidth,\n      stroke: stroke,\n      fill: null\n    });\n  }\n}\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\n\n\nfunction setMarkerSymbol(marker) {\n  var symbol = marker.symbol;\n\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\n\n\nexport function getLegendLayout(direction) {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\n\nexport function getLegendItems(view, geometry, attr, themeMarker, userMarker) {\n  var scale = attr.getScale(attr.type);\n\n  if (scale.isCategory) {\n    var field_1 = scale.field;\n    var colorAttr_1 = geometry.getAttribute('color');\n    var shapeAttr_1 = geometry.getAttribute('shape');\n    var defaultColor_1 = view.getTheme().defaultColor;\n    var isInPolar_1 = geometry.coordinate.isPolar;\n    return scale.getTicks().map(function (tick, index) {\n      var _a;\n\n      var text = tick.text,\n          scaleValue = tick.value;\n      var name = text;\n      var value = scale.invert(scaleValue); // 通过过滤图例项的数据，来看是否 unchecked\n\n      var unchecked = view.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length === 0;\n      each(view.views, function (subView) {\n        var _a;\n\n        if (!subView.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length) {\n          unchecked = true;\n        }\n      }); // @ts-ignore\n\n      var color = getMappingValue(colorAttr_1, value, defaultColor_1);\n      var shape = getMappingValue(shapeAttr_1, value, 'point');\n      var marker = geometry.getShapeMarker(shape, {\n        color: color,\n        isInPolar: isInPolar_1\n      });\n      var markerCfg = userMarker;\n\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(name, index, __assign({\n          name: name,\n          value: value\n        }, deepMix({}, themeMarker, marker)));\n      } // the marker configure order should be ensure\n\n\n      marker = deepMix({}, themeMarker, marker, omit(__assign({}, markerCfg), ['style']));\n      adpatorMarkerStyle(marker, color);\n\n      if (markerCfg && markerCfg.style) {\n        // handle user's style settings\n        marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n      }\n\n      setMarkerSymbol(marker);\n      return {\n        id: value,\n        name: name,\n        value: value,\n        marker: marker,\n        unchecked: unchecked\n      };\n    });\n  }\n\n  return [];\n}\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\n\nexport function getCustomLegendItems(themeMarker, userMarker, customItems) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map(function (item, index) {\n    var markerCfg = userMarker;\n\n    if (isFunction(markerCfg)) {\n      markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item));\n    }\n\n    var itemMarker = isFunction(item.marker) ? item.marker(item.name, index, deepMix({}, themeMarker, item)) : item.marker;\n    var marker = deepMix({}, themeMarker, markerCfg, itemMarker);\n    setMarkerSymbol(marker);\n    item.marker = marker;\n    return item;\n  });\n}\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\n\nexport function getLegendThemeCfg(theme, direction) {\n  var legendTheme = get(theme, ['components', 'legend'], {});\n  return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}","map":{"version":3,"mappings":"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","names":["deepMix","isString","each","get","isFunction","DIRECTION","getMappingValue","omit","MarkerSymbols","STROKES_SYMBOLS","handleUserMarkerStyle","markerStyle","style","adpatorMarkerStyle","marker","color","symbol","indexOf","lineWidth","stroke","fill","setMarkerSymbol","getLegendLayout","direction","startsWith","LEFT","RIGHT","getLegendItems","view","geometry","attr","themeMarker","userMarker","scale","getScale","type","isCategory","field_1","field","colorAttr_1","getAttribute","shapeAttr_1","defaultColor_1","getTheme","defaultColor","isInPolar_1","coordinate","isPolar","getTicks","map","tick","index","scaleValue","name","text","value","invert","unchecked","filterFieldData","_a","length","views","subView","shape","getShapeMarker","isInPolar","markerCfg","__assign","id","getCustomLegendItems","customItems","item","itemMarker","getLegendThemeCfg","theme","legendTheme"],"sourceRoot":"","sources":["../../src/util/legend.ts"],"sourcesContent":["import { LegendMarkerCfg } from '@antv/component';\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport View from '../chart/view';\nimport { DIRECTION } from '../constant';\nimport { Attribute, ShapeAttrs, Tick } from '../dependents';\nimport Geometry from '../geometry/base';\nimport { LegendCfg, LegendItem, MarkerCfg } from '../interface';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n\n/** 线条形 marker symbol */\nconst STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\nfunction handleUserMarkerStyle(markerStyle: ShapeAttrs, style: MarkerCfg['style']): ShapeAttrs {\n  if (isFunction(style)) {\n    return style(markerStyle);\n  }\n  return deepMix({}, markerStyle, style);\n}\n\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\nfunction adpatorMarkerStyle(marker: LegendMarkerCfg, color: string): void {\n  const symbol = marker.symbol;\n  if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n    const markerStyle = get(marker, 'style', {});\n    const lineWidth = get(markerStyle, 'lineWidth', 1);\n    const stroke = markerStyle.stroke || markerStyle.fill || color;\n    marker.style = deepMix({}, marker.style, { lineWidth, stroke, fill: null });\n  }\n}\n\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\nfunction setMarkerSymbol(marker: LegendMarkerCfg): void {\n  const symbol = marker.symbol;\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction: DIRECTION): 'vertical' | 'horizontal' {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n\n/** item of @antv/component legend  */\ntype ComponentLegendItem = Omit<LegendItem, 'marker'> & {\n  marker: any;\n};\n\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\nexport function getLegendItems(\n  view: View,\n  geometry: Geometry,\n  attr: Attribute,\n  themeMarker: object,\n  userMarker: LegendCfg['marker']\n): ComponentLegendItem[] {\n  const scale = attr.getScale(attr.type);\n  if (scale.isCategory) {\n    const field = scale.field;\n    const colorAttr = geometry.getAttribute('color');\n    const shapeAttr = geometry.getAttribute('shape');\n    const defaultColor = view.getTheme().defaultColor;\n    const isInPolar = geometry.coordinate.isPolar;\n\n    return scale.getTicks().map((tick: Tick, index: number) => {\n      const { text, value: scaleValue } = tick;\n      const name = text;\n      const value = scale.invert(scaleValue);\n\n      // 通过过滤图例项的数据，来看是否 unchecked\n      let unchecked = view.filterFieldData(field, [{ [field]: value }]).length === 0;\n      each(view.views, (subView) => {\n        if (!subView.filterFieldData(field, [{ [field]: value }]).length) {\n          unchecked = true;\n        }\n      });\n\n      // @ts-ignore\n      const color = getMappingValue(colorAttr, value, defaultColor);\n      const shape = getMappingValue(shapeAttr, value, 'point');\n      let marker = geometry.getShapeMarker(shape, {\n        color,\n        isInPolar,\n      });\n\n      let markerCfg = userMarker;\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(name, index, { name, value, ...deepMix({}, themeMarker, marker) });\n      }\n\n      // the marker configure order should be ensure\n      marker = deepMix({}, themeMarker, marker, omit({ ...markerCfg }, ['style']));\n      adpatorMarkerStyle(marker, color);\n      if (markerCfg && markerCfg.style) {\n        // handle user's style settings\n        marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n      }\n      setMarkerSymbol(marker);\n\n      return { id: value, name, value, marker, unchecked };\n    });\n  }\n  return [];\n}\n\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker: object, userMarker: object, customItems: LegendItem[]) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map((item: LegendItem, index: number) => {\n    let markerCfg = userMarker;\n    if (isFunction(markerCfg)) {\n      markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item));\n    }\n\n    const itemMarker = isFunction(item.marker)\n      ? item.marker(item.name, index, deepMix({}, themeMarker, item))\n      : item.marker;\n\n    const marker = deepMix({}, themeMarker, markerCfg, itemMarker);\n    setMarkerSymbol(marker);\n\n    item.marker = marker;\n    return item;\n  });\n}\n\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\nexport function getLegendThemeCfg(theme: object, direction: string): object {\n  const legendTheme = get(theme, ['components', 'legend'], {});\n  return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}\n"]},"metadata":{},"sourceType":"module"}