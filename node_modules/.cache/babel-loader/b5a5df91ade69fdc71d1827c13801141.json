{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { __extends } from \"tslib\";\nimport { getElements, getElementValue, getCurrentElement } from '../util';\nimport Highlight, { STATUS_ACTIVE, STATUS_UNACTIVE } from './highlight';\n/**\n * Highlight x\n * @ignore\n */\n\nvar HighlightX =\n/** @class */\nfunction (_super) {\n  __extends(HighlightX, _super);\n\n  function HighlightX() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // 不允许多选\n\n\n  HighlightX.prototype.setElementHighlight = function (el, callback) {\n    if (callback(el)) {\n      if (el.hasState(STATUS_UNACTIVE)) {\n        el.setState(STATUS_UNACTIVE, false);\n      }\n\n      el.setState(STATUS_ACTIVE, true);\n    } else {\n      el.setState(STATUS_UNACTIVE, true);\n\n      if (el.hasState(STATUS_ACTIVE)) {\n        el.setState(STATUS_ACTIVE, false);\n      }\n    }\n  };\n\n  HighlightX.prototype.setStateByElement = function (element, enable) {\n    var view = this.context.view;\n    var scale = view.getXScale();\n    var value = getElementValue(element, scale.field);\n    var elements = getElements(view);\n    var highlightElements = elements.filter(function (el) {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, function (el) {\n      return highlightElements.includes(el);\n    }, enable);\n  };\n  /**\n   * 切换状态\n   */\n\n\n  HighlightX.prototype.toggle = function () {\n    var element = getCurrentElement(this.context);\n\n    if (element) {\n      var hasState = element.hasState(this.stateName);\n      this.setStateByElement(element, !hasState);\n    }\n  };\n\n  return HighlightX;\n}(Highlight);\n\nexport default HighlightX;","map":{"version":3,"mappings":";;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,iBAAvC,QAAgE,SAAhE;AACA,OAAOC,SAAP,IAAoBC,aAApB,EAAmCC,eAAnC,QAAoE,aAApE;AAEA;;;;;AAIA;AAAA;AAAA;EAAyBC;;EAAzB;;EAqCC,CArCD,CACE;;;EACUC,2CAAV,UAA8BC,EAA9B,EAA2CC,QAA3C,EAA6D;IAC3D,IAAIA,QAAQ,CAACD,EAAD,CAAZ,EAAkB;MAChB,IAAIA,EAAE,CAACE,QAAH,CAAYL,eAAZ,CAAJ,EAAkC;QAChCG,EAAE,CAACG,QAAH,CAAYN,eAAZ,EAA6B,KAA7B;MACD;;MACDG,EAAE,CAACG,QAAH,CAAYP,aAAZ,EAA2B,IAA3B;IACD,CALD,MAKO;MACLI,EAAE,CAACG,QAAH,CAAYN,eAAZ,EAA6B,IAA7B;;MACA,IAAIG,EAAE,CAACE,QAAH,CAAYN,aAAZ,CAAJ,EAAgC;QAC9BI,EAAE,CAACG,QAAH,CAAYP,aAAZ,EAA2B,KAA3B;MACD;IACF;EACF,CAZS;;EAcAG,yCAAV,UAA4BK,OAA5B,EAA8CC,MAA9C,EAA6D;IAC3D,IAAMC,IAAI,GAAG,KAAKC,OAAL,CAAaD,IAA1B;IACA,IAAME,KAAK,GAAGF,IAAI,CAACG,SAAL,EAAd;IACA,IAAMC,KAAK,GAAGjB,eAAe,CAACW,OAAD,EAAUI,KAAK,CAACG,KAAhB,CAA7B;IACA,IAAMC,QAAQ,GAAGpB,WAAW,CAACc,IAAD,CAA5B;IACA,IAAMO,iBAAiB,GAAGD,QAAQ,CAACE,MAAT,CAAgB,UAACd,EAAD,EAAG;MAC3C,OAAOP,eAAe,CAACO,EAAD,EAAKQ,KAAK,CAACG,KAAX,CAAf,KAAqCD,KAA5C;IACD,CAFyB,CAA1B;IAGA,KAAKK,cAAL,CAAoBH,QAApB,EAA8B,UAACZ,EAAD,EAAG;MAAK,wBAAiB,CAACgB,QAAlB,CAA2BhB,EAA3B;IAA8B,CAApE,EAAsEK,MAAtE;EACD,CATS;EAWV;;;;;EAGON,8BAAP;IACE,IAAMK,OAAO,GAAGV,iBAAiB,CAAC,KAAKa,OAAN,CAAjC;;IACA,IAAIH,OAAJ,EAAa;MACX,IAAMF,QAAQ,GAAGE,OAAO,CAACF,QAAR,CAAiB,KAAKe,SAAtB,CAAjB;MACA,KAAKC,iBAAL,CAAuBd,OAAvB,EAAgC,CAACF,QAAjC;IACD;EACF,CANM;;EAOT;AAAC,CArCD,CAAyBP,SAAzB;;AAuCA,eAAeI,UAAf","names":["getElements","getElementValue","getCurrentElement","Highlight","STATUS_ACTIVE","STATUS_UNACTIVE","__extends","HighlightX","el","callback","hasState","setState","element","enable","view","context","scale","getXScale","value","field","elements","highlightElements","filter","setHighlightBy","includes","stateName","setStateByElement"],"sourceRoot":"","sources":["../../../../src/interaction/action/element/highlight-by-x.ts"],"sourcesContent":["import Element from '../../../geometry/element/';\nimport { getElements, getElementValue, getCurrentElement } from '../util';\nimport Highlight, { STATUS_ACTIVE, STATUS_UNACTIVE, Callback } from './highlight';\n\n/**\n * Highlight x\n * @ignore\n */\nclass HighlightX extends Highlight {\n  // 不允许多选\n  protected setElementHighlight(el: Element, callback: Callback) {\n    if (callback(el)) {\n      if (el.hasState(STATUS_UNACTIVE)) {\n        el.setState(STATUS_UNACTIVE, false);\n      }\n      el.setState(STATUS_ACTIVE, true);\n    } else {\n      el.setState(STATUS_UNACTIVE, true);\n      if (el.hasState(STATUS_ACTIVE)) {\n        el.setState(STATUS_ACTIVE, false);\n      }\n    }\n  }\n\n  protected setStateByElement(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const scale = view.getXScale();\n    const value = getElementValue(element, scale.field);\n    const elements = getElements(view);\n    const highlightElements = elements.filter((el) => {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, (el) => highlightElements.includes(el), enable);\n  }\n\n  /**\n   * 切换状态\n   */\n  public toggle() {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      const hasState = element.hasState(this.stateName);\n      this.setStateByElement(element, !hasState);\n    }\n  }\n}\n\nexport default HighlightX;\n"]},"metadata":{},"sourceType":"module"}