{"ast":null,"code":"import { each, get } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getReplaceAttrs } from '../util/graphics';\n/**\n * @desc 更新 label (目前没有根据 id 索引，还是会存在一点小问题的，只能根据 idx 索引)\n * @done shape 属性更新\n * @done shape delete\n * @done shape append\n *\n * @param fromShape old labelShape\n * @param toShape new labelShape\n * @param cfg\n */\n\nexport function updateLabel(fromShape, toShape, cfg) {\n  var data = cfg.data,\n      origin = cfg.origin,\n      animateCfg = cfg.animateCfg,\n      coordinate = cfg.coordinate;\n  var updateAnimateCfg = get(animateCfg, 'update');\n  fromShape.set('data', data);\n  fromShape.set('origin', origin);\n  fromShape.set('animateCfg', animateCfg);\n  fromShape.set('coordinate', coordinate);\n  fromShape.set('visible', toShape.get('visible'));\n  (fromShape.getChildren() || []).forEach(function (fromChild, idx) {\n    var toChild = toShape.getChildByIndex(idx);\n\n    if (!toChild) {\n      fromShape.removeChild(fromChild);\n      fromChild.remove(true);\n    } else {\n      fromChild.set('data', data);\n      fromChild.set('origin', origin);\n      fromChild.set('animateCfg', animateCfg);\n      fromChild.set('coordinate', coordinate);\n      var newAttrs = getReplaceAttrs(fromChild, toChild);\n\n      if (updateAnimateCfg) {\n        doAnimate(fromChild, updateAnimateCfg, {\n          toAttrs: newAttrs,\n          coordinate: coordinate\n        });\n      } else {\n        fromChild.attr(newAttrs);\n      }\n\n      if (toChild.isGroup()) {\n        updateLabel(fromChild, toChild, cfg);\n      }\n    }\n  }); // append\n\n  each(toShape.getChildren(), function (child, idx) {\n    if (idx >= fromShape.getCount()) {\n      if (!child.destroyed) {\n        fromShape.add(child);\n      }\n    }\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,IAAT,EAAeC,GAAf,QAA0B,YAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAUA;;;;;;;;;;;AAUA,OAAM,SAAUC,WAAV,CAAsBC,SAAtB,EAAyCC,OAAzC,EAA0DC,GAA1D,EAAkE;EAC9D,QAAI,GAAqCA,GAAG,KAA5C;EAAA,IAAMC,MAAM,GAA6BD,GAAG,OAA5C;EAAA,IAAcE,UAAU,GAAiBF,GAAG,WAA5C;EAAA,IAA0BG,UAAU,GAAKH,GAAG,WAA5C;EACR,IAAMI,gBAAgB,GAAGV,GAAG,CAACQ,UAAD,EAAa,QAAb,CAA5B;EAEAJ,SAAS,CAACO,GAAV,CAAc,MAAd,EAAsBC,IAAtB;EACAR,SAAS,CAACO,GAAV,CAAc,QAAd,EAAwBJ,MAAxB;EACAH,SAAS,CAACO,GAAV,CAAc,YAAd,EAA4BH,UAA5B;EACAJ,SAAS,CAACO,GAAV,CAAc,YAAd,EAA4BF,UAA5B;EACAL,SAAS,CAACO,GAAV,CAAc,SAAd,EAAyBN,OAAO,CAACL,GAAR,CAAY,SAAZ,CAAzB;EAEA,CAACI,SAAS,CAACS,WAAV,MAA2B,EAA5B,EAAgCC,OAAhC,CAAwC,UAACC,SAAD,EAAYC,GAAZ,EAAe;IACrD,IAAMC,OAAO,GAAGZ,OAAO,CAACa,eAAR,CAAwBF,GAAxB,CAAhB;;IACA,IAAI,CAACC,OAAL,EAAc;MACZb,SAAS,CAACe,WAAV,CAAsBJ,SAAtB;MACAA,SAAS,CAACK,MAAV,CAAiB,IAAjB;IACD,CAHD,MAGO;MACLL,SAAS,CAACJ,GAAV,CAAc,MAAd,EAAsBC,IAAtB;MACAG,SAAS,CAACJ,GAAV,CAAc,QAAd,EAAwBJ,MAAxB;MACAQ,SAAS,CAACJ,GAAV,CAAc,YAAd,EAA4BH,UAA5B;MACAO,SAAS,CAACJ,GAAV,CAAc,YAAd,EAA4BF,UAA5B;MAEA,IAAMY,QAAQ,GAAGnB,eAAe,CAACa,SAAD,EAAsBE,OAAtB,CAAhC;;MACA,IAAIP,gBAAJ,EAAsB;QACpBT,SAAS,CAACc,SAAD,EAAsBL,gBAAtB,EAAwC;UAC/CY,OAAO,EAAED,QADsC;UAE/CZ,UAAU;QAFqC,CAAxC,CAAT;MAID,CALD,MAKO;QACLM,SAAS,CAACQ,IAAV,CAAeF,QAAf;MACD;;MACD,IAAIJ,OAAO,CAACO,OAAR,EAAJ,EAAuB;QACrBrB,WAAW,CAACY,SAAD,EAAmBE,OAAnB,EAAmCX,GAAnC,CAAX;MACD;IACF;EACF,CAxBD,EAVsE,CAoCtE;;EACAP,IAAI,CAACM,OAAO,CAACQ,WAAR,EAAD,EAAwB,UAACY,KAAD,EAAQT,GAAR,EAAW;IACrC,IAAIA,GAAG,IAAIZ,SAAS,CAACsB,QAAV,EAAX,EAAiC;MAC/B,IAAI,CAACD,KAAK,CAACE,SAAX,EAAsB;QACpBvB,SAAS,CAACwB,GAAV,CAAcH,KAAd;MACD;IACF;EACF,CANG,CAAJ;AAOD","names":["each","get","doAnimate","getReplaceAttrs","updateLabel","fromShape","toShape","cfg","origin","animateCfg","coordinate","updateAnimateCfg","set","data","getChildren","forEach","fromChild","idx","toChild","getChildByIndex","removeChild","remove","newAttrs","toAttrs","attr","isGroup","child","getCount","destroyed","add"],"sourceRoot":"","sources":["../../src/component/update-label.ts"],"sourcesContent":["import { Coordinate } from '@antv/coord';\nimport { IGroup, IShape } from '@antv/g-base';\nimport { each, get } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getReplaceAttrs } from '../util/graphics';\n\n/** label 的必要配置 */\ntype Cfg = {\n  data: any;\n  origin: any;\n  animateCfg: any;\n  coordinate: Coordinate;\n};\n\n/**\n * @desc 更新 label (目前没有根据 id 索引，还是会存在一点小问题的，只能根据 idx 索引)\n * @done shape 属性更新\n * @done shape delete\n * @done shape append\n *\n * @param fromShape old labelShape\n * @param toShape new labelShape\n * @param cfg\n */\nexport function updateLabel(fromShape: IGroup, toShape: IGroup, cfg: Cfg): void {\n  const { data, origin, animateCfg, coordinate } = cfg;\n  const updateAnimateCfg = get(animateCfg, 'update');\n\n  fromShape.set('data', data);\n  fromShape.set('origin', origin);\n  fromShape.set('animateCfg', animateCfg);\n  fromShape.set('coordinate', coordinate);\n  fromShape.set('visible', toShape.get('visible'));\n\n  (fromShape.getChildren() || []).forEach((fromChild, idx) => {\n    const toChild = toShape.getChildByIndex(idx) as IShape;\n    if (!toChild) {\n      fromShape.removeChild(fromChild);\n      fromChild.remove(true);\n    } else {\n      fromChild.set('data', data);\n      fromChild.set('origin', origin);\n      fromChild.set('animateCfg', animateCfg);\n      fromChild.set('coordinate', coordinate);\n\n      const newAttrs = getReplaceAttrs(fromChild as IShape, toChild);\n      if (updateAnimateCfg) {\n        doAnimate(fromChild as IShape, updateAnimateCfg, {\n          toAttrs: newAttrs,\n          coordinate,\n        });\n      } else {\n        fromChild.attr(newAttrs);\n      }\n      if (toChild.isGroup()) {\n        updateLabel(fromChild as any, toChild as any, cfg);\n      }\n    }\n  });\n\n  // append\n  each(toShape.getChildren(), (child, idx) => {\n    if (idx >= fromShape.getCount()) {\n      if (!child.destroyed) {\n        fromShape.add(child);\n      }\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}