{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { VIEW_LIFE_CIRCLE, Event } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { getLiquidData } from './utils'; // register liquid shape\n\nimport './shapes/liquid';\nexport { addWaterWave } from './shapes/liquid';\n/**\n * 传说中的水波图\n */\n\nvar Liquid =\n/** @class */\nfunction (_super) {\n  __extends(Liquid, _super);\n\n  function Liquid() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'liquid';\n    return _this;\n  }\n  /**\n   * 获取 饼图 默认配置项\n   * 供外部使用\n   */\n\n\n  Liquid.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * 获取 水波图 默认配置项, 供 base 获取\n   */\n\n\n  Liquid.prototype.getDefaultOptions = function () {\n    return Liquid.getDefaultOptions();\n  };\n  /**\n   * 更新数据\n   * @param percent\n   */\n\n\n  Liquid.prototype.changeData = function (percent) {\n    this.chart.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null));\n    this.updateOption({\n      percent: percent\n    });\n    this.chart.data(getLiquidData(percent));\n    statistic({\n      chart: this.chart,\n      options: this.options\n    }, true);\n    this.chart.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null));\n  };\n  /**\n   * 获取适配器\n   */\n\n\n  Liquid.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Liquid;\n}(Plot);\n\nexport { Liquid };","map":{"version":3,"mappings":";AAAA,SAASA,gBAAT,EAA2BC,KAA3B,QAAwC,UAAxC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAGA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,aAAT,QAA8B,SAA9B,C,CACA;;AACA,OAAO,iBAAP;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAIA;;;;AAGA;AAAA;AAAA;EAA4BC;;EAA5B;IAAA;IASE;;;IACOC,aAAe,QAAf;;EAmCR;EA5CC;;;;;;EAIOC,2BAAP;IACE,OAAOL,eAAP;EACD,CAFM;EAOP;;;;;EAGUK,qCAAV;IACE,OAAOA,MAAM,CAACC,iBAAP,EAAP;EACD,CAFS;EAIV;;;;;;EAIOD,8BAAP,UAAkBE,OAAlB,EAAiC;IAC/B,KAAKC,KAAL,CAAWC,IAAX,CACEd,gBAAgB,CAACe,kBADnB,EAEEd,KAAK,CAACe,QAAN,CAAe,KAAKH,KAApB,EAA2Bb,gBAAgB,CAACe,kBAA5C,EAAgE,IAAhE,CAFF;IAIA,KAAKE,YAAL,CAAkB;MAAEL,OAAO;IAAT,CAAlB;IAEA,KAAKC,KAAL,CAAWK,IAAX,CAAgBZ,aAAa,CAACM,OAAD,CAA7B;IACAR,SAAS,CAAC;MAAES,KAAK,EAAE,KAAKA,KAAd;MAAqBM,OAAO,EAAE,KAAKA;IAAnC,CAAD,EAA+C,IAA/C,CAAT;IAEA,KAAKN,KAAL,CAAWC,IAAX,CACEd,gBAAgB,CAACoB,iBADnB,EAEEnB,KAAK,CAACe,QAAN,CAAe,KAAKH,KAApB,EAA2Bb,gBAAgB,CAACoB,iBAA5C,EAA+D,IAA/D,CAFF;EAID,CAdM;EAgBP;;;;;EAGUV,oCAAV;IACE,OAAOP,OAAP;EACD,CAFS;;EAGZ;AAAC,CA7CD,CAA4BD,IAA5B","names":["VIEW_LIFE_CIRCLE","Event","Plot","adaptor","statistic","DEFAULT_OPTIONS","getLiquidData","addWaterWave","__extends","_this","Liquid","getDefaultOptions","percent","chart","emit","BEFORE_CHANGE_DATA","fromData","updateOption","data","options","AFTER_CHANGE_DATA"],"sourceRoot":"","sources":["../../../src/plots/liquid/index.ts"],"sourcesContent":["import { VIEW_LIFE_CIRCLE, Event } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { LiquidOptions } from './types';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { getLiquidData } from './utils';\n// register liquid shape\nimport './shapes/liquid';\n\nexport { addWaterWave } from './shapes/liquid';\n\nexport type { LiquidOptions };\n\n/**\n * 传说中的水波图\n */\nexport class Liquid extends Plot<LiquidOptions> {\n  /**\n   * 获取 饼图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<LiquidOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'liquid';\n\n  /**\n   * 获取 水波图 默认配置项, 供 base 获取\n   */\n  protected getDefaultOptions(): Partial<LiquidOptions> {\n    return Liquid.getDefaultOptions();\n  }\n\n  /**\n   * 更新数据\n   * @param percent\n   */\n  public changeData(percent: number) {\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null)\n    );\n    this.updateOption({ percent });\n\n    this.chart.data(getLiquidData(percent));\n    statistic({ chart: this.chart, options: this.options }, true);\n\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null)\n    );\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<LiquidOptions> {\n    return adaptor;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}