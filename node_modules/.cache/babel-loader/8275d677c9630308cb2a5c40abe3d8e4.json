{"ast":null,"code":"import { each, pick } from '@antv/util';\nimport { getCoordinateBBox } from '../../../util/coordinate';\nimport { getEllipsisText } from '../../../util/text';\nimport { translate } from '../../../util/transform';\n/**\n * @ignore\n * 将 label 限制在 Plot 范围内，将超出 Plot 范围的 label 可选择进行隐藏或者移动位置\n * @param labels\n * @param cfg\n */\n\nexport function limitInPlot(items, labels, shapes, region, cfg) {\n  if (labels.length <= 0) {\n    return;\n  }\n\n  var direction = (cfg === null || cfg === void 0 ? void 0 : cfg.direction) || ['top', 'right', 'bottom', 'left'];\n  var action = (cfg === null || cfg === void 0 ? void 0 : cfg.action) || 'translate';\n  var margin = (cfg === null || cfg === void 0 ? void 0 : cfg.margin) || 0;\n  var coordinate = labels[0].get('coordinate');\n\n  if (!coordinate) {\n    return;\n  }\n\n  var _a = getCoordinateBBox(coordinate, margin),\n      regionMinX = _a.minX,\n      regionMinY = _a.minY,\n      regionMaxX = _a.maxX,\n      regionMaxY = _a.maxY;\n\n  each(labels, function (label) {\n    var _a = label.getCanvasBBox(),\n        minX = _a.minX,\n        minY = _a.minY,\n        maxX = _a.maxX,\n        maxY = _a.maxY,\n        x = _a.x,\n        y = _a.y,\n        width = _a.width,\n        height = _a.height;\n\n    var finalX = x;\n    var finalY = y;\n\n    if (direction.indexOf('left') >= 0 && (minX < regionMinX || maxX < regionMinX)) {\n      // 超出左侧\n      finalX = regionMinX;\n    }\n\n    if (direction.indexOf('top') >= 0 && (minY < regionMinY || maxY < regionMinY)) {\n      // 超出顶部\n      finalY = regionMinY;\n    }\n\n    if (direction.indexOf('right') >= 0) {\n      if (minX > regionMaxX) {\n        // 整体超出右侧\n        finalX = regionMaxX - width;\n      } else if (maxX > regionMaxX) {\n        // 超出右侧\n        finalX = finalX - (maxX - regionMaxX);\n      }\n    }\n\n    if (direction.indexOf('bottom') >= 0) {\n      if (minY > regionMaxY) {\n        // 整体超出底部\n        finalY = regionMaxY - height;\n      } else if (maxY > regionMaxY) {\n        // 超出底部\n        finalY = finalY - (maxY - regionMaxY);\n      }\n    }\n\n    if (finalX !== x || finalY !== y) {\n      var translateX_1 = finalX - x;\n\n      if (action === 'translate') {\n        translate(label, translateX_1, finalY - y);\n      } else if (action === 'ellipsis') {\n        var textShapes = label.findAll(function (shape) {\n          return shape.get('type') === 'text';\n        });\n        textShapes.forEach(function (textShape) {\n          var style = pick(textShape.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n          var textBox = textShape.getCanvasBBox();\n          var text = getEllipsisText(textShape.attr('text'), textBox.width - Math.abs(translateX_1), style);\n          textShape.attr('text', text);\n        });\n      } else {\n        label.hide();\n      }\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["each","pick","getCoordinateBBox","getEllipsisText","translate","limitInPlot","items","labels","shapes","region","cfg","length","direction","action","margin","coordinate","get","regionMinX","regionMinY","regionMaxX","regionMaxY","label","getCanvasBBox","minX","minY","maxX","maxY","x","y","width","height","finalX","finalY","indexOf","translateX_1","textShapes","findAll","shape","forEach","textShape","style","attr","textBox","text","Math","abs","hide"],"sourceRoot":"","sources":["../../../../src/geometry/label/layout/limit-in-plot.ts"],"sourcesContent":["import { each, pick } from '@antv/util';\nimport { BBox, IGroup, IShape } from '../../../dependents';\nimport { getCoordinateBBox } from '../../../util/coordinate';\nimport { getEllipsisText } from '../../../util/text';\nimport { translate } from '../../../util/transform';\nimport { LabelItem } from '../interface';\n\n/** limitInPlot layout 的可选配置 */\nexport interface LimitInPlotLayoutCfg {\n  /** 需要限制哪些方向上不能超过 Plot 范围，默认四个方向上都限制 */\n  direction?: ('top' | 'right' | 'bottom' | 'left')[];\n  /** 可以允许的 margin */\n  margin?: number;\n  /** 超过限制后的动作，默认 translate 移动位置; ellipsis 对 text 进行省略展示 */\n  action?: 'hide' | 'translate' | 'ellipsis';\n}\n\n/**\n * @ignore\n * 将 label 限制在 Plot 范围内，将超出 Plot 范围的 label 可选择进行隐藏或者移动位置\n * @param labels\n * @param cfg\n */\nexport function limitInPlot(\n  items: LabelItem[],\n  labels: IGroup[],\n  shapes: IShape[] | IGroup[],\n  region: BBox,\n  cfg?: LimitInPlotLayoutCfg\n) {\n  if (labels.length <= 0) {\n    return;\n  }\n  const direction = cfg?.direction || ['top', 'right', 'bottom', 'left'];\n  const action = cfg?.action || 'translate';\n  const margin = cfg?.margin || 0;\n  const coordinate = labels[0].get('coordinate');\n  if (!coordinate) {\n    return;\n  }\n  const {\n    minX: regionMinX,\n    minY: regionMinY,\n    maxX: regionMaxX,\n    maxY: regionMaxY,\n  } = getCoordinateBBox(coordinate, margin);\n\n  each(labels, (label: IGroup) => {\n    const { minX, minY, maxX, maxY, x, y, width, height } = label.getCanvasBBox();\n\n    let finalX = x;\n    let finalY = y;\n    if (direction.indexOf('left') >= 0 && (minX < regionMinX || maxX < regionMinX)) {\n      // 超出左侧\n      finalX = regionMinX;\n    }\n    if (direction.indexOf('top') >= 0 && (minY < regionMinY || maxY < regionMinY)) {\n      // 超出顶部\n      finalY = regionMinY;\n    }\n\n    if (direction.indexOf('right') >= 0) {\n      if (minX > regionMaxX) {\n        // 整体超出右侧\n        finalX = regionMaxX - width;\n      } else if (maxX > regionMaxX) {\n        // 超出右侧\n        finalX = finalX - (maxX - regionMaxX);\n      }\n    }\n\n    if (direction.indexOf('bottom') >= 0) {\n      if (minY > regionMaxY) {\n        // 整体超出底部\n        finalY = regionMaxY - height;\n      } else if (maxY > regionMaxY) {\n        // 超出底部\n        finalY = finalY - (maxY - regionMaxY);\n      }\n    }\n\n    if (finalX !== x || finalY !== y) {\n      const translateX = finalX - x;\n      if (action === 'translate') {\n        translate(label, translateX, finalY - y);\n      } else if (action === 'ellipsis') {\n        const textShapes = label.findAll((shape) => shape.get('type') === 'text');\n        textShapes.forEach((textShape) => {\n          const style = pick(textShape.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n          const textBox = textShape.getCanvasBBox();\n          const text = getEllipsisText(textShape.attr('text'), textBox.width - Math.abs(translateX), style);\n          textShape.attr('text', text);\n        });\n      } else {\n        label.hide();\n      }\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}